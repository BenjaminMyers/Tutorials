{"version":3,"sources":["Watchman.js"],"names":["isPlatformSupported","process","env","DYLD_LIBRARY_PATH","Binaries","OSX_SOURCE_PATH","addToPathAsync","result","watchmanVersion","trim","stdout","getVersionAsync","platform"],"mappings":";;;;;;;;;;;;;;;;wEAaO;AAAA;AAAA;AAAA;AAAA;AAAA,gBACAA,qBADA;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAKLC,oBAAQC,GAAR,CAAYC,iBAAZ,GAAgCC,SAASC,eAAzC;AALK;AAAA,mBAMCD,SAASE,cAAT,CAAwB,UAAxB,CAND;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;kBAAeA,c;;;;;;yEASf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACAN,qBADA;AAAA;AAAA;AAAA;;AAAA,8CAEI,IAFJ;;AAAA;AAIL;AACA;AACIO,kBANC;AAAA;AAAA;AAAA,mBAQY,0BAAW,UAAX,EAAuB,CAAC,WAAD,CAAvB,CARZ;;AAAA;AAQHA,kBARG;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA,8CAYI,IAZJ;;AAAA;AAcDC,2BAdC,GAciB,iBAAEC,IAAF,CAAOF,OAAOG,MAAd,CAdjB;AAAA,8CAeEF,eAfF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;kBAAeG,e;;;;;QAbNX,mB,GAAAA,mB;;AALhB;;;;AACA;;;;AAEA;;IAAYI,Q;;;;;;AAEL,SAASJ,mBAAT,GAA+B;AACpC,SAAOC,QAAQW,QAAR,KAAqB,QAA5B;AACD","file":"../Watchman.js","sourcesContent":["/**\n * @flow\n */\n\nimport _ from 'lodash';\nimport spawnAsync from '@exponent/spawn-async';\n\nimport * as Binaries from './Binaries';\n\nexport function isPlatformSupported() {\n  return process.platform === 'darwin';\n}\n\nexport async function addToPathAsync() {\n  if (!isPlatformSupported()) {\n    return;\n  }\n\n  process.env.DYLD_LIBRARY_PATH = Binaries.OSX_SOURCE_PATH;\n  await Binaries.addToPathAsync('watchman');\n}\n\nexport async function getVersionAsync() {\n  if (!isPlatformSupported()) {\n    return null;\n  }\n  // TODO: Use `watchman version` here and add a timeout\n  // version is more correct, but will sometimes hang\n  let result;\n  try {\n    result = await spawnAsync('watchman', ['--version']);\n  } catch (e) {\n    // TODO: Maybe check to make sure this is ENOENT (which means watchman isn't installed)\n    // We might want to report other errors\n    return null;\n  }\n  let watchmanVersion = _.trim(result.stdout);\n  return watchmanVersion;\n}\n"],"sourceRoot":"/Users/Jesse/Exponent/newuniverse/universe/dev/xdl/gulp/src"}