{"version":3,"sources":["project/Doctor.js"],"names":["projectRoot","Watchman","isPlatformSupported","getVersionAsync","watchmanVersion","lt","MIN_WATCHMAN_VERSION","warningMessage","process","platform","ProjectUtils","logWarning","_checkWatchmanVersionAsync","exp","i","PNG_FIELDS","length","fieldName","value","get","promise","head","url","response","contentType","headers","helpUrl","_validatePngFieldsAsync","pkg","FATAL","message","validate","WARNING","sdkVersion","dependencies","sdkVersionsAsync","sdkVersions","keys","join","validation","reactNativeVersionWarnings","reactNative","match","reactNativeTag","substring","lastIndexOf","sdkVersionObject","major","Versions","parseSdkVersionFromTag","NO_ISSUES","_validatePackageJsonAndExpJsonAsync","readConfigJsonAsync","nodeModulesPath","result","statSync","isDirectory","logError","isFile","Binaries","sourceBashLoginScriptsAsync","npmls","cwd","npmlsCommand","stdout","npmlsDependencies","JSON","parse","errorStrings","forEach","versionRequired","dependency","installedDependency","version","peerMissing","push","satisfies","includes","from","_validateNodeModulesAsync","validateAsync","validateLowLatencyAsync","validateWithNetworkAsync","allowNetwork","status","exponentDep","EXPONENT_SDK_NOT_INSTALLED","mainFilePath","main","readFile","mainFile","EXPONENT_SDK_INSTALLED_AND_IMPORTED","EXPONENT_SDK_NOT_IMPORTED","getExponentSdkStatus"],"mappings":"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","file":"../../project/Doctor.js","sourcesContent":["/**\n * @flow\n */\n\nimport 'instapromise';\n\nimport _ from 'lodash';\nimport semver from 'semver';\nimport fs from 'fs';\nimport joi from 'joi';\nimport path from 'path';\nimport request from 'request';\nimport spawnAsync from '@exponent/spawn-async';\n\nimport Api from '../Api';\nimport * as Binaries from '../Binaries';\nimport Config from '../Config';\nimport ExpSchema from './ExpSchema';\nimport * as ProjectUtils from './ProjectUtils';\nimport * as Versions from '../Versions';\nimport * as Watchman from '../Watchman';\n\nexport const NO_ISSUES = 0;\nexport const WARNING = 1;\nexport const FATAL = 2;\n\nconst MIN_WATCHMAN_VERSION = '4.6.0';\n\nasync function _checkWatchmanVersionAsync(projectRoot) {\n  // There's no point in checking any of this stuff if watchman isn't supported on this platform\n  if (!Watchman.isPlatformSupported()) {\n    return;\n  }\n\n  let watchmanVersion = await Watchman.getVersionAsync();\n\n  // If we can't get the watchman version, `getVersionAsync` will return `null`\n  if (!watchmanVersion) {\n    // watchman is probably just not installed\n    return;\n  }\n\n  if (semver.lt(watchmanVersion, MIN_WATCHMAN_VERSION)) {\n    let warningMessage = `Warning: You are using an old version of watchman (v${watchmanVersion}). This may cause problems for you.\\n\\nWe recommend that you either uninstall watchman (and XDE will try to use a copy it is bundled with) or upgrade watchman to a newer version, at least v${MIN_WATCHMAN_VERSION}.`;\n\n    // Add a note about homebrew if the user is on a Mac\n    if (process.platform === 'darwin') {\n      warningMessage += `\\n\\nIf you are using homebrew, try:\\nbrew uninstall watchman; brew install watchman`;\n    }\n    ProjectUtils.logWarning(projectRoot, 'exponent', warningMessage);\n  }\n}\n\nasync function _validatePngFieldsAsync(projectRoot, exp) {\n  for (let i = 0; i < ExpSchema.PNG_FIELDS.length; i++) {\n    let fieldName = ExpSchema.PNG_FIELDS[i];\n    let value = _.get(exp, fieldName);\n    if (value) {\n      let response = await request.promise.head({\n        url: value,\n      });\n\n      let contentType = response.headers['content-type'];\n      if (contentType !== 'image/png') {\n        ProjectUtils.logWarning(projectRoot, 'exponent', `Warning: Problem in exp.json. Field '${fieldName}' must be a .png file but returned content-type ${contentType}. See ${Config.helpUrl}.`);\n      }\n    }\n  }\n}\n\nasync function _validatePackageJsonAndExpJsonAsync(exp, pkg, projectRoot): Promise<number>  {\n  if (!exp || !pkg) {\n    // readConfigJsonAsync already logged an error\n    return FATAL;\n  }\n\n  try {\n    await _checkWatchmanVersionAsync(projectRoot);\n  } catch (e) {\n    ProjectUtils.logWarning(projectRoot, 'exponent', `Warning: Problem checking watchman version. ${e.message}.`);\n  }\n\n  try {\n    await joi.promise.validate(exp, ExpSchema);\n  } catch (e) {\n    ProjectUtils.logWarning(projectRoot, 'exponent', `Warning: Problem in exp.json. ${e.message}. See ${Config.helpUrl}.`);\n    return WARNING;\n  }\n\n  // Warn if sdkVersion is UNVERSIONED\n  let sdkVersion = exp.sdkVersion;\n  if (sdkVersion === 'UNVERSIONED') {\n    ProjectUtils.logWarning(projectRoot, 'exponent', `Warning: Using unversioned Exponent SDK. Do not publish until you set sdkVersion in exp.json`);\n    return WARNING;\n  }\n\n  // react-native is required\n  if (!pkg.dependencies || !pkg.dependencies['react-native']) {\n    ProjectUtils.logWarning(projectRoot, 'exponent', `Warning: Can't find react-native in package.json dependencies`);\n    return WARNING;\n  }\n\n  // TODO(adam) set up caching for this\n  let sdkVersions = await Api.sdkVersionsAsync();\n  if (!sdkVersions) {\n    ProjectUtils.logWarning(projectRoot, 'exponent', `Warning: Couldn't connect to SDK versions server`);\n    return WARNING;\n  }\n\n  if (!sdkVersions[sdkVersion]) {\n    ProjectUtils.logWarning(projectRoot, 'exponent', `Warning: Invalid sdkVersion. Valid options are ${_.keys(sdkVersions).join(', ')}`);\n    return WARNING;\n  }\n\n  if (Config.validation.reactNativeVersionWarnings) {\n    let reactNative = pkg.dependencies['react-native'];\n\n    // Exponent fork of react-native is required\n    if (!reactNative.match(/exponentjs\\/react-native/)) {\n      ProjectUtils.logWarning(projectRoot, 'exponent', `Warning: Not using the Exponent fork of react-native. See ${Config.helpUrl}.`);\n      return WARNING;\n    }\n\n    let reactNativeTag = reactNative.substring(reactNative.lastIndexOf('#') + 1);\n    let sdkVersionObject = sdkVersions[sdkVersion];\n    try {\n      // TODO: Want to be smarter about this. Maybe warn if there's a newer version.\n      if (semver.major(Versions.parseSdkVersionFromTag(reactNativeTag)) !==\n          semver.major(Versions.parseSdkVersionFromTag(sdkVersionObject['exponentReactNativeTag']))) {\n        ProjectUtils.logWarning(projectRoot, 'exponent', `Warning: Invalid version of react-native for sdkVersion ${sdkVersion}. Use github:exponentjs/react-native#${sdkVersionObject['exponentReactNativeTag']}`);\n        return WARNING;\n      }\n    } catch (e) {\n      // TODO: Fix when we have more time\n      return NO_ISSUES;\n\n      // ProjectUtils.logWarning(projectRoot, 'exponent', `Warning: ${reactNative} is not a valid version. Version must be in the form of sdk-x.y.z. Please update your package.json file.`);\n      // return WARNING;\n    }\n  }\n\n  // TODO: Check any native module versions here\n\n  return NO_ISSUES;\n}\n\n// TODO: use `yarn check`\nasync function _validateNodeModulesAsync(projectRoot): Promise<number>  {\n  let { exp, pkg } = await ProjectUtils.readConfigJsonAsync(projectRoot);\n  let nodeModulesPath = projectRoot;\n  if (exp.nodeModulesPath) {\n    nodeModulesPath = path.join(projectRoot, exp.nodeModulesPath);\n  }\n\n  // Check to make sure node_modules exists at all\n  try {\n    let result = fs.statSync(path.join(nodeModulesPath, 'node_modules'));\n    if (!result.isDirectory()) {\n      ProjectUtils.logError(projectRoot, 'exponent', `Error: node_modules directory is missing. Please run \\`npm install\\` in your project directory.`);\n      return FATAL;\n    }\n  } catch (e) {\n    ProjectUtils.logError(projectRoot, 'exponent', `Error: node_modules directory is missing. Please run \\`npm install\\` in your project directory.`);\n    return FATAL;\n  }\n\n  // Check to make sure react native is installed\n  try {\n    let result = fs.statSync(path.join(nodeModulesPath, 'node_modules', 'react-native', 'local-cli', 'cli.js'));\n    if (!result.isFile()) {\n      ProjectUtils.logError(projectRoot, 'exponent', `Error: React native is not installed. Please run \\`npm install\\` in your project directory.`);\n      return FATAL;\n    }\n  } catch (e) {\n    ProjectUtils.logError(projectRoot, 'exponent', `Error: React native is not installed. Please run \\`npm install\\` in your project directory.`);\n    return FATAL;\n  }\n\n  // Validate all package.json dependencies are installed and up to date\n  if (pkg.dependencies) {\n    await Binaries.sourceBashLoginScriptsAsync();\n\n    let npmls;\n    try {\n      let npmlsCommand = await spawnAsync('npm', ['ls', '--json', '--depth', '1'], {\n        cwd: nodeModulesPath,\n      });\n      npmls = npmlsCommand.stdout;\n    } catch (e) {\n      npmls = e.stdout; // `npm ls` sometimes returns an error code\n    }\n\n    if (!npmls) {\n      ProjectUtils.logWarning(projectRoot, 'exponent', `Problem checking node_modules dependencies. Could not run \\`npm ls\\` in ${projectRoot}.`);\n      return WARNING;\n    }\n\n    let npmlsDependencies;\n    try {\n      npmlsDependencies = JSON.parse(npmls).dependencies;\n    } catch (e) {\n      ProjectUtils.logWarning(projectRoot, 'exponent', `Problem checking node_modules dependencies: ${e.message}`);\n      return WARNING;\n    }\n\n    if (npmlsDependencies) {\n      let errorStrings = [];\n      _.forEach(pkg.dependencies, (versionRequired, dependency) => {\n        let installedDependency = npmlsDependencies[dependency];\n        if (!installedDependency || !installedDependency.version) {\n          if (installedDependency && installedDependency.peerMissing) {\n            errorStrings.push(`Warning: '${dependency}' peer depencency missing. Run \\`npm ls\\` in ${nodeModulesPath} to see full warning.`);\n          } else {\n            errorStrings.push(`Warning: '${dependency}' dependency is not installed.`);\n          }\n        } else if (!semver.satisfies(installedDependency.version, versionRequired) && !versionRequired.includes(installedDependency.from)) {\n          // For react native, `from` field looks like \"exponentjs/react-native#sdk-8.0.1\" and\n          // versionRequired looks like \"github:exponentjs/react-native#sdk-8.0.0\"\n          errorStrings.push(`Warning: Installed version ${installedDependency.version} of '${dependency}' does not satisfy required version ${versionRequired}`);\n        }\n      });\n\n      if (errorStrings.length > 0) {\n        errorStrings.push(`\\nIf there is an issue running your project, please run \\`npm install\\` in ${nodeModulesPath} and restart.`);\n        ProjectUtils.logWarning(projectRoot, 'exponent', errorStrings.join('\\n'));\n        return WARNING;\n      }\n    }\n  }\n\n  return NO_ISSUES;\n}\n\nexport async function validateLowLatencyAsync(projectRoot: string): Promise<number> {\n  return validateAsync(projectRoot, false);\n}\n\nexport async function validateWithNetworkAsync(projectRoot: string): Promise<number> {\n  return validateAsync(projectRoot, true);\n}\n\nasync function validateAsync(projectRoot: string, allowNetwork: boolean): Promise<number> {\n  let { exp, pkg } = await ProjectUtils.readConfigJsonAsync(projectRoot);\n  let status = await _validatePackageJsonAndExpJsonAsync(exp, pkg, projectRoot);\n\n  // Don't block this! It has to make network requests so it's slow.\n  if (allowNetwork) {\n    _validatePngFieldsAsync(projectRoot, exp);\n  }\n\n\n  // TODO: this broke once we started using yarn because `npm ls` doesn't\n  // work on a yarn install. Use `yarn check` in the future.\n  /*if (status !== FATAL && exp && !exp.ignoreNodeModulesValidation) {\n    let nodeModulesStatus = await _validateNodeModulesAsync(projectRoot);\n    if (nodeModulesStatus > status) {\n      return nodeModulesStatus;\n    }\n  }*/\n\n  return status;\n}\n\nexport const EXPONENT_SDK_INSTALLED_AND_IMPORTED = 0;\nexport const EXPONENT_SDK_NOT_INSTALLED = 1;\nexport const EXPONENT_SDK_NOT_IMPORTED = 2;\n\nexport async function getExponentSdkStatus(projectRoot: string): Promise<number> {\n  let { pkg } = await ProjectUtils.readConfigJsonAsync(projectRoot);\n  try {\n    let exponentDep = pkg.dependencies['exponent'];\n    if (!exponentDep) {\n      return EXPONENT_SDK_NOT_INSTALLED;\n    }\n\n    let mainFilePath = path.join(projectRoot, pkg.main);\n    let mainFile = await fs.readFile.promise(mainFilePath, 'utf8');\n\n    // TODO: support separate .ios.js and .android.js files\n    if (mainFile.includes(`from 'exponent'`) || mainFile.includes(`require('exponent')`)) {\n      return EXPONENT_SDK_INSTALLED_AND_IMPORTED;\n    } else {\n      return EXPONENT_SDK_NOT_IMPORTED;\n    }\n  } catch (e) {\n    return EXPONENT_SDK_NOT_IMPORTED;\n  }\n}\n"],"sourceRoot":"/Users/Jesse/Exponent/newuniverse/universe/dev/xdl/gulp/src"}