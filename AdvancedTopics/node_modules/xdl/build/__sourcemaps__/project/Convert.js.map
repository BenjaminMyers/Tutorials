{"version":3,"sources":["project/Convert.js"],"names":["projectDir","unsupportedPackagesUsed","nodeModulesPath","join","nextStepMessagePath","removeSync","console","log","npmInstallError","cwd","stdio","nextStepMessage","showCompatibilityMessage","outputFileSync","installAndInstructAsync","projectName","projectDescription","projectEntryPoint","projectSlug","toLowerCase","expJsonTargetPath","babelRcTargetPath","packageJsonSourcePath","packageJsonTargetPath","expJson","name","description","slug","writeFileSync","spaces","packageJson","readFileSync","dependencies","forEach","unsupportedPackages","dep","push","main","convertProjectAsync","packages","length","map","pkg"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;yEAgGA,kBAAuCA,UAAvC,EAAmDC,uBAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AACMC,2BADN,GACwB,eAAKC,IAAL,CAAUH,UAAV,EAAsB,eAAtB,CADxB;AAEMI,+BAFN,GAE4B,eAAKD,IAAL,CAAUH,UAAV,EAAsB,0BAAtB,CAF5B;;;AAIE,8BAAIK,UAAJ,CAAeH,eAAf;AACAI,oBAAQC,GAAR,CAAY,mDAAZ;AACAD,oBAAQC,GAAR,CAAY,uDAAZ;AACIC,2BAPN,GAOwB,KAPxB;AAAA;AAAA;AAAA,mBASU,0BAAW,KAAX,EAAkB,CAAC,SAAD,CAAlB,EAA+B,EAAEC,KAAKT,UAAP,EAAmBU,OAAO,SAA1B,EAA/B,CATV;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAWIJ,oBAAQC,GAAR,CAAY,IAAZ;AACAC,8BAAkB,IAAlB;;AAZJ;AAeEF,oBAAQC,GAAR,CAAY,IAAZ;AACAD,oBAAQC,GAAR,CAAY,uDAAZ;AACAD,oBAAQC,GAAR,CAAY,mCAAZ;AACAD,oBAAQC,GAAR,CAAY,uDAAZ;;AAEA,gBAAIC,eAAJ,EAAqB;AACnBF,sBAAQC,GAAR,CAAY,IAAZ;AACAD,sBAAQC,GAAR,CAAY,oJAAZ;AACD;;AAEDD,oBAAQC,GAAR,CAAY,IAAZ;AACMI,2BA1BR,ihBA+BKC,yBAAyBX,uBAAzB,CA/BL;;AAkCEK,oBAAQC,GAAR,CAAYI,eAAZ;AACA,8BAAIE,cAAJ,CAAmBT,mBAAnB,EAAwCO,eAAxC;AACAL,oBAAQC,GAAR,CAAY,+EAAZ;;AApCF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;kBAAeO,uB;;;;;AA5Ff;;;;AAEA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;;wEAQe,iBAAmCd,UAAnC;AAAA,QAAuDe,WAAvD,SAAuDA,WAAvD;AAAA,QAAoEC,kBAApE,SAAoEA,kBAApE;AAAA,QAAwFC,iBAAxF,SAAwFA,iBAAxF;AAAA;AAAA;AAAA;AAAA;AAAA;AACTC,uBADS,GACK,uBAAKH,YAAYI,WAAZ,EAAL,CADL;AAGTC,6BAHS,GAGW,eAAKjB,IAAL,CAAUH,UAAV,EAAsB,WAAtB,CAHX;AAITqB,6BAJS,GAIW,eAAKlB,IAAL,CAAUH,UAAV,EAAsB,WAAtB,CAJX;AAMTsB,iCANS,GAMe,eAAKnB,IAAL,CAAUH,UAAV,EAAsB,eAAtB,CANf;AAOTuB,iCAPS,GAOe,eAAKpB,IAAL,CAAUH,UAAV,EAAsB,eAAtB,CAPf;;AASb;;AACIwB,mBAVS;;AAWbA,oBAAQC,IAAR,GAAeV,WAAf;AACAS,oBAAQE,WAAR,GAAsBV,sBAAsB,gBAA5C;AACAQ,oBAAQG,IAAR,GAAeT,WAAf;AACA,+BAASU,aAAT,CAAuBR,iBAAvB,EAA0CI,OAA1C,EAAmD,EAACK,QAAQ,CAAT,EAAnD;AACAvB,oBAAQC,GAAR,CAAY,gBAAZ;;AAEA;AACIN,mCAlBS,GAkBiB,EAlBjB;AAmBT6B,uBAnBS,GAmBK,mBAASC,YAAT,CAAsBT,qBAAtB,CAnBL;;AAoBbQ,wBAAYE,YAAZ,8BAA+BF,YAAYE,YAA3C,EAA4DA,YAA5D;;AAEA;AACA,gCAAYF,YAAYE,YAAxB,EAAsCC,OAAtC,CAA8C,eAAO;AACnD,kBAAIC,oBAAoBC,GAApB,CAAJ,EAA8B;AAC5B,oBAAIA,QAAQ,2BAAZ,EAAyC;AACvCL,8BAAYE,YAAZ,CAAyBG,GAAzB,IAAgC,6CAAhC;AACD,iBAFD,MAEO;AACL,yBAAOL,YAAYE,YAAZ,CAAyBG,GAAzB,CAAP;AACD;AACDlC,wCAAwBmC,IAAxB,CAA6BD,GAA7B;AACD;AACF,aATD;;AAWA,gBAAIlB,sBAAsB,YAAtB,IAAsCA,sBAAsB,UAA5D,IAA0EA,sBAAsB,cAAhG,IAAkHA,sBAAsB,kBAA5I,EAAgK;AAC9Ja,0BAAYO,IAAZ,GAAmBpB,iBAAnB;AACD;AACD,+BAASW,aAAT,CAAuBL,qBAAvB,EAA8CO,WAA9C,EAA2D,EAACD,QAAQ,CAAT,EAA3D;AACAvB,oBAAQC,GAAR,CAAY,sBAAZ;;AAEA;AACA;;AAEA;AACA,+BAASqB,aAAT,CAAuBP,iBAAvB,qBAA2D,EAACQ,QAAQ,CAAT,EAA3D;AACAvB,oBAAQC,GAAR,CAAY,kBAAZ;;AAEA;AA/Ca;AAAA,mBAgDPO,wBAAwBd,UAAxB,EAAoCC,uBAApC,CAhDO;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;WAAeqC,mB;;;;SAAAA,mB;;;AAmD9B,IAAMN,eAAe;AACnB,4BAA0B,QADP;AAEnB,cAAY,SAFO;AAGnB,WAAS,QAHU;AAInB,kBAAgB;AAJG,CAArB;;AAOA,IAAME,sBAAsB;AAC1B,iiBAD0B;AAG1B,gOAH0B;AAI1B,kLAJ0B;AAK1B,oLAL0B;AAM1B;AAN0B,CAA5B;;AASA,SAAStB,wBAAT,CAAkC2B,QAAlC,EAA4C;AAC1C,MAAIA,SAASC,MAAb,EAAqB;AACnB,WAAO,oEAAoED,SAASE,GAAT,CAAa,eAAO;AAC7F,qBAAaC,GAAb,UAAqBR,oBAAoBQ,GAApB,CAArB;AACD,KAF0E,EAExEvC,IAFwE,CAEnE,IAFmE,CAApE,mSAAP;AAGD,GAJD,MAIO;AACL;AACD;AACF","file":"../../project/Convert.js","sourcesContent":["/**\n * @flow\n */\n\nimport slug from 'slugify';\n\nimport path from 'path';\nimport jsonfile from 'jsonfile';\nimport fse from 'fs-extra';\nimport spawnAsync from '@exponent/spawn-async';\nimport expJsonTemplate from './templates/exp';\nimport babelRcTemplate from './templates/babelrc';\n\ntype params = {\n  projectName: string,\n  projectDescription: string,\n  projectEntryPoint: string,\n}\n\nexport default async function convertProjectAsync(projectDir:string, {projectName, projectDescription, projectEntryPoint}:params) {\n  let projectSlug = slug(projectName.toLowerCase())\n\n  let expJsonTargetPath = path.join(projectDir, '/exp.json');\n  let babelRcTargetPath = path.join(projectDir, '/.babelrc');\n\n  let packageJsonSourcePath = path.join(projectDir, '/package.json');\n  let packageJsonTargetPath = path.join(projectDir, '/package.json');\n\n  // Add values to exp.json,) save to given path\n  let expJson = {...expJsonTemplate};\n  expJson.name = projectName;\n  expJson.description = projectDescription || 'No description';\n  expJson.slug = projectSlug;\n  jsonfile.writeFileSync(expJsonTargetPath, expJson, {spaces: 2});\n  console.log('Wrote exp.json');\n\n  // Add entry point and dependencies to package.json\n  let unsupportedPackagesUsed = [];\n  let packageJson = jsonfile.readFileSync(packageJsonSourcePath);\n  packageJson.dependencies = {...packageJson.dependencies, ...dependencies};\n\n  // Remove\n  Object.keys(packageJson.dependencies).forEach(dep => {\n    if (unsupportedPackages[dep]) {\n      if (dep === 'react-native-vector-icons') {\n        packageJson.dependencies[dep] = 'github:exponentjs/react-native-vector-icons';\n      } else {\n        delete packageJson.dependencies[dep];\n      }\n      unsupportedPackagesUsed.push(dep);\n    }\n  });\n\n  if (projectEntryPoint !== 'index.*.js' && projectEntryPoint !== 'index.js' && projectEntryPoint !== 'index.ios.js' && projectEntryPoint !== 'index.android.js') {\n    packageJson.main = projectEntryPoint;\n  }\n  jsonfile.writeFileSync(packageJsonTargetPath, packageJson, {spaces: 2});\n  console.log('Updated package.json');\n\n  // TODO: Add import Exponent from 'exponent'; at the top of main file\n  // TODO: Add .exponent/* to gitignore\n\n  // Copy babelrc\n  jsonfile.writeFileSync(babelRcTargetPath, babelRcTemplate, {spaces: 2});\n  console.log('Updated .babelrc');\n\n  // Save next steps to a file, display, exit\n  await installAndInstructAsync(projectDir, unsupportedPackagesUsed);\n}\n\nconst dependencies = {\n  \"@exponent/vector-icons\": \"^1.0.1\",\n  \"exponent\": \"^10.0.0\",\n  \"react\": \"15.3.1\",\n  \"react-native\": \"github:exponentjs/react-native#sdk-10.0.0\"\n};\n\nconst unsupportedPackages = {\n  'react-native-vector-icons': `We installed @exponent/vector-icons for you instead. When you feel like it, you can change any use of react-native-vector-icons to this. But no rush, we also installed our fork of react-native-vector-icons that uses @exponent/vector-icons behind the scenes, so you don't actually *need* to make any changes.\nWhen you want to convert it, you'll just need to do something like this: \"import Icon from 'react-native-vector-icons/Ionicons'\" becomes \"import { Ionicons as Icon } from '@exponent/vector-icons'\" `,\n  'react-native-video': `Exponent provides a video component for you with the same API as react-native-video. You can use it with \"import { Components } from 'exponent';\" and <Components.Video /> in your render function. `,\n  'react-native-svg': `Exponent provides react-native-svg for you. You can use it with \"import { Components } from 'exponent';\" and <Components.Svg /> in your render function.`,\n  'react-native-maps': `Exponent provides react-native-maps for you. You can use it with \"import { Components } from 'exponent';\" and <Components.Map /> in your render function.`,\n  'react-native-linear-gradient': `Exponent provides react-native-linear-gradient for you. You can use it with \"import { Components } from 'exponent';\" and <Components.LinearGradient /> in your render function.`,\n};\n\nfunction showCompatibilityMessage(packages) {\n  if (packages.length) {\n    return `Resolve any issues with potentially incompatible packages: \\n\\n` + packages.map(pkg => {\n      return `** ${pkg}: ${unsupportedPackages[pkg]}`\n    }).join('\\n') + `\\n** This may not be an exhaustive list of packages you will need to address -- any package that has a native code dependency will need to be converted to an Exponent equivalent or removed. Refer to the SDK API reference here: https://docs.getexponent.com/versions/latest/sdk/index.html`;\n  } else {\n    return `We didn't detect any known incompatible packages, but if you have any with native dependencies installed, you will need to remove them from your project.`\n  }\n}\n\nasync function installAndInstructAsync(projectDir, unsupportedPackagesUsed) {\n  let nodeModulesPath = path.join(projectDir, '/node_modules');\n  let nextStepMessagePath = path.join(projectDir, '/exponent-next-steps.txt');\n\n  fse.removeSync(nodeModulesPath);\n  console.log('Running npm install, this may take a few minutes.');\n  console.log('-----------------------------------------------------');\n  let npmInstallError = false;\n  try {\n    await spawnAsync('npm', ['install'], { cwd: projectDir, stdio: 'inherit' });\n  } catch(e) {\n    console.log('\\n');\n    npmInstallError = true;\n\n  }\n  console.log('\\n');\n  console.log('#####################################################');\n  console.log('             npm install complete');\n  console.log('#####################################################');\n\n  if (npmInstallError) {\n    console.log('\\n');\n    console.log('* There was an error though, please read the error message, try to fix the issue and then run npm install again. No need to run exp convert again.');\n  }\n\n  console.log('\\n');\n  const nextStepMessage = `Next steps:\n------------\n1. Find your AppRegistry.registerComponent('YourApplicationName', () => YourRootComponent) call and replace it with Exponent.registerRootComponent(YourRootComponent) (you will need to import Exponent from 'exponent').\n2. Upload your app icon somewhere on the web and add it the newly created exp.json file, in the iconUrl and loading.iconUrl fields.\n3. Delete your 'android' and 'ios' directories if you have them -- you no longer need to compile any native code to run your app.\n4. ${showCompatibilityMessage(unsupportedPackagesUsed)}\n5. Open your app in XDE and run it, fix bugs as they arise.\n`\n  console.log(nextStepMessage);\n  fse.outputFileSync(nextStepMessagePath, nextStepMessage);\n  console.log('(This message has been saved to exponent-next-steps.txt for your convenience)');\n}\n"],"sourceRoot":"/Users/Jesse/Exponent/newuniverse/universe/dev/xdl/gulp/src"}