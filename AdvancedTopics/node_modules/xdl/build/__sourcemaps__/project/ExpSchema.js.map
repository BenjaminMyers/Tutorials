{"version":3,"sources":["project/ExpSchema.js"],"names":["joi","require","colorField","string","regex","meta","regexHuman","reverseDnsField","iosBundleIdentifier","pngField","uri","module","exports","object","keys","name","required","description","slug","sdkVersion","version","orientation","any","valid","primaryColor","iconUrl","notification","color","androidMode","androidCollapsedTitle","loading","exponentIconColor","exponentIconGrayscale","number","min","max","backgroundImageUrl","backgroundColor","hideExponentText","boolean","appKey","androidStatusBarColor","androidHideExponentNotificationInShellApp","scheme","alphanum","standaloneOnly","entryPoint","extra","rnCliPath","packagerOpts","ignoreNodeModulesValidation","nodeModulesPath","ios","bundleIdentifier","config","fabric","apiKey","buildSecret","googleSignIn","reservedClientId","android","package","versionCode","integer","googleMaps","certificateHash","PNG_FIELDS"],"mappings":"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","file":"../../project/ExpSchema.js","sourcesContent":["const joi = require('joi');\nconst colorField = joi.string().regex(/^#|(&#x23;)\\d{6}$/)\n  .meta({regexHuman: \"6 character long hex color string, eg: ``'#000000'``\"});\n\nconst reverseDnsField = joi.string().regex(/^[a-zA-Z][a-zA-Z0-9\\_\\.]+$/)\n  .meta({regexHuman: \"Reverse DNS notation unique name for your app. For example, host.exp.exponent, where exp.host is our domain and Exponent is our app.\"});\n\nconst iosBundleIdentifier = joi.string().regex(/^[a-zA-Z][a-zA-Z0-9\\-\\.]+$/)\n  .meta({regexHuman: \"iOS bundle identifier notation unique name for your app. For example, host.exp.exponent, where exp.host is our domain and Exponent is our app.\"});\n\n// Update the PNG_FIELDS exported value when you use this\nconst pngField = joi.string().uri();\n\nmodule.exports = joi.object().keys({\n  name: joi.string().required().description(`\n    The name of your app as it appears both within Exponent and on your home screen as a standalone app.\n  `),\n  description: joi.string().description(`\n    A short description of what your app is and why it is great.\n  `),\n  slug: joi.string().regex(/^[a-zA-Z0-9\\-]+$/).required().description(`\n    The friendly url name for publishing. eg: \\`\\`exp.host/@your-username/slug\\`\\`.\n  `),\n  sdkVersion: joi.string().regex(/^(\\d+\\.\\d+\\.\\d+)|(UNVERSIONED)$/).required().description(`\n    The Exponent sdkVersion to run the project on. This should line up with the version specified in your package.json.\n  `),\n  version: joi.string().description(`\n    Your app version, use whatever versioning scheme that you like.\n  `),\n  orientation: joi.any().valid('default', 'portrait', 'landscape').description(`\n    Lock your app to a specific orientation with \\`\\`portrait\\`\\` or \\`\\`landscape\\`\\`. Defaults to no lock.\n  `),\n  primaryColor: colorField.description(`\n    On Android, this will determine the color of your app in the multitasker. Currently this is not used on iOS, but it may be used for other purposes in the future.\n  `),\n  iconUrl: pngField.description(`\n    A url that points to your app's icon image. We recommend that you use a 512x512 png file with transparency. This icon will appear on the home screen and within the Exponent app.\n  `),\n  notification: joi.object().keys({\n    iconUrl: pngField.description(\n      `Url that points to the icon to use for push notifications. 48x48 png grayscale with transparency.`\n    ),\n    color: colorField.description(\n      `Tint color for the push notification image when it appears in the notification tray.`\n    ),\n    androidMode: joi.any().valid('default', 'collapse').description(\n      \"Show each push notification individually (``default``) or collapse into one (``collapse``).\"\n    ),\n    androidCollapsedTitle: joi.string().description(\n      \"If ``androidMode`` is set to ``collapse``, this title is used for the collapsed notification message. eg: ``'#{unread_notifications} new interactions'``.\"\n    ),\n  }).description(`\n    Configuration for remote (push) notifications.\n  `),\n  loading: joi.object().keys({\n    iconUrl: pngField.uri().description(\n      `Url that points to the icon to display while starting up the app. Image size and aspect ratio are up to you. Must be a .png.`\n    ),\n    exponentIconColor: joi.any().valid('white', 'blue').description(\n      \"If no icon is provided, we will show the Exponent logo. You can choose between ``white`` and ``blue``.\"\n    ),\n    exponentIconGrayscale: joi.number().min(0).max(1).description(\n      \"Similar to ``exponentIconColor`` but instead indicate if it should be grayscale (``1``) or not (``0``).\"\n    ),\n    backgroundImageUrl: pngField.uri().description(\n      \"Url that points to an image to fill the background of the loading screen. Image size and aspect ratio are up to you. Must be a .png.\"\n    ),\n    backgroundColor: colorField.description(\n      \"Color to fill the loading screen background\"\n    ),\n    hideExponentText: joi.boolean().description(\n      \"By default, Exponent shows some text at the bottom of the loading screen. Set this to ``true`` to disable.\"\n    ),\n  }).description(`\n    Configuration for the loading screen that users see when opening your app, while fetching & caching bundle and assets.\n  `),\n  appKey: joi.string().description(\n    \"By default, Exponent looks for the application registered with the AppRegistry as ``main``. If you would like to change this, you can specify the name in this property.\"\n  ),\n  androidStatusBarColor: colorField,\n  androidHideExponentNotificationInShellApp: joi.boolean().description(\n    \"By default, Exponent adds a notification to your app with refresh button and debug info. Set this to ``true`` to disable.\"\n  ),\n  scheme: joi.string().alphanum().description(\n    \"Url scheme to link into your app. For example, if we set this to ``'rnplay'``, then rnplay:// urls would open your app when tapped.\"\n  ).meta({standaloneOnly: true}),\n\n  entryPoint: joi.string().description(`\n    The relative path to your main JavaScript file.\n  `),\n\n  extra: joi.object().description(`\n    Any extra fields you want to pass to your experience.\n  `),\n  rnCliPath: joi.string(),\n  packagerOpts: joi.object(),\n  ignoreNodeModulesValidation: joi.boolean(),\n  nodeModulesPath: joi.string(),\n\n  ios: joi.object().keys({\n    bundleIdentifier: iosBundleIdentifier.description(\n      \"The bundle identifier for your iOS standalone app. You make it up, but it needs to be unique on the App Store. See `this StackOverflow question <http://stackoverflow.com/questions/11347470/what-does-bundle-identifier-mean-in-the-ios-project>`_.\"\n    ),\n    config: joi.object().keys({\n      fabric: joi.object().keys({\n        apiKey: joi.string().alphanum().description('Your Fabric API key'),\n        buildSecret: joi.string().alphanum().description('Your Fabric build secret'),\n      }).description(\n        \"`Twitter Fabric <https://get.fabric.io/>`_ keys to hook up Crashlytics and other services.\"\n      ),\n      googleSignIn: joi.object().keys({\n        reservedClientId: joi.string().description(\n          'The reserved client id url scheme. Can be found in `GoogeService-Info.plist`.'\n        ),\n      }).description(\n        \"`Google Sign-In iOS SDK <https://developers.google.com/identity/sign-in/ios/start-integrating>`_ keys for your standalone app.\"\n      ),\n    }),\n  }).description('iOS standalone app specific configuration').meta({standaloneOnly: true}),\n  android: joi.object().keys({\n    package: reverseDnsField.description(\n      \"The package name for your Android standalone app. You make it up, but it needs to be unique on the Play Store. See `this StackOverflow question <http://stackoverflow.com/questions/6273892/android-package-name-convention>`_.\"\n    ),\n    versionCode: joi.number().integer().description(\n      \"Version number required by Google Play. Increment by one for each release. https://developer.android.com/studio/publish/versioning.html.\"\n    ),\n    config: joi.object().keys({\n      fabric: joi.object().keys({\n        apiKey: joi.string().alphanum().description('Your Fabric API key'),\n        buildSecret: joi.string().alphanum().description('Your Fabric build secret'),\n      }).description(\n        \"`Twitter Fabric <https://get.fabric.io/>`_ keys to hook up Crashlytics and other services.\"\n      ),\n      googleMaps: joi.object().keys({\n        apiKey: joi.string().alphanum().description('Your Google Maps Android SDK API key'),\n      }).description(\n        \"`Google Maps Android SDK <https://developers.google.com/maps/documentation/android-api/signup>`_ key for your standalone app.\"\n      ),\n      googleSignIn: joi.object().keys({\n        apiKey: joi.string().alphanum().description('The Android API key. Can be found in the credentials section of the developer console or in `google-services.json`.'),\n        certificateHash: joi.string().alphanum().description(\n          'The SHA-1 hash of the signing certificate used to build the apk without any separator `:`. Can be found in `google-services.json`. https://developers.google.com/android/guides/client-auth'\n        ),\n      }).description(\n        \"`Google Sign-In Android SDK <https://developers.google.com/identity/sign-in/android/start-integrating>`_ keys for your standalone app.\"\n      ),\n    }),\n  }).description('Android standalone app specific configuration').meta({standaloneOnly: true}),\n});\n\nmodule.exports.PNG_FIELDS = ['iconUrl', 'notification.iconUrl', 'loading.iconUrl', 'loading.backgroundImageUrl'];\n"],"sourceRoot":"/Users/Jesse/Exponent/newuniverse/universe/dev/xdl/gulp/src"}