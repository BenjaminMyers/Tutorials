{"version":3,"sources":["__tests__/Versions-test.js"],"names":["jest","mock","request","require","Versions","__setMockResponse","body","describe","it","facebookReactNativeVersionsAsync","facebookReactNativeVersions","expect","toEqual","facebookReactNativeVersionToExponentVersionAsync","exponentVersion"],"mappings":"AAAA;;;;;;;;;;;;AAEAA,KAAKC,IAAL,CAAU,gBAAV;AACAD,KAAKC,IAAL,CAAU,IAAV;AACAD,KAAKC,IAAL,CAAU,QAAV;AACAD,KAAKC,IAAL,CAAU,SAAV;;AAEA,IAAMC,UAAUC,QAAQ,SAAR,CAAhB;AACA,IAAMC,WAAWD,QAAQ,aAAR,CAAjB;;AAEAD,QAAQG,iBAAR,CAA0B;AACxBC,QAAM;AACJ,kBAAc,OADV;AAEJ,sBAAkB,OAFd;AAGJ,mBAAe;AACb,eAAS;AACP,kCAA0B,WADnB;AAEP,sCAA8B;AAFvB,OADI;AAKb,eAAS;AACP,kCAA0B,WADnB;AAEP,sCAA8B;AAFvB,OALI;AASb,eAAS;AACP,kCAA0B,WADnB;AAEP,sCAA8B;AAFvB;AATI;AAHX;AADkB,CAA1B;;AAqBAC,SAAS,kCAAT,EAA6C,YAAM;AACjDC,KAAG,oCAAH,6DAAyC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACCJ,SAASK,gCAAT,EADD;;AAAA;AACnCC,uCADmC;;AAEvCC,mBAAOD,2BAAP,EAAoCE,OAApC,CAA4C,CAAC,QAAD,EAAW,QAAX,CAA5C;;AAFuC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAzC;AAID,CALD;;AAOAL,SAAS,kDAAT,EAA6D,YAAM;AACjEC,KAAG,yCAAH,6DAA8C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAChBJ,SAASS,gDAAT,CAA0D,QAA1D,CADgB;;AAAA;AACxCC,2BADwC;;AAE5CH,mBAAOG,eAAP,EAAwBF,OAAxB,CAAgC,OAAhC;;AAF4C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA9C;;AAKAJ,KAAG,8DAAH,6DAAmE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACrCJ,SAASS,gDAAT,CAA0D,QAA1D,CADqC;;AAAA;AAC7DC,2BAD6D;;AAEjEH,mBAAOG,eAAP,EAAwBF,OAAxB,CAAgC,OAAhC;;AAFiE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAnE;;AAKAJ,KAAG,uBAAH,6DAA4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACEJ,SAASS,gDAAT,CAA0D,QAA1D,CADF;;AAAA;AACtBC,2BADsB;;AAE1BH,mBAAOG,eAAP,EAAwBF,OAAxB,CAAgC,OAAhC;;AAF0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA5B;;AAKAJ,KAAG,8CAAH,6DAAmD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACrBJ,SAASS,gDAAT,CAA0D,QAA1D,CADqB;;AAAA;AAC7CC,2BAD6C;;AAEjDH,mBAAOG,eAAP,EAAwBF,OAAxB,CAAgC,IAAhC;;AAFiD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAnD;AAID,CApBD","file":"../../__tests__/Versions-test.js","sourcesContent":["'use strict';\n\njest.mock('analytics-node');\njest.mock('fs');\njest.mock('../Env');\njest.mock('request');\n\nconst request = require('request');\nconst Versions = require('../Versions');\n\nrequest.__setMockResponse({\n  body: {\n    \"iosVersion\": \"1.6.0\",\n    \"androidVersion\": \"1.6.0\",\n    \"sdkVersions\": {\n      \"5.0.0\": {\n        \"exponentReactNativeTag\": \"sdk-5.0.0\",\n        \"facebookReactNativeVersion\": \"0.24.0\",\n      },\n      \"6.0.0\": {\n        \"exponentReactNativeTag\": \"sdk-6.0.0\",\n        \"facebookReactNativeVersion\": \"0.27.0\",\n      },\n      \"7.0.0\": {\n        \"exponentReactNativeTag\": \"sdk-7.0.0\",\n        \"facebookReactNativeVersion\": \"0.27.0\",\n      },\n    },\n  },\n});\n\ndescribe('facebookReactNativeVersionsAsync', () => {\n  it('checks list of versions is correct', async () => {\n    let facebookReactNativeVersions = await Versions.facebookReactNativeVersionsAsync();\n    expect(facebookReactNativeVersions).toEqual(['0.24.0', '0.27.0']);\n  });\n});\n\ndescribe('facebookReactNativeVersionToExponentVersionAsync', () => {\n  it('returns exponent version when available', async () => {\n    let exponentVersion = await Versions.facebookReactNativeVersionToExponentVersionAsync('0.24.0');\n    expect(exponentVersion).toEqual('5.0.0');\n  });\n\n  it('returns newest exponent version when multiple versions exist', async () => {\n    let exponentVersion = await Versions.facebookReactNativeVersionToExponentVersionAsync('0.27.0');\n    expect(exponentVersion).toEqual('7.0.0');\n  });\n\n  it('ignores patch version', async () => {\n    let exponentVersion = await Versions.facebookReactNativeVersionToExponentVersionAsync('0.27.3');\n    expect(exponentVersion).toEqual('7.0.0');\n  });\n\n  it('returns null when no matching version exists', async () => {\n    let exponentVersion = await Versions.facebookReactNativeVersionToExponentVersionAsync('0.23.0');\n    expect(exponentVersion).toEqual(null);\n  });\n});\n"],"sourceRoot":"/Users/Jesse/Exponent/newuniverse/universe/dev/xdl/gulp/src"}