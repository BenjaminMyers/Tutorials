{"version":3,"sources":["UrlUtils.js"],"names":["projectRoot","opts","constructUrlAsync","constructBundleUrlAsync","constructManifestUrlAsync","entryPoint","ext","hostType","urlType","bundleUrl","mainModulePath","guessMainModulePath","constructBundleQueryParamsAsync","dev","minify","queryParams","constructUrlWithExtensionAsync","constructPublishUrlAsync","constructAssetsUrlAsync","constructDebuggerHostAsync","encodeURIComponent","hasOwnProperty","strict","pluginModule","Exp","expJsonForRoot","readAsync","exp","supportsAssetPlugins","Versions","gteSdkVersion","isPackager","schema","object","keys","any","valid","lanType","boolean","urlRandomness","string","promise","validate","INVALID_OPTIONS","toString","ProjectSettings","getPackagerOptsAsync","defaultOpts","readPackagerInfoAsync","packagerInfo","protocol","hostname","port","packagerPort","exponentServerPort","address","ngrokUrl","packagerNgrokUrl","exponentServerNgrokUrl","Error","pnu","parse","url_","randomIdentifier","sevenDigitIdentifier","randomIdentifierForUser","someRandomness","domainify","getPlatformSpecificBundleUrl","replace","length","alphabet","result","i","j","Math","floor","random","c","substr","username","join","s","toLowerCase","url","platform","includes","ENTRY_POINT_PLATFORM_TEMPLATE_STRING"],"mappings":"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","file":"../UrlUtils.js","sourcesContent":["/**\n * @flow\n */\n\nimport 'instapromise';\n\nimport ip from 'ip';\nimport joi from 'joi';\nimport os from 'os';\nimport url from 'url';\n\nimport ErrorCode from './ErrorCode';\nimport * as Exp from './Exp';\nimport * as ProjectSettings from './ProjectSettings';\nimport * as Versions from './Versions';\nimport XDLError from './XDLError';\n\nexport async function constructBundleUrlAsync(projectRoot: string, opts: any) {\n  return constructUrlAsync(projectRoot, opts, true);\n}\n\nexport async function constructManifestUrlAsync(projectRoot: string, opts: any) {\n  return constructUrlAsync(projectRoot, opts, false);\n}\n\nexport async function constructUrlWithExtensionAsync(projectRoot: string, entryPoint: string, ext: string) {\n  let bundleUrl = await constructBundleUrlAsync(projectRoot, {\n    hostType: 'localhost',\n    urlType: 'http',\n  });\n\n  let mainModulePath = guessMainModulePath(entryPoint);\n  bundleUrl += `/${mainModulePath}.${ext}`;\n\n  let queryParams = await constructBundleQueryParamsAsync(projectRoot, {\n    dev: false,\n    minify: true,\n  });\n  return `${bundleUrl}?${queryParams}`;\n}\n\nexport async function constructPublishUrlAsync(projectRoot: string, entryPoint: string) {\n  return await constructUrlWithExtensionAsync(projectRoot, entryPoint, 'bundle');\n}\n\nexport async function constructAssetsUrlAsync(projectRoot: string, entryPoint: string) {\n  return await constructUrlWithExtensionAsync(projectRoot, entryPoint, 'assets');\n}\n\nexport async function constructDebuggerHostAsync(projectRoot: string) {\n  return constructUrlAsync(projectRoot, {\n    urlType: 'no-protocol',\n  }, true);\n}\n\nexport async function constructBundleQueryParamsAsync(projectRoot: string, opts: any) {\n  let queryParams = `dev=${encodeURIComponent(!!opts.dev)}`;\n\n  if (opts.hasOwnProperty('strict')) {\n    queryParams += `&strict=${encodeURIComponent(!!opts.strict)}`;\n  }\n\n  if (opts.hasOwnProperty('minify')) {\n    queryParams += `&minify=${encodeURIComponent(!!opts.minify)}`;\n  }\n\n  queryParams += '&hot=false';\n\n  let pluginModule = 'exponent/tools/hashAssetFiles';\n  queryParams += `&assetPlugin=${pluginModule}`;\n\n  // Only sdk-10.1.0+ supports the assetPlugin parameter. We use only the\n  // major version in the sdkVersion field, so check for 11.0.0 to be sure.\n  let exp = await Exp.expJsonForRoot(projectRoot).readAsync();\n  let supportsAssetPlugins = Versions.gteSdkVersion(exp, '11.0.0');\n  if (!supportsAssetPlugins) {\n    queryParams += '&includeAssetFileHashes=true';\n  }\n\n  return queryParams;\n}\n\nexport async function constructUrlAsync(projectRoot: string, opts: any, isPackager: bool) {\n  if (opts) {\n    let schema = joi.object().keys({\n      urlType: joi.any().valid('exp', 'http', 'redirect', 'no-protocol'),\n      lanType: joi.any().valid('ip', 'hostname'),\n      hostType: joi.any().valid('localhost', 'lan', 'tunnel'),\n      dev: joi.boolean(),\n      strict: joi.boolean(),\n      minify: joi.boolean(),\n      urlRandomness: joi.string(),\n    });\n\n    try {\n      await joi.promise.validate(opts, schema);\n    } catch (e) {\n      throw new XDLError(ErrorCode.INVALID_OPTIONS, e.toString());\n    }\n  }\n\n  let defaultOpts = await ProjectSettings.getPackagerOptsAsync(projectRoot);\n  if (!opts) {\n    opts = defaultOpts;\n  } else {\n    opts = Object.assign(defaultOpts, opts);\n  }\n\n  let packagerInfo = await ProjectSettings.readPackagerInfoAsync(projectRoot);\n\n  let protocol = 'exp';\n  if (opts.urlType === 'http') {\n    protocol = 'http';\n  } else if (opts.urlType === 'no-protocol') {\n    protocol = null;\n  }\n\n  let hostname;\n  let port;\n\n  if (opts.hostType === 'localhost') {\n    hostname = 'localhost';\n    port = isPackager ? packagerInfo.packagerPort : packagerInfo.exponentServerPort;\n  } else if (opts.hostType === 'lan') {\n    if (opts.lanType === 'ip') {\n      hostname = ip.address();\n    } else {\n      // Some old versions of OSX work with hostname but not local ip address.\n      hostname = os.hostname();\n    }\n    port = isPackager ? packagerInfo.packagerPort : packagerInfo.exponentServerPort;\n  } else {\n    let ngrokUrl = isPackager ? packagerInfo.packagerNgrokUrl : packagerInfo.exponentServerNgrokUrl;\n    if (!ngrokUrl) {\n      throw new Error(\"Can't get tunnel URL because ngrok not started yet\");\n    }\n\n    let pnu = url.parse(ngrokUrl);\n    hostname = pnu.hostname;\n    port = pnu.port;\n  }\n\n  let url_ = '';\n  if (protocol) {\n    url_ += `${protocol}://`;\n  }\n\n  if (!hostname) {\n    throw new Error('Hostname cannot be inferred.');\n  }\n\n  url_ += hostname;\n\n  if (port) {\n    url_ += `:${port}`;\n  } else {\n    url_ += ':80'; // DUMB BUG FIX!!!! Old RN needs a port number\n  }\n\n  if (opts.urlType === 'redirect') {\n    return `https://exp.host/--/to-exp/${encodeURIComponent(url_)}`;\n  }\n\n  return url_;\n}\n\nexport function guessMainModulePath(entryPoint: string) {\n  return entryPoint.replace(/\\.js$/, '');\n}\n\nexport function randomIdentifier(length: number = 6) {\n  let alphabet = '23456789qwertyuipasdfghjkzxcvbnm';\n  let result = '';\n  for (let i = 0; i < length; i++) {\n    let j = Math.floor(Math.random() * alphabet.length);\n    let c = alphabet.substr(j, 1);\n    result += c;\n  }\n  return result;\n}\n\nexport function sevenDigitIdentifier() {\n  return `${randomIdentifier(3)}-${randomIdentifier(4)}`;\n}\n\nexport function randomIdentifierForUser(username: string) {\n  return `${username}-${randomIdentifier(3)}-${randomIdentifier(2)}`;\n}\n\nexport function someRandomness() {\n  return [randomIdentifier(2), randomIdentifier(3)].join('-');\n}\n\nexport function domainify(s: string) {\n  return s.toLowerCase().replace(/[^a-z0-9-]/g, '-').replace(/^-+/, '').replace(/-+$/, '');\n}\n\nexport function getPlatformSpecificBundleUrl(url: string, platform: string) {\n  if (url.includes(Exp.ENTRY_POINT_PLATFORM_TEMPLATE_STRING)) {\n    return url.replace(Exp.ENTRY_POINT_PLATFORM_TEMPLATE_STRING, platform);\n  } else {\n    return url;\n  }\n}\n"],"sourceRoot":"/Users/Jesse/Exponent/newuniverse/universe/dev/xdl/gulp/src"}