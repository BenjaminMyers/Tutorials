{"version":3,"sources":["Simulator.js"],"names":["args","_isLicenseOutOfDate","stdout","stderr","XCODE_LICENSE_NOT_ACCEPTED","global","error","join","_xcrunAsync","result","execAsync","trim","console","warn","_isSimulatorInstalledAsync","_isSimulatorRunningAsync","info","_waitForSimulatorRunningAsync","_openSimulatorAsync","zeroMeansNo","_bootedSimulatorDeviceAsync","bootedDevice","infoJson","JSON","parse","_listSimulatorDevicesAsync","simulatorDeviceInfo","devices","runtime","i","length","device","state","_quitSimulatorAsync","_dirForSimulatorDevice","udid","simDir","promise","cwd","matches","_isExponentAppInstalledOnCurrentBootedSimulatorAsync","_waitForExponentAppInstalledOnCurrentBootedSimulatorAsync","regex","regexMatch","exec","_exponentVersionOnCurrentBootedSimulatorAsync","versionsAsync","versions","installedVersion","lt","iosVersion","notifications","code","OLD_IOS_APP_VERSION","_checkExponentUpToDateAsync","dir","_simulatorCacheDirectory","readdir","filesInDir","sync","url","extract","_downloadSimulatorAppAsync","START_LOADING","STOP_LOADING","_installExponentOnSimulatorAsync","message","includes","_uninstallExponentAppFromSimulatorAsync","_lastUrl","upgradeExponentAsync","_openUrlInSimulatorAsync","_tryOpeningSimulatorInstallingExponentAndOpeningLinkAsync","isXDLError","Analytics","logEvent","platform","openUrlInSimulatorSafeAsync","isPlatformSupported","process","text","lower","toLowerCase","resolve","dotExponentHomeDirectory"],"mappings":"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","file":"../Simulator.js","sourcesContent":["/**\n * @flow\n */\n\nimport 'instapromise';\n\nimport delayAsync from 'delay-async';\nimport download from 'download';\nimport existsAsync from 'exists-async';\nimport glob from 'glob';\nimport homeDir from 'home-dir';\nimport mkdirp from 'mkdirp';\nimport osascript from '@exponent/osascript';\nimport path from 'path';\nimport semver from 'semver';\nimport spawnAsync from '@exponent/spawn-async';\nimport rimraf from 'rimraf';\nimport fs from 'fs';\n\nimport * as Analytics from './Analytics';\nimport Api from './Api';\nimport ErrorCode from './ErrorCode';\nimport Logger from './Logger';\nimport NotificationCode from './NotificationCode';\nimport UserSettings from './UserSettings';\nimport XDLError from './XDLError';\n\nlet _lastUrl = null;\n\nexport function isPlatformSupported() {\n  return process.platform === 'darwin';\n}\n\nfunction _isLicenseOutOfDate(text) {\n  if (!text) {\n    return false;\n  }\n\n  let lower = text.toLowerCase();\n  return lower.includes('xcode') && lower.includes('license');\n}\n\nasync function _xcrunAsync(args) {\n  try {\n    return await spawnAsync('xcrun', args);\n  } catch (e) {\n    if (_isLicenseOutOfDate(e.stdout) || _isLicenseOutOfDate(e.stderr)) {\n      throw new XDLError(ErrorCode.XCODE_LICENSE_NOT_ACCEPTED, 'Xcode license is not accepted. Please run `sudo xcodebuild -license`.');\n    } else {\n      Logger.global.error(`Error running \\`xcrun ${args.join(' ')}\\`: ${e.stderr}`);\n      throw e;\n    }\n  }\n}\n\n// Simulator installed\nexport async function _isSimulatorInstalledAsync() {\n  let result;\n  try {\n    result = (await osascript.execAsync('id of app \"Simulator\"')).trim();\n  } catch (e) {\n    console.error(\"Can't determine id of Simulator app; the Simulator is most likely not installed on this machine\", e);\n    Logger.global.error(\"Simulator not installed. Please visit https://developer.apple.com/xcode/download/ to download Xcode and the iOS simulator\");\n    return false;\n  }\n  if (result === 'com.apple.iphonesimulator') {\n    return true;\n  } else {\n    console.warn(\"Simulator is installed but is identified as '\" + result + \"'; don't know what that is.\");\n    Logger.global.error(\"Simulator not installed. Please visit https://developer.apple.com/xcode/download/ to download Xcode and the iOS simulator\");\n    return false;\n  }\n}\n\n// Simulator opened\nexport async function _openSimulatorAsync() {\n  if (!(await _isSimulatorRunningAsync())) {\n    Logger.global.info(\"Opening iOS simulator\");\n    await spawnAsync('open', ['-a', 'Simulator']);\n    await _waitForSimulatorRunningAsync();\n  }\n}\n\nexport async function _isSimulatorRunningAsync() {\n  let zeroMeansNo = (await osascript.execAsync('tell app \"System Events\" to count processes whose name is \"Simulator\"')).trim();\n  if (zeroMeansNo === '0') {\n    return false;\n  }\n\n  let bootedDevice = await _bootedSimulatorDeviceAsync();\n  return !!bootedDevice;\n}\n\nasync function _waitForSimulatorRunningAsync() {\n  if (await _isSimulatorRunningAsync()) {\n    return true;\n  } else {\n    await delayAsync(100);\n    return await _waitForSimulatorRunningAsync();\n  }\n}\n\nasync function _listSimulatorDevicesAsync() {\n  let infoJson = await _xcrunAsync(['simctl', 'list', 'devices', '--json']);\n  let info = JSON.parse(infoJson.stdout);\n  return info;\n}\n\nasync function _bootedSimulatorDeviceAsync() {\n  let simulatorDeviceInfo = await _listSimulatorDevicesAsync();\n  for (let runtime in simulatorDeviceInfo.devices) {\n    let devices = simulatorDeviceInfo.devices[runtime];\n    for (let i = 0; i < devices.length; i++) {\n      let device = devices[i];\n      if (device.state === 'Booted') {\n        return device;\n      }\n    }\n  }\n  return null;\n}\n\nexport function _dirForSimulatorDevice(udid: string) {\n  return path.resolve(homeDir(), 'Library/Developer/CoreSimulator/Devices', udid);\n}\n\nexport async function _quitSimulatorAsync() {\n  return await osascript.execAsync('tell application \"Simulator\" to quit');\n}\n\n// Exponent installed\nexport async function _isExponentAppInstalledOnCurrentBootedSimulatorAsync() {\n  let device = await _bootedSimulatorDeviceAsync();\n  if (!device) {\n    return false;\n  }\n  let simDir = await _dirForSimulatorDevice(device.udid);\n  let matches = await glob.promise('./data/Containers/Data/Application/*/Library/Caches/Snapshots/host.exp.Exponent', {cwd: simDir});\n\n  return (matches.length > 0);\n}\n\nexport async function _waitForExponentAppInstalledOnCurrentBootedSimulatorAsync() {\n  if (await _isExponentAppInstalledOnCurrentBootedSimulatorAsync()) {\n    return true;\n  } else {\n    await delayAsync(100);\n    return await _waitForExponentAppInstalledOnCurrentBootedSimulatorAsync();\n  }\n}\n\nexport async function _exponentVersionOnCurrentBootedSimulatorAsync() {\n  let device = await _bootedSimulatorDeviceAsync();\n  if (!device) {\n    return null;\n  }\n  let simDir = await _dirForSimulatorDevice(device.udid);\n  let matches = await glob.promise('./data/Containers/Bundle/Application/*/Exponent-*.app', {cwd: simDir});\n\n  if (matches.length === 0) {\n    return null;\n  }\n\n  let regex = /Exponent\\-([0-9\\.]+)\\.app/;\n  let regexMatch = regex.exec(matches[0]);\n  if (regexMatch.length < 2) {\n    return null;\n  }\n\n  return regexMatch[1];\n}\n\nexport async function _checkExponentUpToDateAsync() {\n  let versions = await Api.versionsAsync();\n  let installedVersion = await _exponentVersionOnCurrentBootedSimulatorAsync();\n\n  if (!installedVersion || semver.lt(installedVersion, versions.iosVersion)) {\n    Logger.notifications.warn({code: NotificationCode.OLD_IOS_APP_VERSION}, 'This version of the Exponent app is out of date. Uninstall the app and run again to upgrade.');\n  }\n}\n\nexport async function _downloadSimulatorAppAsync() {\n  let versions = await Api.versionsAsync();\n  let dir = path.join(_simulatorCacheDirectory(), `Exponent-${versions.iosVersion}.app`);\n\n  if (await existsAsync(dir)) {\n    let filesInDir = await fs.promise.readdir(dir);\n    if (filesInDir.length > 0) {\n      return dir;\n    } else {\n      rimraf.sync(dir);\n    }\n  }\n\n  mkdirp.sync(dir);\n  try {\n    let url = `https://s3.amazonaws.com/exp-ios-simulator-apps/Exponent-${versions.iosVersion}.app.zip`;\n    await download(url, dir, {extract: true});\n  } catch (e) {\n    rimraf.sync(dir);\n    throw e;\n  }\n\n  return dir;\n}\n\nexport async function _installExponentOnSimulatorAsync() {\n  Logger.global.info(`Downloading latest version of Exponent`);\n  Logger.notifications.info({code: NotificationCode.START_LOADING});\n  let dir = await _downloadSimulatorAppAsync();\n  Logger.global.info(\"Installing Exponent on iOS simulator\");\n  let result = await _xcrunAsync(['simctl', 'install', 'booted', dir]);\n  Logger.notifications.info({code: NotificationCode.STOP_LOADING});\n  return result;\n}\n\nexport async function _uninstallExponentAppFromSimulatorAsync() {\n  try {\n    Logger.global.info('Uninstalling Exponent from iOS simulator.');\n    await _xcrunAsync(['simctl', 'uninstall', 'booted', 'host.exp.Exponent']);\n  } catch (e) {\n    if (e.message && e.message.includes('No devices are booted.')) {\n      return null;\n    } else {\n      console.error(e);\n      throw e;\n    }\n  }\n}\n\nexport function _simulatorCacheDirectory() {\n  let dotExponentHomeDirectory = UserSettings.dotExponentHomeDirectory();\n  let dir = path.join(dotExponentHomeDirectory, 'ios-simulator-app-cache');\n  mkdirp.sync(dir);\n  return dir;\n}\n\nexport async function upgradeExponentAsync() {\n  if (!(await _isSimulatorInstalledAsync())) {\n    return;\n  }\n\n  await _openSimulatorAsync();\n\n  await _uninstallExponentAppFromSimulatorAsync();\n  await _installExponentOnSimulatorAsync();\n\n  if (_lastUrl) {\n    Logger.global.info(`Opening ${_lastUrl} in Exponent.`);\n    await _xcrunAsync(['simctl', 'openurl', 'booted', _lastUrl]);\n    _lastUrl = null;\n  }\n}\n\n// Open Url\nexport async function _openUrlInSimulatorAsync(url: string) {\n  _lastUrl = url;\n  _checkExponentUpToDateAsync(); // let this run in background\n  return await _xcrunAsync(['simctl', 'openurl', 'booted', url]);\n}\n\nexport async function _tryOpeningSimulatorInstallingExponentAndOpeningLinkAsync(url: string) {\n  await _openSimulatorAsync();\n\n  if (!(await _isExponentAppInstalledOnCurrentBootedSimulatorAsync())) {\n    await _installExponentOnSimulatorAsync();\n    await _waitForExponentAppInstalledOnCurrentBootedSimulatorAsync();\n  }\n\n  Logger.global.info(`Opening ${url} in iOS simulator`);\n  await _openUrlInSimulatorAsync(url);\n}\n\nexport async function openUrlInSimulatorSafeAsync(url: string) {\n  if (!(await _isSimulatorInstalledAsync())) {\n    return;\n  }\n\n  try {\n    await _tryOpeningSimulatorInstallingExponentAndOpeningLinkAsync(url);\n  } catch (e) {\n    if (e.isXDLError) {\n      // Hit some internal error, don't try again.\n      // This includes Xcode license errors\n      Logger.global.error(e.message);\n      return;\n    }\n\n    Logger.global.error('Error running app. Uninstalling exponent and trying again.');\n\n    try {\n      await _uninstallExponentAppFromSimulatorAsync();\n    } catch (uninstallError) {}\n\n    await _tryOpeningSimulatorInstallingExponentAndOpeningLinkAsync(url);\n  }\n\n  Analytics.logEvent('Open Url on Device', {\n    platform: 'ios',\n  });\n}\n"],"sourceRoot":"/Users/Jesse/Exponent/newuniverse/universe/dev/xdl/gulp/src"}