{"version":3,"sources":["__mocks__/request.js"],"names":["extend","require","request","jest","genMockFromModule","asyncCallback","cb","apply","initParams","uri","options","callback","params","mockImpl","Error","currentResponse","__setMockResponse","object","module","exports"],"mappings":"AAAA;;;;;;;;;;;;AAEA,IAAIA,SAASC,QAAQ,QAAR,CAAb;;AAEA,IAAMC,UAAUC,KAAKC,iBAAL,CAAuB,SAAvB,CAAhB;;AAEA,SAASC,aAAT,CAAuBC,EAAvB,EAA2B;AACzB,SAAO,YAAW;AAAA;AAAA;;AAChB,gCAAa;AAAA,aAAMA,GAAGC,KAAH,mBAAN;AAAA,KAAb;AACD,GAFD;AAGD;;AAED;AACA,SAASC,UAAT,CAAoBC,GAApB,EAAyBC,OAAzB,EAAkCC,QAAlC,EAA4C;AAC1C,MAAI,OAAOD,OAAP,KAAmB,UAAvB,EAAmC;AACjCC,eAAWD,OAAX;AACD;;AAED,MAAIE,SAAS,EAAb;AACA,MAAI,QAAOF,OAAP,uDAAOA,OAAP,OAAmB,QAAvB,EAAiC;AAC/BV,WAAOY,MAAP,EAAeF,OAAf,EAAwB,EAACD,QAAD,EAAxB;AACD,GAFD,MAEO,IAAI,OAAOA,GAAP,KAAe,QAAnB,EAA6B;AAClCT,WAAOY,MAAP,EAAe,EAACH,QAAD,EAAf;AACD,GAFM,MAEA;AACLT,WAAOY,MAAP,EAAeH,GAAf;AACD;;AAEDG,SAAOD,QAAP,GAAkBA,YAAYC,OAAOD,QAArC;AACA,SAAOC,MAAP;AACD;;AAEDV,QAAQW,QAAR,CAAiB,UAACJ,GAAD,EAAMC,OAAN,EAAeC,QAAf,EAA4B;AAC3C,MAAI,OAAOF,GAAP,KAAe,WAAnB,EAAgC;AAC9B,UAAM,IAAIK,KAAJ,CAAU,iDAAV,CAAN;AACD;;AAED,MAAIF,SAASJ,WAAWC,GAAX,EAAgBC,OAAhB,EAAyBC,QAAzB,CAAb;AACAA,aAAWN,cAAcO,OAAOD,QAArB,CAAX;AACAA,WAAS,IAAT,EAAeI,eAAf;AACD,CARD;;AAUA,IAAIA,wBAAJ;AACAb,QAAQc,iBAAR,GAA4B,UAACC,MAAD;AAAA,SAAYF,kBAAkBE,MAA9B;AAAA,CAA5B;;AAEAC,OAAOC,OAAP,GAAiBjB,OAAjB","file":"../../__mocks__/request.js","sourcesContent":["'use strict';\n\nlet extend = require('extend');\n\nconst request = jest.genMockFromModule('request');\n\nfunction asyncCallback(cb) {\n  return function() {\n    setImmediate(() => cb.apply(this, arguments));\n  };\n}\n\n// organize params for patch, post, put, head, del\nfunction initParams(uri, options, callback) {\n  if (typeof options === 'function') {\n    callback = options;\n  }\n\n  var params = {};\n  if (typeof options === 'object') {\n    extend(params, options, {uri});\n  } else if (typeof uri === 'string') {\n    extend(params, {uri});\n  } else {\n    extend(params, uri);\n  }\n\n  params.callback = callback || params.callback;\n  return params;\n}\n\nrequest.mockImpl((uri, options, callback) => {\n  if (typeof uri === 'undefined') {\n    throw new Error('undefined is not a valid uri or options object.');\n  }\n\n  var params = initParams(uri, options, callback);\n  callback = asyncCallback(params.callback);\n  callback(null, currentResponse);\n});\n\nlet currentResponse;\nrequest.__setMockResponse = (object) => currentResponse = object;\n\nmodule.exports = request;\n"],"sourceRoot":"/Users/Jesse/Exponent/newuniverse/universe/dev/xdl/gulp/src"}