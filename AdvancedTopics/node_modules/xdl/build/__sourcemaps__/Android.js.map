{"version":3,"sources":["Android.js"],"names":["args","Binaries","addToPathAsync","result","stdout","errorMessage","trim","stderr","startsWith","beginningOfAdbErrorMessage","substring","length","Error","_getAdbOutputAsync","devices","lines","split","_isDeviceAttachedAsync","shift","listOfDevicesWithoutFirstLine","join","includes","_isDeviceAuthorizedAsync","packages","i","line","_isExponentInstalledAsync","info","regex","regexMatch","exec","_exponentVersionAsync","versionsAsync","versions","installedVersion","lt","androidVersion","notifications","warn","code","OLD_ANDROID_APP_VERSION","_checkExponentUpToDateAsync","apkPath","_apkCacheDirectory","url","_downloadApkAsync","global","START_LOADING","path","STOP_LOADING","_installExponentAsync","_uninstallExponentAsync","_assertDeviceReadyAsync","_lastUrl","error","message","upgradeExponentAsync","genymotionMessage","_openUrlAsync","installedExponent","Analytics","logEvent","platform","openUrlSafeAsync","projectRoot","startAdbReverseAsync","UrlUtils","constructManifestUrlAsync","projectUrl","openProjectAsync","ProjectSettings","readPackagerInfoAsync","packagerInfo","adbReverse","packagerPort","exponentServerPort","adbReverseRemove","stopAdbReverseAsync","port","debug","isPlatformSupported","process","dotExponentHomeDirectory","dir","sync"],"mappings":"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","file":"../Android.js","sourcesContent":["/**\n * @flow\n */\n\nimport 'instapromise';\n\nimport _ from 'lodash';\nimport download from 'download';\nimport spawnAsync from '@exponent/spawn-async';\nimport existsAsync from 'exists-async';\nimport mkdirp from 'mkdirp';\nimport path from 'path';\nimport semver from 'semver';\n\nimport * as Analytics from './Analytics';\nimport * as Binaries from './Binaries';\nimport Api from './Api';\nimport Logger from './Logger';\nimport NotificationCode from './NotificationCode';\nimport * as ProjectSettings from './ProjectSettings';\nimport UserSettings from './UserSettings';\nimport * as UrlUtils from './UrlUtils';\n\nlet _lastUrl = null;\nconst beginningOfAdbErrorMessage = 'error: ';\n\nexport function isPlatformSupported() {\n  return process.platform === 'darwin' || process.platform === 'win32' || process.platform === 'linux';\n}\n\nasync function _getAdbOutputAsync(args) {\n  await Binaries.addToPathAsync('adb');\n\n  try {\n    let result = await spawnAsync('adb', args);\n    return result.stdout;\n  } catch (e) {\n    let errorMessage = _.trim(e.stderr);\n    if (errorMessage.startsWith(beginningOfAdbErrorMessage)) {\n      errorMessage = errorMessage.substring(beginningOfAdbErrorMessage.length);\n    }\n    throw new Error(errorMessage);\n  }\n}\n\n// Device attached\nasync function _isDeviceAttachedAsync() {\n  let devices = await _getAdbOutputAsync(['devices']);\n  let lines = _.trim(devices).split(/\\r?\\n/);\n  // First line is \"List of devices\".\n  return lines.length > 1;\n}\n\nasync function _isDeviceAuthorizedAsync() {\n  let devices = await _getAdbOutputAsync(['devices']);\n  let lines = _.trim(devices).split(/\\r?\\n/);\n  lines.shift();\n  let listOfDevicesWithoutFirstLine = lines.join('\\n');\n  // result looks like \"072c4cf200e333c7\tdevice\" when authorized\n  // and \"072c4cf200e333c7\tunauthorized\" when not.\n  return listOfDevicesWithoutFirstLine.includes('device');\n}\n\n// Exponent installed\nasync function _isExponentInstalledAsync() {\n  let packages = await _getAdbOutputAsync(['shell', 'pm', 'list', 'packages', '-f']);\n  let lines = packages.split(/\\r?\\n/);\n  for (let i = 0; i < lines.length; i++) {\n    let line = lines[i];\n    if (line.includes('host.exp.exponent.test')) {\n      continue;\n    }\n\n    if (line.includes('host.exp.exponent')) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nasync function _exponentVersionAsync() {\n  let info = await _getAdbOutputAsync(['shell', 'dumpsys', 'package', 'host.exp.exponent']);\n\n  let regex = /versionName\\=([0-9\\.]+)/;\n  let regexMatch = regex.exec(info);\n  if (regexMatch.length < 2) {\n    return null;\n  }\n\n  return regexMatch[1];\n}\n\nasync function _checkExponentUpToDateAsync() {\n  let versions = await Api.versionsAsync();\n  let installedVersion = await _exponentVersionAsync();\n\n  if (!installedVersion || semver.lt(installedVersion, versions.androidVersion)) {\n    Logger.notifications.warn({code: NotificationCode.OLD_ANDROID_APP_VERSION}, 'This version of the Exponent app is out of date. Uninstall the app and run again to upgrade.');\n  }\n}\n\nfunction _apkCacheDirectory() {\n  let dotExponentHomeDirectory = UserSettings.dotExponentHomeDirectory();\n  let dir = path.join(dotExponentHomeDirectory, 'android-apk-cache');\n  mkdirp.sync(dir);\n  return dir;\n}\n\nasync function _downloadApkAsync() {\n  let versions = await Api.versionsAsync();\n  let apkPath = path.join(_apkCacheDirectory(), `Exponent-${versions.androidVersion}.apk`);\n\n  if (await existsAsync(apkPath)) {\n    return apkPath;\n  }\n\n  let url = `https://s3.amazonaws.com/exp-android-apks/Exponent-${versions.androidVersion}.apk`;\n  await download(url, _apkCacheDirectory());\n  return apkPath;\n}\n\nasync function _installExponentAsync() {\n  Logger.global.info(`Downloading latest version of Exponent`);\n  Logger.notifications.info({code: NotificationCode.START_LOADING});\n  let path = await _downloadApkAsync();\n  Logger.global.info(`Installing Exponent on device`);\n  let result = await _getAdbOutputAsync(['install', path]);\n  Logger.notifications.info({code: NotificationCode.STOP_LOADING});\n  return result;\n}\n\nasync function _uninstallExponentAsync() {\n  Logger.global.info('Uninstalling Exponent from Android device.');\n  return await _getAdbOutputAsync(['uninstall', 'host.exp.exponent']);\n}\n\nexport async function upgradeExponentAsync() {\n  try {\n    if (!(await _assertDeviceReadyAsync())) {\n      return;\n    }\n\n    await _uninstallExponentAsync();\n    await _installExponentAsync();\n\n    if (_lastUrl) {\n      Logger.global.info(`Opening ${_lastUrl} in Exponent.`);\n      await _getAdbOutputAsync(['shell', 'am', 'start', '-a', 'android.intent.action.VIEW', '-d', _lastUrl]);\n      _lastUrl = null;\n    }\n  } catch (e) {\n    Logger.global.error(`Error running adb: ${e.message}`);\n  }\n}\n\n// Open Url\nasync function _assertDeviceReadyAsync() {\n  const genymotionMessage = `https://developer.android.com/studio/run/device.html#developer-device-options. If you are using Genymotion go to Settings -> ADB, select \"Use custom Android SDK tools\", and point it at your Android SDK directory.`;\n\n  if (!(await _isDeviceAttachedAsync())) {\n    Logger.global.error(`No Android device found. Please connect a device and follow the instructions here to enable USB debugging:\\n${genymotionMessage}`);\n    return false;\n  }\n\n  if (!(await _isDeviceAuthorizedAsync())) {\n    Logger.global.error(`This computer is not authorized to debug the device. Please follow the instructions here to enable USB debugging:\\n${genymotionMessage}`);\n    return false;\n  }\n\n  return true;\n}\n\nasync function _openUrlAsync(url: string) {\n  _lastUrl = url;\n  _checkExponentUpToDateAsync(); // let this run in background\n  return await _getAdbOutputAsync(['shell', 'am', 'start', '-a', 'android.intent.action.VIEW', '-d', url]);\n}\n\nexport async function openUrlSafeAsync(url: string) {\n  try {\n    if (!(await _assertDeviceReadyAsync())) {\n      return;\n    }\n\n    let installedExponent = false;\n    if (!(await _isExponentInstalledAsync())) {\n      await _installExponentAsync();\n      installedExponent = true;\n    }\n\n    Logger.global.info(`Opening on Android device`);\n    await _openUrlAsync(url);\n\n    Analytics.logEvent('Open Url on Device', {\n      platform: 'android',\n      installedExponent,\n    });\n  } catch (e) {\n    Logger.global.error(`Error running adb: ${e.message}`);\n  }\n}\n\nexport async function openProjectAsync(projectRoot: string) {\n  try {\n    await startAdbReverseAsync(projectRoot);\n\n    let projectUrl = await UrlUtils.constructManifestUrlAsync(projectRoot);\n    await openUrlSafeAsync(projectUrl);\n  } catch (e) {\n    Logger.global.error(`Error running adb: ${e.message}`);\n  }\n}\n\n// Adb reverse\nexport async function startAdbReverseAsync(projectRoot: string) {\n  let packagerInfo = await ProjectSettings.readPackagerInfoAsync(projectRoot);\n  return await adbReverse(packagerInfo.packagerPort) && await adbReverse(packagerInfo.exponentServerPort);\n}\n\nexport async function stopAdbReverseAsync(projectRoot: string) {\n  let packagerInfo = await ProjectSettings.readPackagerInfoAsync(projectRoot);\n  await adbReverseRemove(packagerInfo.packagerPort);\n  await adbReverseRemove(packagerInfo.exponentServerPort);\n}\n\nasync function adbReverse(port: number) {\n  if (!await _isDeviceAuthorizedAsync()) {\n    return false;\n  }\n\n  try {\n    await _getAdbOutputAsync(['reverse', `tcp:${port}`, `tcp:${port}`]);\n    return true;\n  } catch (e) {\n    Logger.global.warn(`Couldn't adb reverse: ${e.message}`);\n    return false;\n  }\n}\n\nasync function adbReverseRemove(port: number) {\n  if (!await _isDeviceAuthorizedAsync()) {\n    return false;\n  }\n\n  try {\n    await _getAdbOutputAsync(['reverse', '--remove', `tcp:${port}`]);\n    return true;\n  } catch (e) {\n    // Don't send this to warn because we call this preemptively sometimes\n    Logger.global.debug(`Couldn't adb reverse remove: ${e.message}`);\n    return false;\n  }\n}\n"],"sourceRoot":"/Users/Jesse/Exponent/newuniverse/universe/dev/xdl/gulp/src"}