{"version":3,"sources":["XDLError.js"],"names":["Analytics","Intercom","XDLError","code","message","isXDLError","logEvent","trackEvent","Error"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAIA;;IAAYA,S;;AACZ;;IAAYC,Q;;;;;;IAESC,Q;;;AAInB,oBAAYC,IAAZ,EAA0BC,OAA1B,EAA2C;AAAA;;AAAA,0IACnCA,OADmC;;AAGzC,UAAKD,IAAL,GAAYA,IAAZ;AACA,UAAKE,UAAL,GAAkB,IAAlB;;AAEAL,cAAUM,QAAV,CAAmB,WAAnB,EAAgC;AAC9BH,gBAD8B;AAE9BC;AAF8B,KAAhC;;AAKAH,aAASM,UAAT,CAAoB,OAApB,EAA6B;AAC3BJ,gBAD2B;AAE3BC;AAF2B,KAA7B;AAXyC;AAe1C;;;EAnBmCI,K;;kBAAjBN,Q","file":"../XDLError.js","sourcesContent":["/**\n * @flow\n */\n\nimport * as Analytics from './Analytics';\nimport * as Intercom from './Intercom';\n\nexport default class XDLError extends Error {\n  code: string;\n  isXDLError: bool;\n\n  constructor(code: string, message: string) {\n    super(message);\n\n    this.code = code;\n    this.isXDLError = true;\n\n    Analytics.logEvent('XDL Error', {\n      code,\n      message,\n    });\n\n    Intercom.trackEvent('error', {\n      code,\n      message,\n    });\n  }\n}\n"],"sourceRoot":"/Users/Jesse/Exponent/newuniverse/universe/dev/xdl/gulp/src"}