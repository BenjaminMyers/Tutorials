'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getUsernameAsync = exports.whoamiAsync = exports.logoutAsync = exports.loginAsync = exports.getCurrentUserAsync = undefined;

var _assign = require('babel-runtime/core-js/object/assign');

var _assign2 = _interopRequireDefault(_assign);

var _regenerator = require('babel-runtime/regenerator');

var _regenerator2 = _interopRequireDefault(_regenerator);

var _asyncToGenerator2 = require('babel-runtime/helpers/asyncToGenerator');

var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);

var getCurrentUserAsync = exports.getCurrentUserAsync = function () {
  var _ref = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee() {
    var diskUsername;
    return _regenerator2.default.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            _context.next = 2;
            return _UserSettings2.default.getAsync('username', null);

          case 2:
            diskUsername = _context.sent;

            if (!(_currentUser && _currentUser.username === diskUsername)) {
              _context.next = 5;
              break;
            }

            return _context.abrupt('return', _currentUser);

          case 5:
            _context.next = 7;
            return whoamiAsync();

          case 7:
            return _context.abrupt('return', _currentUser);

          case 8:
          case 'end':
            return _context.stop();
        }
      }
    }, _callee, this);
  }));

  return function getCurrentUserAsync() {
    return _ref.apply(this, arguments);
  };
}();

var loginAsync = exports.loginAsync = function () {
  var _ref2 = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee2(args) {
    var hashedPassword, data, result;
    return _regenerator2.default.wrap(function _callee2$(_context2) {
      while (1) {
        switch (_context2.prev = _context2.next) {
          case 0:
            // Default to `client` since xde is a client
            args.type = args.type || 'client';

            if (!(!args.username || !args.password)) {
              _context2.next = 3;
              break;
            }

            throw new Error("Both `username` and `password` are required to login or add a new user");

          case 3:
            hashedPassword = Password.hashPassword(args.password);
            data = (0, _assign2.default)({}, args, { hashedPassword: hashedPassword });

            delete data.password;

            // console.log("data=", data);

            _context2.next = 8;
            return _Api2.default.callMethodAsync('adduser', data);

          case 8:
            result = _context2.sent;

            if (!result.user) {
              _context2.next = 20;
              break;
            }

            Analytics.setUserProperties(result.user.username, {
              username: result.user.username
            });

            Analytics.logEvent('Login', {
              username: result.user.username
            });

            Intercom.update(result.user.username, result.user.intercomUserHash);

            delete result.type;
            _currentUser = result.user;
            // console.log("Login as", result);
            _context2.next = 17;
            return _UserSettings2.default.mergeAsync(result.user);

          case 17:
            return _context2.abrupt('return', result.user);

          case 20:
            return _context2.abrupt('return', null);

          case 21:
          case 'end':
            return _context2.stop();
        }
      }
    }, _callee2, this);
  }));

  return function loginAsync(_x) {
    return _ref2.apply(this, arguments);
  };
}();

var logoutAsync = exports.logoutAsync = function () {
  var _ref3 = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee3() {
    var result;
    return _regenerator2.default.wrap(function _callee3$(_context3) {
      while (1) {
        switch (_context3.prev = _context3.next) {
          case 0:
            if (_currentUser) {
              Analytics.logEvent('Logout', {
                username: _currentUser.username
              });
            }

            _context3.next = 3;
            return _Api2.default.callMethodAsync('logout', []);

          case 3:
            result = _context3.sent;
            _context3.next = 6;
            return _UserSettings2.default.deleteKeyAsync('username');

          case 6:
            _currentUser = null;

            Intercom.update(null, null);

            return _context3.abrupt('return', result);

          case 9:
          case 'end':
            return _context3.stop();
        }
      }
    }, _callee3, this);
  }));

  return function logoutAsync() {
    return _ref3.apply(this, arguments);
  };
}();

var whoamiAsync = exports.whoamiAsync = function () {
  var _ref4 = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee4() {
    var result;
    return _regenerator2.default.wrap(function _callee4$(_context4) {
      while (1) {
        switch (_context4.prev = _context4.next) {
          case 0:
            _context4.prev = 0;
            _context4.next = 3;
            return _Api2.default.callMethodAsync('whoami', []);

          case 3:
            result = _context4.sent;

            if (result.user) {
              _currentUser = result.user;

              Analytics.setUserProperties(result.user.username, {
                username: result.user.username
              });

              Intercom.update(result.user.username, result.user.intercomUserHash);
            } else {
              Intercom.update(null, null);
            }
            return _context4.abrupt('return', result.user);

          case 8:
            _context4.prev = 8;
            _context4.t0 = _context4['catch'](0);

            // Intercom should show up no matter what
            Intercom.update(null, null);
            throw _context4.t0;

          case 12:
          case 'end':
            return _context4.stop();
        }
      }
    }, _callee4, this, [[0, 8]]);
  }));

  return function whoamiAsync() {
    return _ref4.apply(this, arguments);
  };
}();

var getUsernameAsync = exports.getUsernameAsync = function () {
  var _ref5 = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee5() {
    var user;
    return _regenerator2.default.wrap(function _callee5$(_context5) {
      while (1) {
        switch (_context5.prev = _context5.next) {
          case 0:
            _context5.next = 2;
            return getCurrentUserAsync();

          case 2:
            user = _context5.sent;

            if (!user) {
              _context5.next = 7;
              break;
            }

            return _context5.abrupt('return', user.username);

          case 7:
            return _context5.abrupt('return', null);

          case 8:
          case 'end':
            return _context5.stop();
        }
      }
    }, _callee5, this);
  }));

  return function getUsernameAsync() {
    return _ref5.apply(this, arguments);
  };
}();

var _Analytics = require('./Analytics');

var Analytics = _interopRequireWildcard(_Analytics);

var _Api = require('./Api');

var _Api2 = _interopRequireDefault(_Api);

var _Intercom = require('./Intercom');

var Intercom = _interopRequireWildcard(_Intercom);

var _Password = require('./Password');

var Password = _interopRequireWildcard(_Password);

var _UserSettings = require('./UserSettings');

var _UserSettings2 = _interopRequireDefault(_UserSettings);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _currentUser = null;
//# sourceMappingURL=__sourcemaps__/User.js.map
