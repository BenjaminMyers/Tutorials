'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getExponentSdkStatus = exports.EXPONENT_SDK_NOT_IMPORTED = exports.EXPONENT_SDK_NOT_INSTALLED = exports.EXPONENT_SDK_INSTALLED_AND_IMPORTED = exports.validateWithNetworkAsync = exports.validateLowLatencyAsync = exports.FATAL = exports.WARNING = exports.NO_ISSUES = undefined;

var _typeof2 = require('babel-runtime/helpers/typeof');

var _typeof3 = _interopRequireDefault(_typeof2);

var _regenerator = require('babel-runtime/regenerator');

var _regenerator2 = _interopRequireDefault(_regenerator);

var _asyncToGenerator2 = require('babel-runtime/helpers/asyncToGenerator');

var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);

var _checkWatchmanVersionAsync = function () {
  var _ref = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee(projectRoot) {
    var watchmanVersion, warningMessage;
    return _regenerator2.default.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            if (Watchman.isPlatformSupported()) {
              _context.next = 2;
              break;
            }

            return _context.abrupt('return');

          case 2:
            _context.next = 4;
            return Watchman.getVersionAsync();

          case 4:
            watchmanVersion = _context.sent;

            if (watchmanVersion) {
              _context.next = 7;
              break;
            }

            return _context.abrupt('return');

          case 7:

            if (_semver2.default.lt(watchmanVersion, MIN_WATCHMAN_VERSION)) {
              warningMessage = 'Warning: You are using an old version of watchman (v' + watchmanVersion + '). This may cause problems for you.\n\nWe recommend that you either uninstall watchman (and XDE will try to use a copy it is bundled with) or upgrade watchman to a newer version, at least v' + MIN_WATCHMAN_VERSION + '.';

              // Add a note about homebrew if the user is on a Mac

              if (process.platform === 'darwin') {
                warningMessage += '\n\nIf you are using homebrew, try:\nbrew uninstall watchman; brew install watchman';
              }
              ProjectUtils.logWarning(projectRoot, 'exponent', warningMessage);
            }

          case 8:
          case 'end':
            return _context.stop();
        }
      }
    }, _callee, this);
  }));

  return function _checkWatchmanVersionAsync(_x) {
    return _ref.apply(this, arguments);
  };
}();

var _validatePngFieldsAsync = function () {
  var _ref2 = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee2(projectRoot, exp) {
    var i, fieldName, value, response, contentType;
    return _regenerator2.default.wrap(function _callee2$(_context2) {
      while (1) {
        switch (_context2.prev = _context2.next) {
          case 0:
            i = 0;

          case 1:
            if (!(i < _ExpSchema2.default.PNG_FIELDS.length)) {
              _context2.next = 13;
              break;
            }

            fieldName = _ExpSchema2.default.PNG_FIELDS[i];
            value = _lodash2.default.get(exp, fieldName);

            if (!value) {
              _context2.next = 10;
              break;
            }

            _context2.next = 7;
            return _request2.default.promise.head({
              url: value
            });

          case 7:
            response = _context2.sent;
            contentType = response.headers['content-type'];

            if (contentType !== 'image/png') {
              ProjectUtils.logWarning(projectRoot, 'exponent', 'Warning: Problem in exp.json. Field \'' + fieldName + '\' must be a .png file but returned content-type ' + contentType + '. See ' + _Config2.default.helpUrl + '.');
            }

          case 10:
            i++;
            _context2.next = 1;
            break;

          case 13:
          case 'end':
            return _context2.stop();
        }
      }
    }, _callee2, this);
  }));

  return function _validatePngFieldsAsync(_x2, _x3) {
    return _ref2.apply(this, arguments);
  };
}();

var _validatePackageJsonAndExpJsonAsync = function () {
  var _ref3 = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee3(exp, pkg, projectRoot) {
    var sdkVersion, sdkVersions, reactNative, reactNativeTag, sdkVersionObject;
    return _regenerator2.default.wrap(function _callee3$(_context3) {
      while (1) {
        switch (_context3.prev = _context3.next) {
          case 0:
            if (!(!exp || !pkg)) {
              _context3.next = 2;
              break;
            }

            return _context3.abrupt('return', FATAL);

          case 2:
            _context3.prev = 2;
            _context3.next = 5;
            return _checkWatchmanVersionAsync(projectRoot);

          case 5:
            _context3.next = 10;
            break;

          case 7:
            _context3.prev = 7;
            _context3.t0 = _context3['catch'](2);

            ProjectUtils.logWarning(projectRoot, 'exponent', 'Warning: Problem checking watchman version. ' + _context3.t0.message + '.');

          case 10:
            _context3.prev = 10;
            _context3.next = 13;
            return _joi2.default.promise.validate(exp, _ExpSchema2.default);

          case 13:
            _context3.next = 19;
            break;

          case 15:
            _context3.prev = 15;
            _context3.t1 = _context3['catch'](10);

            ProjectUtils.logWarning(projectRoot, 'exponent', 'Warning: Problem in exp.json. ' + _context3.t1.message + '. See ' + _Config2.default.helpUrl + '.');
            return _context3.abrupt('return', WARNING);

          case 19:

            // Warn if sdkVersion is UNVERSIONED
            sdkVersion = exp.sdkVersion;

            if (!(sdkVersion === 'UNVERSIONED')) {
              _context3.next = 23;
              break;
            }

            ProjectUtils.logWarning(projectRoot, 'exponent', 'Warning: Using unversioned Exponent SDK. Do not publish until you set sdkVersion in exp.json');
            return _context3.abrupt('return', WARNING);

          case 23:
            if (!(!pkg.dependencies || !pkg.dependencies['react-native'])) {
              _context3.next = 26;
              break;
            }

            ProjectUtils.logWarning(projectRoot, 'exponent', 'Warning: Can\'t find react-native in package.json dependencies');
            return _context3.abrupt('return', WARNING);

          case 26:
            _context3.next = 28;
            return _Api2.default.sdkVersionsAsync();

          case 28:
            sdkVersions = _context3.sent;

            if (sdkVersions) {
              _context3.next = 32;
              break;
            }

            ProjectUtils.logWarning(projectRoot, 'exponent', 'Warning: Couldn\'t connect to SDK versions server');
            return _context3.abrupt('return', WARNING);

          case 32:
            if (sdkVersions[sdkVersion]) {
              _context3.next = 35;
              break;
            }

            ProjectUtils.logWarning(projectRoot, 'exponent', 'Warning: Invalid sdkVersion. Valid options are ' + _lodash2.default.keys(sdkVersions).join(', '));
            return _context3.abrupt('return', WARNING);

          case 35:
            if (!_Config2.default.validation.reactNativeVersionWarnings) {
              _context3.next = 51;
              break;
            }

            reactNative = pkg.dependencies['react-native'];

            // Exponent fork of react-native is required

            if (reactNative.match(/exponentjs\/react-native/)) {
              _context3.next = 40;
              break;
            }

            ProjectUtils.logWarning(projectRoot, 'exponent', 'Warning: Not using the Exponent fork of react-native. See ' + _Config2.default.helpUrl + '.');
            return _context3.abrupt('return', WARNING);

          case 40:
            reactNativeTag = reactNative.substring(reactNative.lastIndexOf('#') + 1);
            sdkVersionObject = sdkVersions[sdkVersion];
            _context3.prev = 42;

            if (!(_semver2.default.major(Versions.parseSdkVersionFromTag(reactNativeTag)) !== _semver2.default.major(Versions.parseSdkVersionFromTag(sdkVersionObject['exponentReactNativeTag'])))) {
              _context3.next = 46;
              break;
            }

            ProjectUtils.logWarning(projectRoot, 'exponent', 'Warning: Invalid version of react-native for sdkVersion ' + sdkVersion + '. Use github:exponentjs/react-native#' + sdkVersionObject['exponentReactNativeTag']);
            return _context3.abrupt('return', WARNING);

          case 46:
            _context3.next = 51;
            break;

          case 48:
            _context3.prev = 48;
            _context3.t2 = _context3['catch'](42);
            return _context3.abrupt('return', NO_ISSUES);

          case 51:
            return _context3.abrupt('return', NO_ISSUES);

          case 52:
          case 'end':
            return _context3.stop();
        }
      }
    }, _callee3, this, [[2, 7], [10, 15], [42, 48]]);
  }));

  return function _validatePackageJsonAndExpJsonAsync(_x4, _x5, _x6) {
    return _ref3.apply(this, arguments);
  };
}();

// TODO: use `yarn check`


var _validateNodeModulesAsync = function () {
  var _ref4 = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee5(projectRoot) {
    var _this = this;

    var _ref5, exp, pkg, nodeModulesPath, result, _result, _ret;

    return _regenerator2.default.wrap(function _callee5$(_context5) {
      while (1) {
        switch (_context5.prev = _context5.next) {
          case 0:
            _context5.next = 2;
            return ProjectUtils.readConfigJsonAsync(projectRoot);

          case 2:
            _ref5 = _context5.sent;
            exp = _ref5.exp;
            pkg = _ref5.pkg;
            nodeModulesPath = projectRoot;

            if (exp.nodeModulesPath) {
              nodeModulesPath = _path2.default.join(projectRoot, exp.nodeModulesPath);
            }

            // Check to make sure node_modules exists at all
            _context5.prev = 7;
            result = _fs2.default.statSync(_path2.default.join(nodeModulesPath, 'node_modules'));

            if (result.isDirectory()) {
              _context5.next = 12;
              break;
            }

            ProjectUtils.logError(projectRoot, 'exponent', 'Error: node_modules directory is missing. Please run `npm install` in your project directory.');
            return _context5.abrupt('return', FATAL);

          case 12:
            _context5.next = 18;
            break;

          case 14:
            _context5.prev = 14;
            _context5.t0 = _context5['catch'](7);

            ProjectUtils.logError(projectRoot, 'exponent', 'Error: node_modules directory is missing. Please run `npm install` in your project directory.');
            return _context5.abrupt('return', FATAL);

          case 18:
            _context5.prev = 18;
            _result = _fs2.default.statSync(_path2.default.join(nodeModulesPath, 'node_modules', 'react-native', 'local-cli', 'cli.js'));

            if (_result.isFile()) {
              _context5.next = 23;
              break;
            }

            ProjectUtils.logError(projectRoot, 'exponent', 'Error: React native is not installed. Please run `npm install` in your project directory.');
            return _context5.abrupt('return', FATAL);

          case 23:
            _context5.next = 29;
            break;

          case 25:
            _context5.prev = 25;
            _context5.t1 = _context5['catch'](18);

            ProjectUtils.logError(projectRoot, 'exponent', 'Error: React native is not installed. Please run `npm install` in your project directory.');
            return _context5.abrupt('return', FATAL);

          case 29:
            if (!pkg.dependencies) {
              _context5.next = 34;
              break;
            }

            return _context5.delegateYield(_regenerator2.default.mark(function _callee4() {
              var npmls, npmlsCommand, npmlsDependencies, _ret2;

              return _regenerator2.default.wrap(function _callee4$(_context4) {
                while (1) {
                  switch (_context4.prev = _context4.next) {
                    case 0:
                      _context4.next = 2;
                      return Binaries.sourceBashLoginScriptsAsync();

                    case 2:
                      npmls = void 0;
                      _context4.prev = 3;
                      _context4.next = 6;
                      return (0, _spawnAsync2.default)('npm', ['ls', '--json', '--depth', '1'], {
                        cwd: nodeModulesPath
                      });

                    case 6:
                      npmlsCommand = _context4.sent;

                      npmls = npmlsCommand.stdout;
                      _context4.next = 13;
                      break;

                    case 10:
                      _context4.prev = 10;
                      _context4.t0 = _context4['catch'](3);

                      npmls = _context4.t0.stdout; // `npm ls` sometimes returns an error code

                    case 13:
                      if (npmls) {
                        _context4.next = 16;
                        break;
                      }

                      ProjectUtils.logWarning(projectRoot, 'exponent', 'Problem checking node_modules dependencies. Could not run `npm ls` in ' + projectRoot + '.');
                      return _context4.abrupt('return', {
                        v: WARNING
                      });

                    case 16:
                      npmlsDependencies = void 0;
                      _context4.prev = 17;

                      npmlsDependencies = JSON.parse(npmls).dependencies;
                      _context4.next = 25;
                      break;

                    case 21:
                      _context4.prev = 21;
                      _context4.t1 = _context4['catch'](17);

                      ProjectUtils.logWarning(projectRoot, 'exponent', 'Problem checking node_modules dependencies: ' + _context4.t1.message);
                      return _context4.abrupt('return', {
                        v: WARNING
                      });

                    case 25:
                      if (!npmlsDependencies) {
                        _context4.next = 29;
                        break;
                      }

                      _ret2 = function () {
                        var errorStrings = [];
                        _lodash2.default.forEach(pkg.dependencies, function (versionRequired, dependency) {
                          var installedDependency = npmlsDependencies[dependency];
                          if (!installedDependency || !installedDependency.version) {
                            if (installedDependency && installedDependency.peerMissing) {
                              errorStrings.push('Warning: \'' + dependency + '\' peer depencency missing. Run `npm ls` in ' + nodeModulesPath + ' to see full warning.');
                            } else {
                              errorStrings.push('Warning: \'' + dependency + '\' dependency is not installed.');
                            }
                          } else if (!_semver2.default.satisfies(installedDependency.version, versionRequired) && !versionRequired.includes(installedDependency.from)) {
                            // For react native, `from` field looks like "exponentjs/react-native#sdk-8.0.1" and
                            // versionRequired looks like "github:exponentjs/react-native#sdk-8.0.0"
                            errorStrings.push('Warning: Installed version ' + installedDependency.version + ' of \'' + dependency + '\' does not satisfy required version ' + versionRequired);
                          }
                        });

                        if (errorStrings.length > 0) {
                          errorStrings.push('\nIf there is an issue running your project, please run `npm install` in ' + nodeModulesPath + ' and restart.');
                          ProjectUtils.logWarning(projectRoot, 'exponent', errorStrings.join('\n'));
                          return {
                            v: {
                              v: WARNING
                            }
                          };
                        }
                      }();

                      if (!((typeof _ret2 === 'undefined' ? 'undefined' : (0, _typeof3.default)(_ret2)) === "object")) {
                        _context4.next = 29;
                        break;
                      }

                      return _context4.abrupt('return', _ret2.v);

                    case 29:
                    case 'end':
                      return _context4.stop();
                  }
                }
              }, _callee4, _this, [[3, 10], [17, 21]]);
            })(), 't2', 31);

          case 31:
            _ret = _context5.t2;

            if (!((typeof _ret === 'undefined' ? 'undefined' : (0, _typeof3.default)(_ret)) === "object")) {
              _context5.next = 34;
              break;
            }

            return _context5.abrupt('return', _ret.v);

          case 34:
            return _context5.abrupt('return', NO_ISSUES);

          case 35:
          case 'end':
            return _context5.stop();
        }
      }
    }, _callee5, this, [[7, 14], [18, 25]]);
  }));

  return function _validateNodeModulesAsync(_x7) {
    return _ref4.apply(this, arguments);
  };
}();

var validateLowLatencyAsync = exports.validateLowLatencyAsync = function () {
  var _ref6 = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee6(projectRoot) {
    return _regenerator2.default.wrap(function _callee6$(_context6) {
      while (1) {
        switch (_context6.prev = _context6.next) {
          case 0:
            return _context6.abrupt('return', validateAsync(projectRoot, false));

          case 1:
          case 'end':
            return _context6.stop();
        }
      }
    }, _callee6, this);
  }));

  return function validateLowLatencyAsync(_x8) {
    return _ref6.apply(this, arguments);
  };
}();

var validateWithNetworkAsync = exports.validateWithNetworkAsync = function () {
  var _ref7 = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee7(projectRoot) {
    return _regenerator2.default.wrap(function _callee7$(_context7) {
      while (1) {
        switch (_context7.prev = _context7.next) {
          case 0:
            return _context7.abrupt('return', validateAsync(projectRoot, true));

          case 1:
          case 'end':
            return _context7.stop();
        }
      }
    }, _callee7, this);
  }));

  return function validateWithNetworkAsync(_x9) {
    return _ref7.apply(this, arguments);
  };
}();

var validateAsync = function () {
  var _ref8 = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee8(projectRoot, allowNetwork) {
    var _ref9, exp, pkg, status;

    return _regenerator2.default.wrap(function _callee8$(_context8) {
      while (1) {
        switch (_context8.prev = _context8.next) {
          case 0:
            _context8.next = 2;
            return ProjectUtils.readConfigJsonAsync(projectRoot);

          case 2:
            _ref9 = _context8.sent;
            exp = _ref9.exp;
            pkg = _ref9.pkg;
            _context8.next = 7;
            return _validatePackageJsonAndExpJsonAsync(exp, pkg, projectRoot);

          case 7:
            status = _context8.sent;


            // Don't block this! It has to make network requests so it's slow.
            if (allowNetwork) {
              _validatePngFieldsAsync(projectRoot, exp);
            }

            // TODO: this broke once we started using yarn because `npm ls` doesn't
            // work on a yarn install. Use `yarn check` in the future.
            /*if (status !== FATAL && exp && !exp.ignoreNodeModulesValidation) {
              let nodeModulesStatus = await _validateNodeModulesAsync(projectRoot);
              if (nodeModulesStatus > status) {
                return nodeModulesStatus;
              }
            }*/

            return _context8.abrupt('return', status);

          case 10:
          case 'end':
            return _context8.stop();
        }
      }
    }, _callee8, this);
  }));

  return function validateAsync(_x10, _x11) {
    return _ref8.apply(this, arguments);
  };
}();

var getExponentSdkStatus = exports.getExponentSdkStatus = function () {
  var _ref10 = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee9(projectRoot) {
    var _ref11, pkg, exponentDep, mainFilePath, mainFile;

    return _regenerator2.default.wrap(function _callee9$(_context9) {
      while (1) {
        switch (_context9.prev = _context9.next) {
          case 0:
            _context9.next = 2;
            return ProjectUtils.readConfigJsonAsync(projectRoot);

          case 2:
            _ref11 = _context9.sent;
            pkg = _ref11.pkg;
            _context9.prev = 4;
            exponentDep = pkg.dependencies['exponent'];

            if (exponentDep) {
              _context9.next = 8;
              break;
            }

            return _context9.abrupt('return', EXPONENT_SDK_NOT_INSTALLED);

          case 8:
            mainFilePath = _path2.default.join(projectRoot, pkg.main);
            _context9.next = 11;
            return _fs2.default.readFile.promise(mainFilePath, 'utf8');

          case 11:
            mainFile = _context9.sent;

            if (!(mainFile.includes('from \'exponent\'') || mainFile.includes('require(\'exponent\')'))) {
              _context9.next = 16;
              break;
            }

            return _context9.abrupt('return', EXPONENT_SDK_INSTALLED_AND_IMPORTED);

          case 16:
            return _context9.abrupt('return', EXPONENT_SDK_NOT_IMPORTED);

          case 17:
            _context9.next = 22;
            break;

          case 19:
            _context9.prev = 19;
            _context9.t0 = _context9['catch'](4);
            return _context9.abrupt('return', EXPONENT_SDK_NOT_IMPORTED);

          case 22:
          case 'end':
            return _context9.stop();
        }
      }
    }, _callee9, this, [[4, 19]]);
  }));

  return function getExponentSdkStatus(_x12) {
    return _ref10.apply(this, arguments);
  };
}();

require('instapromise');

var _lodash = require('lodash');

var _lodash2 = _interopRequireDefault(_lodash);

var _semver = require('semver');

var _semver2 = _interopRequireDefault(_semver);

var _fs = require('fs');

var _fs2 = _interopRequireDefault(_fs);

var _joi = require('joi');

var _joi2 = _interopRequireDefault(_joi);

var _path = require('path');

var _path2 = _interopRequireDefault(_path);

var _request = require('request');

var _request2 = _interopRequireDefault(_request);

var _spawnAsync = require('@exponent/spawn-async');

var _spawnAsync2 = _interopRequireDefault(_spawnAsync);

var _Api = require('../Api');

var _Api2 = _interopRequireDefault(_Api);

var _Binaries = require('../Binaries');

var Binaries = _interopRequireWildcard(_Binaries);

var _Config = require('../Config');

var _Config2 = _interopRequireDefault(_Config);

var _ExpSchema = require('./ExpSchema');

var _ExpSchema2 = _interopRequireDefault(_ExpSchema);

var _ProjectUtils = require('./ProjectUtils');

var ProjectUtils = _interopRequireWildcard(_ProjectUtils);

var _Versions = require('../Versions');

var Versions = _interopRequireWildcard(_Versions);

var _Watchman = require('../Watchman');

var Watchman = _interopRequireWildcard(_Watchman);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var NO_ISSUES = exports.NO_ISSUES = 0;

var WARNING = exports.WARNING = 1;
var FATAL = exports.FATAL = 2;

var MIN_WATCHMAN_VERSION = '4.6.0';

var EXPONENT_SDK_INSTALLED_AND_IMPORTED = exports.EXPONENT_SDK_INSTALLED_AND_IMPORTED = 0;
var EXPONENT_SDK_NOT_INSTALLED = exports.EXPONENT_SDK_NOT_INSTALLED = 1;
var EXPONENT_SDK_NOT_IMPORTED = exports.EXPONENT_SDK_NOT_IMPORTED = 2;
//# sourceMappingURL=../__sourcemaps__/project/Doctor.js.map
