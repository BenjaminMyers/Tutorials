'use strict';

var _typeof2 = require('babel-runtime/helpers/typeof');

var _typeof3 = _interopRequireDefault(_typeof2);

var _setImmediate2 = require('babel-runtime/core-js/set-immediate');

var _setImmediate3 = _interopRequireDefault(_setImmediate2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var extend = require('extend');

var request = jest.genMockFromModule('request');

function asyncCallback(cb) {
  return function () {
    var _this = this,
        _arguments = arguments;

    (0, _setImmediate3.default)(function () {
      return cb.apply(_this, _arguments);
    });
  };
}

// organize params for patch, post, put, head, del
function initParams(uri, options, callback) {
  if (typeof options === 'function') {
    callback = options;
  }

  var params = {};
  if ((typeof options === 'undefined' ? 'undefined' : (0, _typeof3.default)(options)) === 'object') {
    extend(params, options, { uri: uri });
  } else if (typeof uri === 'string') {
    extend(params, { uri: uri });
  } else {
    extend(params, uri);
  }

  params.callback = callback || params.callback;
  return params;
}

request.mockImpl(function (uri, options, callback) {
  if (typeof uri === 'undefined') {
    throw new Error('undefined is not a valid uri or options object.');
  }

  var params = initParams(uri, options, callback);
  callback = asyncCallback(params.callback);
  callback(null, currentResponse);
});

var currentResponse = void 0;
request.__setMockResponse = function (object) {
  return currentResponse = object;
};

module.exports = request;
//# sourceMappingURL=../__sourcemaps__/__mocks__/request.js.map
