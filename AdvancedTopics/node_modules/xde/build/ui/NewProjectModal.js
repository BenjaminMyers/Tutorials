'use strict';

var _extends2 = require('babel-runtime/helpers/extends');

var _extends3 = _interopRequireDefault(_extends2);

var _regenerator = require('babel-runtime/regenerator');

var _regenerator2 = _interopRequireDefault(_regenerator);

var _asyncToGenerator2 = require('babel-runtime/helpers/asyncToGenerator');

var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _class, _temp;

var _xdl = require('xdl');

var _lodash = require('lodash');

var _lodash2 = _interopRequireDefault(_lodash);

var _os = require('os');

var _os2 = _interopRequireDefault(_os);

var _path = require('path');

var _path2 = _interopRequireDefault(_path);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactLoadingIndicator = require('react-loading-indicator');

var _reactLoadingIndicator2 = _interopRequireDefault(_reactLoadingIndicator);

var _Commands = require('./Commands');

var _Commands2 = _interopRequireDefault(_Commands);

var _StyleConstants = require('./StyleConstants');

var _StyleConstants2 = _interopRequireDefault(_StyleConstants);

var _Styles = require('./Styles');

var _Styles2 = _interopRequireDefault(_Styles);

var _IdentifierRules = require('../IdentifierRules');

var IdentifierRules = _interopRequireWildcard(_IdentifierRules);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var ICON_SIZE = 120;
var MAX_PROJECT_LENGTH = 44;
var HALF_MAX_PROJECT_LENGTH = 20;

var NewProjectModal = (_temp = _class = function (_React$Component) {
  (0, _inherits3.default)(NewProjectModal, _React$Component);

  function NewProjectModal(props, context) {
    var _this2 = this;

    (0, _classCallCheck3.default)(this, NewProjectModal);

    var _this = (0, _possibleConstructorReturn3.default)(this, (NewProjectModal.__proto__ || (0, _getPrototypeOf2.default)(NewProjectModal)).call(this, props, context));

    _this._loadTemplatesAsync = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee() {
      var versions, dir;
      return _regenerator2.default.wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              _context.next = 2;
              return _xdl.Api.versionsAsync();

            case 2:
              versions = _context.sent;
              _context.next = 5;
              return _xdl.UserSettings.getAsync('defaultNewProjectDir', _os2.default.homedir());

            case 5:
              dir = _context.sent;


              _this.setState({
                isLoading: false,
                templates: versions.templates,
                selectedTemplate: versions.templates[0],
                projectDirectory: dir
              });

            case 7:
            case 'end':
              return _context.stop();
          }
        }
      }, _callee, _this2);
    }));

    _this._selectTemplate = function (template) {
      _this.setState({
        selectedTemplate: template
      });
    };

    _this._renderTemplate = function (template) {
      var isSelected = _this.state.selectedTemplate.id === template.id;

      return _react2.default.createElement(
        'div',
        {
          key: template.id,
          style: (0, _extends3.default)({}, Styles.templateContainer, {
            background: isSelected ? _StyleConstants2.default.colorPrimary : _StyleConstants2.default.colorLightBackground
          }),
          onClick: function onClick() {
            return _this._selectTemplate(template);
          } },
        _react2.default.createElement('img', { src: template.iconUrl, style: Styles.icon }),
        _react2.default.createElement(
          'div',
          { style: (0, _extends3.default)({}, Styles.mediumText, { color: isSelected ? 'white' : _StyleConstants2.default.colorText }) },
          template.name
        )
      );
    };

    _this._renderForm = function () {
      var _this$state = _this.state;
      var templates = _this$state.templates;
      var selectedTemplate = _this$state.selectedTemplate;


      if (!templates) {
        return _react2.default.createElement('div', null);
      }

      return _react2.default.createElement(
        'form',
        { name: 'newProject',
          style: Styles.form,
          onSubmit: _this._onSubmitNewProject },
        _react2.default.createElement(
          'div',
          { style: Styles.largeText },
          'Choose a template for your project'
        ),
        _react2.default.createElement(
          'div',
          { style: Styles.templatesContainer },
          _react2.default.createElement(
            'div',
            { style: { minWidth: 'min-content', display: 'flex' } },
            _lodash2.default.map(templates, _this._renderTemplate)
          )
        ),
        _react2.default.createElement(
          'div',
          { style: Styles.mediumText },
          selectedTemplate.description
        ),
        _react2.default.createElement(
          'div',
          { style: (0, _extends3.default)({}, Styles.largeText, { marginTop: _StyleConstants2.default.gutterLg, marginBottom: _StyleConstants2.default.gutterMd }) },
          'Choose a project name and directory'
        ),
        _react2.default.createElement('input', { autoFocus: true, type: 'text', className: 'form-control', style: Styles.input, ref: 'projectName',
          onChange: _this._onProjectNameChange,
          value: _this.state.projectName
        }),
        _react2.default.createElement(
          'div',
          { className: 'input-group', style: Styles.input },
          _react2.default.createElement('input', { disabled: true, type: 'text', className: 'form-control', style: { color: _StyleConstants2.default.colorSubtitle }, ref: 'projectDirectory',
            value: _this._getShortProjectDirectory()
          }),
          _react2.default.createElement(
            'span',
            { className: 'input-group-addon', style: { cursor: 'pointer', background: 'white' }, onClick: _this._onClickChangeProjectDirectoryAsync },
            '...'
          )
        ),
        _this._renderErrors(),
        _react2.default.createElement(
          'div',
          { style: Styles.buttonsContainer },
          _react2.default.createElement(
            'button',
            { onClick: _this._onClickCancel,
              type: 'button',
              style: Styles.cancelButton },
            _react2.default.createElement(
              'div',
              { key: 'button-text', style: { flex: 1 } },
              'Cancel'
            )
          ),
          _react2.default.createElement(
            'button',
            { type: 'submit',
              style: Styles.submitButton },
            _react2.default.createElement(
              'div',
              { key: 'button-text', style: { flex: 1 } },
              'Create'
            )
          )
        )
      );
    };

    _this._renderErrors = function () {
      if (_this.state.errorMessage) {
        return _react2.default.createElement(
          'div',
          { style: _Styles2.default.errorMessage },
          _this.state.errorMessage
        );
      } else {
        return null;
      }
    };

    _this._renderLoading = function () {
      return _react2.default.createElement(
        'div',
        { style: Styles.loadingContainer },
        _react2.default.createElement(_reactLoadingIndicator2.default, {
          color: {
            red: 17,
            green: 114,
            blue: 182,
            alpha: 1.0
          },
          segmentWidth: 6,
          segmentLength: 15,
          spacing: 9
        }),
        _this.state.loadingMessage && _react2.default.createElement(
          'div',
          { style: Styles.loadingText },
          _this.state.loadingMessage
        )
      );
    };

    _this._onProjectNameChange = function (event) {
      var newValue = IdentifierRules.normalizeProjectNameWhileTyping(event.target.value);
      var errorMessage = null;
      if (newValue.length === 0) {
        errorMessage = 'Project name cannot be blank';
      }

      _this.setState({
        projectName: newValue,
        errorMessage: errorMessage
      });
    };

    _this._getShortProjectDirectory = function () {
      var _this$state2 = _this.state;
      var projectName = _this$state2.projectName;
      var projectDirectory = _this$state2.projectDirectory;

      var dir = _path2.default.join(projectDirectory, projectName);
      if (dir.length < MAX_PROJECT_LENGTH) {
        return dir;
      } else {
        return dir.substr(0, HALF_MAX_PROJECT_LENGTH) + '...' + dir.substr(dir.length - HALF_MAX_PROJECT_LENGTH);
      }
    };

    _this._onClickChangeProjectDirectoryAsync = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee2() {
      var directory;
      return _regenerator2.default.wrap(function _callee2$(_context2) {
        while (1) {
          switch (_context2.prev = _context2.next) {
            case 0:
              _context2.prev = 0;
              _context2.next = 3;
              return _Commands2.default.getDirectoryAsync(_this.state.projectDirectory);

            case 3:
              directory = _context2.sent;

              if (directory) {
                _context2.next = 6;
                break;
              }

              return _context2.abrupt('return');

            case 6:
              _context2.next = 8;
              return _xdl.UserSettings.setAsync('defaultNewProjectDir', directory);

            case 8:
              _this.setState({
                projectDirectory: directory
              });
              _context2.next = 13;
              break;

            case 11:
              _context2.prev = 11;
              _context2.t0 = _context2['catch'](0);

            case 13:
            case 'end':
              return _context2.stop();
          }
        }
      }, _callee2, _this2, [[0, 11]]);
    }));

    _this._onClickCancel = function (event) {
      event.preventDefault();
      _this.props.onClose();
    };

    _this._onSubmitNewProject = function () {
      var _ref3 = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee3(event) {
        var projectRoot;
        return _regenerator2.default.wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                event.preventDefault();

                if (!(_this.state.projectName.length === 0)) {
                  _context3.next = 6;
                  break;
                }

                _this.setState({
                  errorMessage: 'Project name cannot be blank'
                });
                return _context3.abrupt('return');

              case 6:
                _this.setState({
                  errorMessage: null,
                  loadingMessage: null,
                  isLoading: true
                });

              case 7:
                _context3.prev = 7;
                _context3.next = 10;
                return _xdl.Exp.createNewExpAsync(_this.state.selectedTemplate.id, _this.state.projectDirectory, {}, {
                  name: _this.state.projectName
                });

              case 10:
                projectRoot = _context3.sent;

                if (projectRoot) {
                  _context3.next = 14;
                  break;
                }

                _this.setState({
                  isLoading: false
                });
                return _context3.abrupt('return');

              case 14:
                _context3.next = 16;
                return _this.props.onSelectProject(projectRoot);

              case 16:
                _this.props.onClose();
                _context3.next = 22;
                break;

              case 19:
                _context3.prev = 19;
                _context3.t0 = _context3['catch'](7);

                _this.setState({
                  isLoading: false,
                  errorMessage: _context3.t0.message
                });

              case 22:
              case 'end':
                return _context3.stop();
            }
          }
        }, _callee3, _this2, [[7, 19]]);
      }));

      return function (_x) {
        return _ref3.apply(this, arguments);
      };
    }();

    _this.state = {
      isLoading: true,
      projectName: 'my-new-project',
      projectDirectory: null,
      errorMessage: null,
      loadingMessage: null,
      templates: null,
      selectedTemplate: null
    };
    return _this;
  }

  (0, _createClass3.default)(NewProjectModal, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      var _this3 = this;

      _xdl.Logger.notifications.addStream({
        stream: {
          write: function write(chunk) {
            switch (chunk.code) {
              case _xdl.NotificationCode.PROGRESS:
                _this3.setState({
                  loadingMessage: chunk.msg
                });
                break;
            }
          }
        },
        type: 'raw'
      });

      this._loadTemplatesAsync();
    }
  }, {
    key: 'render',
    value: function render() {
      return _react2.default.createElement(
        'div',
        { style: Styles.container },
        this.state.isLoading ? this._renderLoading() : this._renderForm()
      );
    }
  }]);
  return NewProjectModal;
}(_react2.default.Component), _class.propTypes = {
  onClose: _react.PropTypes.func.isRequired,
  onSelectProject: _react.PropTypes.func.isRequired
}, _temp);


var Styles = {
  container: {
    fontFamily: 'Verdana',
    padding: _StyleConstants2.default.gutterLg,
    overflowWrap: 'break-word',

    display: 'flex',
    flexDirection: 'column',
    alignItems: 'center',
    justifyContent: 'center'
  },
  loadingContainer: {
    padding: _StyleConstants2.default.gutterLg,
    minWidth: 250,

    display: 'flex',
    flexDirection: 'column',
    alignItems: 'center',
    justifyContent: 'center'
  },
  form: {
    width: 400,
    display: 'flex',
    flexDirection: 'column'
  },
  templatesContainer: {
    display: 'flex',
    flexDirection: 'row',
    //alignItems: 'center',
    //justifyContent: 'center',
    marginTop: 5,
    marginBottom: 10,
    overflowX: 'auto',
    backgroundColor: '#f1f1f1',
    borderRadius: 3,
    paddingTop: 5,
    paddingBottom: 5
  },
  templateContainer: {
    display: 'flex',
    flexDirection: 'column',
    alignItems: 'center',
    justifyContent: 'center',
    marginLeft: 20,
    marginRight: 20,
    marginTop: 10,
    marginBottom: 10,
    paddingLeft: 20,
    paddingRight: 20,
    paddingTop: _StyleConstants2.default.gutterMd * 2,
    paddingBottom: _StyleConstants2.default.gutterMd,
    borderRadius: 4,
    cursor: 'pointer'
  },
  largeText: {
    fontWeight: 'bold',
    color: _StyleConstants2.default.colorText,
    fontSize: _StyleConstants2.default.fontSizeLg,
    paddingBottom: _StyleConstants2.default.gutterSm
  },
  mediumText: {
    color: _StyleConstants2.default.colorSubtitle,
    fontSize: _StyleConstants2.default.fontSizeMd
  },
  loadingText: {
    paddingTop: _StyleConstants2.default.gutterLg,
    color: _StyleConstants2.default.colorText,
    fontSize: _StyleConstants2.default.fontSizeMd
  },
  buttonsContainer: {
    marginTop: 10,
    width: '100%',
    display: 'flex',
    flexDirection: 'row',
    justifyContent: 'space-between'
  },
  cancelButton: {
    border: 'none',
    borderRadius: 5,
    color: 'black',
    padding: _StyleConstants2.default.gutterSm,
    width: '40%',

    backgroundColor: _StyleConstants2.default.colorCancel
  },
  submitButton: {
    border: 'none',
    borderRadius: 5,
    color: 'white',
    padding: _StyleConstants2.default.gutterSm,
    width: '40%',

    backgroundColor: _StyleConstants2.default.colorPrimary
  },
  input: {
    marginBottom: _StyleConstants2.default.gutterMd
  },
  icon: {
    width: ICON_SIZE,
    height: ICON_SIZE,
    marginBottom: _StyleConstants2.default.gutterMd,
    borderStyle: 'solid',
    borderWidth: 1,
    borderColor: 'black'
  }
};

module.exports = NewProjectModal;
//# sourceMappingURL=../__sourcemaps__/ui/NewProjectModal.js.map
