'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _aphrodite = require('aphrodite');

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _StyleConstants = require('../StyleConstants');

var _StyleConstants2 = _interopRequireDefault(_StyleConstants);

var _Popover = require('./Popover');

var _Popover2 = _interopRequireDefault(_Popover);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

let IconButton = class IconButton extends _react2.default.Component {

  render() {
    const containerStyles = [styles.container, this.props.styles, this.props.isDisabled ? styles.containerDisabled : null];
    const iconEl = _react2.default.createElement(
      'div',
      {
        className: (0, _aphrodite.css)(styles.iconContainer),
        style: { borderColor: this.props.color } },
      _react2.default.createElement('img', {
        src: this.props.iconUrl,
        className: (0, _aphrodite.css)(styles.icon)
      })
    );

    const mainEl = this.props.popover ? _react2.default.createElement(
      _Popover2.default,
      {
        isToLeft: this.props.isPopoverToLeft,
        body: this.props.popover,
        arrowOffset: 20,
        popoverOffset: -10 },
      iconEl
    ) : iconEl;

    return _react2.default.createElement(
      'button',
      {
        className: (0, _aphrodite.css)(...containerStyles),
        disabled: this.props.isDisabled,
        onClick: this.props.onClick },
      mainEl,
      _react2.default.createElement(
        'div',
        { style: { color: this.props.color } },
        this.props.label
      )
    );
  }
};
IconButton.propTypes = {
  color: _react.PropTypes.string.isRequired,
  iconUrl: _react.PropTypes.string.isRequired,
  isDisabled: _react.PropTypes.bool,
  label: _react.PropTypes.string.isRequired,
  onClick: _react.PropTypes.func.isRequired,
  styles: _react.PropTypes.oneOfType([_react.PropTypes.array, _react.PropTypes.object]),

  // If specified, popover appears beneath icon circle on click.
  popover: _react.PropTypes.node,
  isPopoverToLeft: _react.PropTypes.bool
};
exports.default = IconButton;


const styles = _aphrodite.StyleSheet.create({
  container: {
    alignItems: 'center',
    display: 'inline-flex',
    flexDirection: 'column',
    fontSize: _StyleConstants2.default.fontSizeMd,
    verticalAlign: 'middle',

    // Override button styles
    background: 'transparent',
    border: 'none'
  },
  containerDisabled: {
    opacity: 0.3
  },
  iconContainer: {
    borderRadius: '50%',
    borderStyle: 'solid',
    borderWidth: 2,
    marginBottom: _StyleConstants2.default.gutterSm,
    width: 32,
    height: 32,

    // Center the icon within the container
    display: 'flex',
    alignItems: 'center',
    justifyContent: 'center'
  },
  icon: {
    maxHeight: 15,
    maxWidth: 15
  }
});
//# sourceMappingURL=../../__sourcemaps__/ui/toolbar/IconButton.js.map
