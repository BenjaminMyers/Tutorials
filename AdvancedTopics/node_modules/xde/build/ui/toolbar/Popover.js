'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _extends2 = require('babel-runtime/helpers/extends');

var _extends3 = _interopRequireDefault(_extends2);

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _class, _temp;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactMotion = require('react-motion');

var _Styles = require('../Styles');

var _Styles2 = _interopRequireDefault(_Styles);

var _StyleConstants = require('../StyleConstants');

var _StyleConstants2 = _interopRequireDefault(_StyleConstants);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var Popover = (_temp = _class = function (_React$Component) {
  (0, _inherits3.default)(Popover, _React$Component);

  function Popover() {
    (0, _classCallCheck3.default)(this, Popover);
    return (0, _possibleConstructorReturn3.default)(this, (0, _getPrototypeOf2.default)(Popover).apply(this, arguments));
  }

  (0, _createClass3.default)(Popover, [{
    key: '_renderPopoverContents',
    value: function _renderPopoverContents() {
      var _this2 = this;

      var popoverStyle = this.props.isAbove ? Styles.popoverAbove : Styles.popoverBelow;
      var arrowStyle = this.props.isAbove ? Styles.arrowAbove : Styles.arrowBelow;
      var arrowFillStyle = this.props.isAbove ? Styles.arrowFillAbove : Styles.arrowFillBelow;
      var contentStyle = this.props.isAbove ? Styles.contentAbove : Styles.contentBelow;

      if (this.props.isToLeft) {
        popoverStyle.right = this.props.popoverOffset;
        arrowStyle.right = this.props.arrowOffset;
        arrowFillStyle.right = this.props.arrowOffset + 1;
        popoverStyle.left = null;
        arrowStyle.left = null;
        arrowFillStyle.left = null;
      } else {
        popoverStyle.left = this.props.popoverOffset;
        arrowStyle.left = this.props.arrowOffset;
        arrowFillStyle.left = this.props.arrowOffset + 1;
        popoverStyle.right = null;
        arrowStyle.right = null;
        arrowFillStyle.right = null;
      }

      return _react2.default.createElement(
        _reactMotion.Motion,
        { defaultStyle: { x: 0 }, style: { x: (0, _reactMotion.spring)(1) } },
        function (value) {
          return _react2.default.createElement(
            'div',
            null,
            _this2.props.isAbove ? _react2.default.createElement(
              'div',
              { style: (0, _extends3.default)({}, popoverStyle, { opacity: value.x }) },
              _react2.default.createElement(
                'div',
                { style: contentStyle },
                _this2.props.body
              ),
              _react2.default.createElement('div', { style: arrowFillStyle }),
              _react2.default.createElement('div', { style: arrowStyle })
            ) : _react2.default.createElement(
              'div',
              { style: (0, _extends3.default)({}, popoverStyle, { opacity: value.x }) },
              _react2.default.createElement('div', { style: arrowStyle }),
              _react2.default.createElement('div', { style: arrowFillStyle }),
              _react2.default.createElement(
                'div',
                { style: contentStyle },
                _this2.props.body
              )
            )
          );
        }
      );
    }
  }, {
    key: 'render',
    value: function render() {
      return _react2.default.createElement(
        'div',
        { style: Styles.container },
        this.props.children,
        this.props.body && this._renderPopoverContents()
      );
    }
  }]);
  return Popover;
}(_react2.default.Component), _class.propTypes = {
  children: _react.PropTypes.node, // Target over which the popover is shown.

  // Popover contents. If not specified, only the children are shown.
  body: _react.PropTypes.node,

  isToLeft: _react.PropTypes.bool,
  isAbove: _react.PropTypes.bool,
  arrowOffset: _react.PropTypes.number,
  popoverOffset: _react.PropTypes.number
}, _class.defaultProps = {
  arrowOffset: 0,
  popoverOffset: 0
}, _temp);
exports.default = Popover;


var ARROW_SIZE = 12;

var Styles = {
  container: {
    display: 'inline-block',
    position: 'relative'
  },

  popoverBelow: {
    position: 'absolute',
    top: '100%',
    zIndex: _StyleConstants2.default.zIndexPopover
  },
  arrowBelow: {
    backgroundColor: 'white',
    borderColor: _StyleConstants2.default.colorBorder,
    borderStyle: 'solid',
    borderWidth: 1,
    transform: 'rotate(45deg)',
    width: ARROW_SIZE,
    height: ARROW_SIZE,

    position: 'absolute',
    top: 1,
    zIndex: 1
  },
  contentBelow: (0, _extends3.default)({
    position: 'relative',
    top: ARROW_SIZE / 2, // To make room for the arrow
    zIndex: 2, // Higher than the arrow

    paddingTop: ARROW_SIZE / 2 + 1,
    paddingBottom: ARROW_SIZE / 2 + 1
  }, _Styles2.default.hoverBox),
  arrowFillBelow: {
    backgroundColor: 'white',
    border: 'none',
    transform: 'rotate(45deg)',
    width: 10,
    height: 10,

    position: 'absolute',
    top: 2,
    zIndex: 3 },

  popoverAbove: {
    position: 'absolute',
    bottom: '100%',
    zIndex: _StyleConstants2.default.zIndexPopover
  },
  arrowAbove: {
    backgroundColor: 'white',
    borderColor: _StyleConstants2.default.colorBorder,
    borderStyle: 'solid',
    borderWidth: 1,
    transform: 'rotate(225deg)',
    width: ARROW_SIZE,
    height: ARROW_SIZE,

    position: 'absolute',
    bottom: 1,
    zIndex: 1
  },
  contentAbove: (0, _extends3.default)({
    position: 'relative',
    bottom: ARROW_SIZE / 2, // To make room for the arrow
    zIndex: 2, // Higher than the arrow

    paddingTop: ARROW_SIZE / 2 + 1,
    paddingBottom: ARROW_SIZE / 2 + 1
  }, _Styles2.default.hoverBox),
  arrowFillAbove: {
    backgroundColor: 'white',
    border: 'none',
    transform: 'rotate(225deg)',
    width: 10,
    height: 10,

    position: 'absolute',
    bottom: 2,
    zIndex: 3 }
};
//# sourceMappingURL=../../__sourcemaps__/ui/toolbar/Popover.js.map
