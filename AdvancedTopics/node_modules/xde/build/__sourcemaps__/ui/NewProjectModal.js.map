{"version":3,"sources":["ui/NewProjectModal.js"],"names":["IdentifierRules","ICON_SIZE","MAX_PROJECT_LENGTH","HALF_MAX_PROJECT_LENGTH","NewProjectModal","props","context","_loadTemplatesAsync","versionsAsync","versions","getAsync","homedir","dir","setState","isLoading","templates","selectedTemplate","projectDirectory","_selectTemplate","template","_renderTemplate","isSelected","state","id","Styles","templateContainer","background","colorPrimary","colorLightBackground","iconUrl","icon","mediumText","color","colorText","name","_renderForm","form","_onSubmitNewProject","largeText","templatesContainer","minWidth","display","map","description","marginTop","gutterLg","marginBottom","gutterMd","input","_onProjectNameChange","projectName","colorSubtitle","_getShortProjectDirectory","cursor","_onClickChangeProjectDirectoryAsync","_renderErrors","buttonsContainer","_onClickCancel","cancelButton","flex","submitButton","errorMessage","_renderLoading","loadingContainer","red","green","blue","alpha","loadingMessage","loadingText","event","newValue","normalizeProjectNameWhileTyping","target","value","length","join","substr","getDirectoryAsync","directory","setAsync","preventDefault","onClose","createNewExpAsync","projectRoot","onSelectProject","message","notifications","addStream","stream","write","chunk","code","PROGRESS","msg","type","container","Component","propTypes","func","isRequired","fontFamily","padding","overflowWrap","flexDirection","alignItems","justifyContent","width","overflowX","backgroundColor","borderRadius","paddingTop","paddingBottom","marginLeft","marginRight","paddingLeft","paddingRight","fontWeight","fontSize","fontSizeLg","gutterSm","fontSizeMd","border","colorCancel","height","borderStyle","borderWidth","borderColor","module","exports"],"mappings":"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","file":"ui/NewProjectModal.js","sourcesContent":["import {\n  Api,\n  Exp,\n  Logger,\n  NotificationCode,\n  UserSettings,\n} from 'xdl';\n\nimport _ from 'lodash';\nimport os from 'os';\nimport path from 'path';\nimport React, { PropTypes } from 'react';\nimport LoadingIndicator from 'react-loading-indicator';\n\nimport Commands from './Commands';\nimport StyleConstants from './StyleConstants';\nimport SharedStyles from './Styles';\nimport * as IdentifierRules from '../IdentifierRules';\n\nconst ICON_SIZE = 120;\nconst MAX_PROJECT_LENGTH = 44;\nconst HALF_MAX_PROJECT_LENGTH = 20;\n\nclass NewProjectModal extends React.Component {\n  constructor(props, context) {\n    super(props, context);\n\n    this.state = {\n      isLoading: true,\n      projectName: 'my-new-project',\n      projectDirectory: null,\n      errorMessage: null,\n      loadingMessage: null,\n      templates: null,\n      selectedTemplate: null,\n    };\n  }\n\n  static propTypes = {\n    onClose: PropTypes.func.isRequired,\n    onSelectProject: PropTypes.func.isRequired,\n  }\n\n  componentDidMount() {\n    Logger.notifications.addStream({\n      stream: {\n        write: (chunk) => {\n          switch (chunk.code) {\n            case NotificationCode.PROGRESS:\n              this.setState({\n                loadingMessage: chunk.msg,\n              });\n              break;\n          }\n        },\n      },\n      type: 'raw',\n    });\n\n    this._loadTemplatesAsync();\n  }\n\n  _loadTemplatesAsync = async () => {\n    let versions = await Api.versionsAsync();\n    let dir = await UserSettings.getAsync('defaultNewProjectDir', os.homedir());\n\n    this.setState({\n      isLoading: false,\n      templates: versions.templates,\n      selectedTemplate: versions.templates[0],\n      projectDirectory: dir,\n    });\n  }\n\n  render() {\n    return (\n      <div style={Styles.container}>\n        {this.state.isLoading ? this._renderLoading() : this._renderForm()}\n      </div>\n    );\n  }\n\n  _selectTemplate = (template) => {\n    this.setState({\n      selectedTemplate: template,\n    });\n  }\n\n  _renderTemplate = (template) => {\n    let isSelected = this.state.selectedTemplate.id === template.id;\n\n    return (\n      <div\n        key={template.id}\n        style={{...Styles.templateContainer,\n          background: isSelected ? StyleConstants.colorPrimary : StyleConstants.colorLightBackground,\n        }}\n        onClick={() => this._selectTemplate(template)}>\n        <img src={template.iconUrl} style={Styles.icon} />\n        <div style={{...Styles.mediumText, color: isSelected ? 'white' : StyleConstants.colorText}}>\n          {template.name}\n        </div>\n      </div>\n    );\n  }\n\n  _renderForm = () => {\n    let { templates, selectedTemplate } = this.state;\n\n    if (!templates) {\n      return (\n        <div />\n      );\n    }\n\n    return (\n      <form name=\"newProject\"\n        style={Styles.form}\n        onSubmit={this._onSubmitNewProject}>\n        <div style={Styles.largeText}>\n          Choose a template for your project\n        </div>\n        <div style={Styles.templatesContainer}>\n          <div style={{minWidth: 'min-content', display:'flex'}}>\n            {_.map(templates, this._renderTemplate)}\n          </div>\n        </div>\n        <div style={Styles.mediumText}>\n          {selectedTemplate.description}\n        </div>\n\n        <div style={{...Styles.largeText, marginTop: StyleConstants.gutterLg, marginBottom: StyleConstants.gutterMd}}>\n          Choose a project name and directory\n        </div>\n        <input autoFocus type=\"text\" className=\"form-control\" style={Styles.input} ref=\"projectName\"\n          onChange={this._onProjectNameChange}\n          value={this.state.projectName}\n        />\n        <div className=\"input-group\" style={Styles.input}>\n          <input disabled type=\"text\" className=\"form-control\" style={{color: StyleConstants.colorSubtitle}} ref=\"projectDirectory\"\n            value={this._getShortProjectDirectory()}\n          />\n          <span className=\"input-group-addon\" style={{cursor: 'pointer', background: 'white'}} onClick={this._onClickChangeProjectDirectoryAsync}>...</span>\n        </div>\n        {this._renderErrors()}\n        <div style={Styles.buttonsContainer}>\n          <button onClick={this._onClickCancel}\n            type=\"button\"\n            style={Styles.cancelButton}>\n            <div key=\"button-text\" style={{flex: 1}}>Cancel</div>\n          </button>\n          <button type=\"submit\"\n            style={Styles.submitButton}>\n            <div key=\"button-text\" style={{flex: 1}}>Create</div>\n          </button>\n        </div>\n      </form>\n    );\n  }\n\n  _renderErrors = () => {\n    if (this.state.errorMessage) {\n      return <div style={SharedStyles.errorMessage}>{this.state.errorMessage}</div>;\n    } else {\n      return null;\n    }\n  }\n\n  _renderLoading = () => {\n    return (\n      <div style={Styles.loadingContainer}>\n        <LoadingIndicator\n          color={{\n            red: 17,\n            green: 114,\n            blue: 182,\n            alpha: 1.0,\n          }}\n          segmentWidth={6}\n          segmentLength={15}\n          spacing={9}\n        />\n        {this.state.loadingMessage &&\n          <div style={Styles.loadingText}>\n            {this.state.loadingMessage}\n          </div>\n        }\n      </div>\n    );\n  }\n\n  _onProjectNameChange = (event) => {\n    let newValue = IdentifierRules.normalizeProjectNameWhileTyping(event.target.value);\n    let errorMessage = null;\n    if (newValue.length === 0) {\n      errorMessage = 'Project name cannot be blank';\n    }\n\n    this.setState({\n      projectName: newValue,\n      errorMessage,\n    });\n  };\n\n  _getShortProjectDirectory = () => {\n    let { projectName, projectDirectory} = this.state;\n    let dir = path.join(projectDirectory, projectName);\n    if (dir.length < MAX_PROJECT_LENGTH) {\n      return dir;\n    } else {\n      return `${dir.substr(0, HALF_MAX_PROJECT_LENGTH)}...${dir.substr(dir.length - HALF_MAX_PROJECT_LENGTH)}`;\n    }\n  }\n\n  _onClickChangeProjectDirectoryAsync = async () => {\n    try {\n      let directory = await Commands.getDirectoryAsync(this.state.projectDirectory);\n      if (!directory) {\n        return;\n      }\n\n      await UserSettings.setAsync('defaultNewProjectDir', directory);\n      this.setState({\n        projectDirectory: directory,\n      });\n    } catch (e) {}\n  }\n\n  _onClickCancel = (event) => {\n    event.preventDefault();\n    this.props.onClose();\n  };\n\n  _onSubmitNewProject = async (event) => {\n    event.preventDefault();\n\n    if (this.state.projectName.length === 0) {\n      this.setState({\n        errorMessage: 'Project name cannot be blank',\n      });\n      return;\n    } else {\n      this.setState({\n        errorMessage: null,\n        loadingMessage: null,\n        isLoading: true,\n      });\n    }\n\n    try {\n      let projectRoot = await Exp.createNewExpAsync(this.state.selectedTemplate.id, this.state.projectDirectory, {}, {\n        name: this.state.projectName,\n      });\n      if (!projectRoot) {\n        this.setState({\n          isLoading: false,\n        });\n        return;\n      }\n\n      await this.props.onSelectProject(projectRoot);\n      this.props.onClose();\n    } catch (e) {\n      this.setState({\n        isLoading: false,\n        errorMessage: e.message,\n      });\n    }\n  };\n}\n\nlet Styles = {\n  container: {\n    fontFamily: 'Verdana',\n    padding: StyleConstants.gutterLg,\n    overflowWrap: 'break-word',\n\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  loadingContainer: {\n    padding: StyleConstants.gutterLg,\n    minWidth: 250,\n\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  form: {\n    width: 400,\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  templatesContainer: {\n    display: 'flex',\n    flexDirection: 'row',\n    //alignItems: 'center',\n    //justifyContent: 'center',\n    marginTop: 5,\n    marginBottom: 10,\n    overflowX: 'auto',\n    backgroundColor: '#f1f1f1',\n    borderRadius: 3,\n    paddingTop: 5,\n    paddingBottom: 5,\n  },\n  templateContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginLeft: 20,\n    marginRight: 20,\n    marginTop: 10,\n    marginBottom: 10,\n    paddingLeft: 20,\n    paddingRight: 20,\n    paddingTop: StyleConstants.gutterMd * 2,\n    paddingBottom: StyleConstants.gutterMd,\n    borderRadius: 4,\n    cursor: 'pointer',\n  },\n  largeText: {\n    fontWeight: 'bold',\n    color: StyleConstants.colorText,\n    fontSize: StyleConstants.fontSizeLg,\n    paddingBottom: StyleConstants.gutterSm,\n  },\n  mediumText: {\n    color: StyleConstants.colorSubtitle,\n    fontSize: StyleConstants.fontSizeMd,\n  },\n  loadingText: {\n    paddingTop: StyleConstants.gutterLg,\n    color: StyleConstants.colorText,\n    fontSize: StyleConstants.fontSizeMd,\n  },\n  buttonsContainer: {\n    marginTop: 10,\n    width: '100%',\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n  },\n  cancelButton: {\n    border: 'none',\n    borderRadius: 5,\n    color: 'black',\n    padding: StyleConstants.gutterSm,\n    width: '40%',\n\n    backgroundColor: StyleConstants.colorCancel,\n  },\n  submitButton: {\n    border: 'none',\n    borderRadius: 5,\n    color: 'white',\n    padding: StyleConstants.gutterSm,\n    width: '40%',\n\n    backgroundColor: StyleConstants.colorPrimary,\n  },\n  input: {\n    marginBottom: StyleConstants.gutterMd,\n  },\n  icon: {\n    width: ICON_SIZE,\n    height: ICON_SIZE,\n    marginBottom: StyleConstants.gutterMd,\n    borderStyle: 'solid',\n    borderWidth: 1,\n    borderColor: 'black',\n  },\n};\n\nmodule.exports = NewProjectModal;\n"],"sourceRoot":"/source/"}