{"version":3,"sources":["ui/LoginPage.js"],"names":["IdentifierRules","LoginPage","Component","constructor","props","context","_onUsernameChange","event","newValue","normalizeWhileTyping","target","value","setState","username","_onSubmitLogin","preventDefault","isLoggingIn","loginAsync","state","password","_passwordInput","then","user","errorMessage","onLogin","err","message","isLoadingUser","render","x","opacity","loggedInAs","children","_renderLoggedOut","_renderErrors","Styles","container","icon","form","input","r","button","red","green","blue","alpha","width","height","flex","signInNote","componentDidMount","whoamiAsync","propTypes","node","isRequired","object","func","fontFamily","display","flexDirection","alignItems","justifyContent","position","top","right","bottom","left","marginBottom","backgroundColor","colorPrimary","border","borderRadius","color","padding","marginTop","fontStyle","module","exports"],"mappings":"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","file":"ui/LoginPage.js","sourcesContent":["import React, { PropTypes } from 'react';\nimport LoadingIndicator from 'react-loading-indicator';\nimport {Motion, spring} from 'react-motion';\nimport {User} from 'xdl';\n\nimport StyleConstants from './StyleConstants';\nimport SharedStyles from './Styles';\nimport * as IdentifierRules from '../IdentifierRules';\n\nclass LoginPage extends React.Component {\n  constructor(props, context) {\n    super(props, context);\n\n    this._passwordInput = null;\n    this.state = {\n      username: '',\n      errorMessage: null,\n      isLoadingUser: true,\n      isLoggingIn: false,\n    };\n  }\n\n  static propTypes = {\n    children: PropTypes.node.isRequired,\n    loggedInAs: PropTypes.object,\n    onLogin: PropTypes.func.isRequired,\n  }\n\n  render() {\n    if (this.state.isLoadingUser) {\n      return null;\n    }\n    return (\n      <Motion defaultStyle={{x: 0}} style={{x: spring(1)}}>\n        {(value) => <div style={{opacity: value.x}}>\n          {this.props.loggedInAs ? this.props.children : this._renderLoggedOut()}\n        </div>}\n      </Motion>\n    );\n  }\n\n  _renderErrors() {\n    if (this.state.errorMessage) {\n      return <div style={SharedStyles.errorMessage}>{this.state.errorMessage}</div>;\n    } else {\n      return null;\n    }\n  }\n\n  _renderLoggedOut() {\n    return (\n      <div style={Styles.container}>\n        <img src=\"./ExponentLogoCircle.png\" style={Styles.icon} />\n        <form name=\"login\"\n          style={Styles.form}\n          onSubmit={this._onSubmitLogin}>\n          {this._renderErrors()}\n          <input type=\"text\" style={Styles.input} ref=\"username\"\n            onChange={this._onUsernameChange}\n            placeholder=\"username\"\n            value={this.state.username}\n          />\n          <input type=\"password\" style={Styles.input}\n            ref={(r) => { this._passwordInput = r; }}\n            placeholder=\"password\"\n          />\n          <button type=\"submit\"\n            disabled={this.state.isLoggingIn}\n            style={Styles.button}>\n            {this.state.isLoggingIn ?\n              <LoadingIndicator color={{red: 255, green: 255, blue: 255, alpha: 1}} /> :\n              [\n                <img key=\"button-invisible-icon\" src=\"./arrow.svg\" style={{\n                  width: 15, height: 15, opacity: 0,\n                }} />, // Purely for spacing\n                <div key=\"button-text\" style={{flex: 1}}>Sign in (or register)</div>,\n                <img key=\"button-icon\" src=\"./arrow.svg\" style={{width: 15, height: 15}} />,\n              ]}\n          </button>\n        </form>\n\n        <p style={Styles.signInNote}>\n          If you don&#39;t have an account yet, just fill in your preferred\n          username and password above and we will create the account and sign\n          you in if the username is still available.\n        </p>\n      </div>\n    );\n  }\n\n  _onUsernameChange = (event) => {\n      let newValue = IdentifierRules.normalizeWhileTyping(event.target.value);\n      this.setState({username: newValue});\n  };\n\n  _onSubmitLogin = (event) => {\n    event.preventDefault();\n\n    this.setState({isLoggingIn: true});\n    User.loginAsync({\n      username: this.state.username,\n      password: this._passwordInput.value,\n    }).then((user) => {\n      this.setState({errorMessage: null, isLoggingIn: false});\n      this.props.onLogin(user);\n    }, (err) => {\n      this.setState({errorMessage: err.message, isLoggingIn: false});\n    });\n  };\n\n  componentDidMount() {\n    User.whoamiAsync().then((user) => {\n      this.setState({errorMessage: null, isLoadingUser: false});\n      if (user) {\n        this.props.onLogin(user);\n      }\n    }, (err) => {\n      this.setState({errorMessage: err.message, isLoadingUser: false});\n    });\n  }\n}\n\nlet Styles = {\n  container: {\n    fontFamily: 'Verdana',\n\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n\n    position: 'fixed',\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n  },\n  form: {\n    width: 250,\n  },\n  icon: {\n    height: 100,\n    width: 100,\n    marginBottom: 40,\n  },\n  button: {\n    backgroundColor: StyleConstants.colorPrimary,\n    border: 'none',\n    borderRadius: 5,\n    color: 'white',\n    padding: 8,\n\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%',\n  },\n  signInNote: {\n    width: 350,\n    marginTop: 30,\n    color: '#ccc',\n    fontStyle: 'italic',\n  },\n  input: {\n    ...SharedStyles.input,\n\n    display: 'block',\n    width: '100%',\n    marginBottom: 20,\n  },\n};\n\nmodule.exports = LoginPage;\n"],"sourceRoot":"/source/"}