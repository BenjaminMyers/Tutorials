{"version":3,"sources":["ui/Notification.js"],"names":["MAX_LENGTH","Notification","_onClick","event","stopPropagation","props","onClick","color","type","colorError","colorWarning","colorPrimary","message","length","substring","Styles","container","backgroundColor","cursor","Component","propTypes","oneOf","string","isRequired","func","padding","gutterMd","textAlign","position","top","left","right"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AAEA;;;;;;AAEA,IAAIA,aAAa,GAAjB;;IAEqBC,Y;;;;;;;;;;;;;;wNAOnBC,Q,GAAW,UAACC,KAAD,EAAW;AACpBA,YAAMC,eAAN;AACA,UAAI,MAAKC,KAAL,CAAWC,OAAf,EAAwB;AACtB,cAAKD,KAAL,CAAWC,OAAX;AACD;AACF,K;;;;;6BAEQ;AACP,UAAIC,cAAJ;AACA,cAAQ,KAAKF,KAAL,CAAWG,IAAnB;AACE,aAAK,OAAL;AACED,kBAAQ,yBAAeE,UAAvB;AACA;AACF,aAAK,SAAL;AACEF,kBAAQ,yBAAeG,YAAvB;AACA;AACF;AACEH,kBAAQ,yBAAeI,YAAvB;AACA;AATJ;;AAYA,UAAIC,UAAU,KAAKP,KAAL,CAAWO,OAAzB;AACA,UAAIA,QAAQC,MAAR,GAAiBb,UAArB,EAAiC;AAC/BY,kBAAaA,QAAQE,SAAR,CAAkB,CAAlB,EAAqBd,UAArB,CAAb;AACD;;AAED,aACE;AAAA;AAAA;AACE,4CACKe,OAAOC,SADZ;AAEEC,6BAAiBV,KAFnB;AAGEW,oBAAQ,KAAKb,KAAL,CAAWC,OAAX,GAAqB,SAArB,GAAiC;AAH3C,YADF,EAKK,SAAS,KAAKJ,QALnB;AAMGU;AANH,OADF;AAUD;;;EA3CuC,gBAAMO,S,UACvCC,S,GAAY;AACjBZ,QAAM,iBAAUa,KAAV,CAAgB,CAAC,SAAD,EAAY,OAAZ,EAAqB,SAArB,EAAgC,MAAhC,CAAhB,CADW;AAEjBT,WAAS,iBAAUU,MAAV,CAAiBC,UAFT;AAGjBjB,WAAS,iBAAUkB;AAHF,C;kBADAvB,Y;;;AA8CrB,IAAMc,SAAS;AACbC,aAAW;AACTT,WAAO,OADE;AAETkB,aAAS,yBAAeC,QAFf;AAGTC,eAAW,QAHF;;AAKTC,cAAU,OALD;AAMTC,SAAK,CANI;AAOTC,UAAM,CAPG;AAQTC,WAAO;AARE;AADE,CAAf","file":"ui/Notification.js","sourcesContent":["import React, {PropTypes} from 'react';\n\nimport StyleConstants from './StyleConstants';\n\nlet MAX_LENGTH = 150;\n\nexport default class Notification extends React.Component {\n  static propTypes = {\n    type: PropTypes.oneOf(['success', 'error', 'warning', 'info']),\n    message: PropTypes.string.isRequired,\n    onClick: PropTypes.func,\n  };\n\n  _onClick = (event) => {\n    event.stopPropagation();\n    if (this.props.onClick) {\n      this.props.onClick();\n    }\n  };\n\n  render() {\n    let color;\n    switch (this.props.type) {\n      case 'error':\n        color = StyleConstants.colorError;\n        break;\n      case 'warning':\n        color = StyleConstants.colorWarning;\n        break;\n      default:\n        color = StyleConstants.colorPrimary;\n        break;\n    }\n\n    let message = this.props.message;\n    if (message.length > MAX_LENGTH) {\n      message = `${message.substring(0, MAX_LENGTH)}...`;\n    }\n\n    return (\n      <div\n        style={{\n          ...Styles.container,\n          backgroundColor: color,\n          cursor: this.props.onClick ? 'pointer' : 'default',\n        }} onClick={this._onClick}>\n        {message}\n      </div>\n    );\n  }\n}\n\nconst Styles = {\n  container: {\n    color: 'white',\n    padding: StyleConstants.gutterMd,\n    textAlign: 'center',\n\n    position: 'fixed',\n    top: 0,\n    left: 0,\n    right: 0,\n  },\n};\n"],"sourceRoot":"/source/"}