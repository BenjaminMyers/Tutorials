{"version":3,"sources":["ui/ProjectScreen.js"],"names":["DEVICES_ICON_SIZE","OPTIONS_ICON_SIZE","PROJECT_OPENED_MESSAGE","ProjectScreen","props","context","_logInfo","data","logInfo","state","projectRoot","_logError","logError","_urlInputSelect","_urlInput","select","_urlInputCopy","document","execCommand","_setProjectSettingAsync","options","setAsync","projectSettings","_computeUrlAsync","computedUrl","setState","_renderDeviceLogs","connectedDevices","focusedConnectedDeviceId","device","logs","_defaultDeviceLogs","Styles","tabContainer","_renderPopoverDeviceLogs","iconWithMargin","deviceSelectIcon","_toggleDeviceLogsPopover","deviceSelectText","name","level","INFO","msg","time","_startTime","exponentSdkStatus","EXPONENT_SDK_NOT_INSTALLED","push","WARN","EXPONENT_SDK_NOT_IMPORTED","event","stopPropagation","onTogglePopover","DEVICE_LOGS","_setSelectedDevice","deviceId","_appendLogChunk","chunk","shouldHide","_logsToAdd","requestAnimationFrame","length","concat","restartAsync","isShiftSelected","logEvent","getAsync","clearCacheByDefault","reset","shiftMessage","isProjectRunning","expJson","startAsync","message","getExponentSdkStatus","_getDeviceName","id","_deviceIdToName","includes","values","number","_handleDeviceLogs","_deviceLogsToAdd","i","deviceName","Date","Error","readAsync","xdeProjectId","_currentOpenProjectXDEId","attachLoggerStream","stream","write","tag","type","send","expInfoSafeAsync","projectJson","stopAsync","_resetLocalProperties","EXPONENT_SDK_INSTALLED_AND_IMPORTED","_registerLogs","nextProps","nextState","updateParentState","shouldShowDeviceLogs","gteSdkVersion","display","flexDirection","height","margin","gutterLg","_renderUrlInput","tabsContainer","_renderPackagerConsole","verticalSeparator","urlInputContainer","_renderPopoverOptions","optionsIcon","_toggleOptionsPopover","r","urlInput","urlInputCopyIcon","openPopover","OPTIONS","hostMenuItems","map","label","option","toLowerCase","checkState","hostType","protocolMenuItems","urlType","otherMenuItems","isEnabled","hoverBox","root","constructManifestUrlAsync","isLoading","menuItems","forEach","isSelected","global","addStream","Component","propTypes","string","func","bool","width","backgroundColor","colorBackground","alignItems","marginTop","position","flex","cursor","gutterSm","marginBottom","marginLeft","gutterMd","marginRight","input","paddingLeft","padding","right","top","fontSize","fontSizeSm","color","colorText","marginVertical"],"mappings":"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","file":"ui/ProjectScreen.js","sourcesContent":["import {\n  Analytics,\n  Doctor,\n  Exp,\n  Logger,\n  Project,\n  ProjectSettings,\n  ProjectUtils,\n  UrlUtils,\n  UserSettings,\n  Versions,\n} from 'xdl';\n\nimport _ from 'lodash';\nimport bunyan from 'bunyan';\nimport { ipcRenderer } from 'electron';\nimport React, {PropTypes} from 'react';\n\nimport {\n  PopoverEnum,\n} from './Constants';\n\nimport ConsoleLog from './ConsoleLog';\nimport StyleConstants from './StyleConstants';\nimport SharedStyles from './Styles';\nimport MenuItem from './toolbar/MenuItem';\nimport Popover from './toolbar/Popover';\n\nconst DEVICES_ICON_SIZE = 16;\nconst OPTIONS_ICON_SIZE = 22;\nconst PROJECT_OPENED_MESSAGE = 'Project opened! You can now use the \"Send Link\" or \"Device\" buttons to view your project.';\n\nexport default class ProjectScreen extends React.Component {\n  static propTypes = {\n    openPopover: PropTypes.string,\n    onTogglePopover: PropTypes.func,\n    isLoading: PropTypes.bool,\n    updateParentState: PropTypes.func,\n  };\n\n  constructor(props, context) {\n    super(props, context);\n    this.state = {\n      logs: [],\n      connectedDevices: {}, // mapping of device id -> {name, logs: array of logs}\n      focusedConnectedDeviceId: null,\n      expJson: null,\n      exponentSdkStatus: Doctor.EXPONENT_SDK_INSTALLED_AND_IMPORTED,\n      computedUrl: null,\n\n      projectRoot: null,\n      projectJson: null,\n      projectSettings: null,\n      isProjectRunning: false,\n    };\n\n    this._resetLocalProperties();\n  }\n\n  componentDidMount() {\n    this._registerLogs();\n  }\n\n  componentWillUpdate(nextProps, nextState) {\n    if (nextState.projectRoot !== this.state.projectRoot ||\n      nextState.projectJson !== this.state.projectJson ||\n      nextState.projectSettings !== this.state.projectSettings ||\n      nextState.isProjectRunning !== this.state.isProjectRunning) {\n      this.props.updateParentState({\n        projectRoot: nextState.projectRoot,\n        projectJson: nextState.projectJson,\n        projectSettings: nextState.projectSettings,\n        isProjectRunning: nextState.isProjectRunning,\n      });\n    }\n  }\n\n  computedUrl() {\n    return this.state.computedUrl;\n  }\n\n  _resetLocalProperties() {\n    this._startTime = new Date();\n    this._logsToAdd = [];\n    this._deviceLogsToAdd = [];\n    this._deviceIdToName = {};\n  }\n\n  _logInfo = (data) => ProjectUtils.logInfo(this.state.projectRoot, 'exponent', data);\n  _logError = (data) => ProjectUtils.logError(this.state.projectRoot, 'exponent', data);\n\n  render() {\n    // Device logs only work >= SDK 7\n    let shouldShowDeviceLogs = false;\n    if (this.state.expJson && Versions.gteSdkVersion(this.state.expJson, '7.0.0')) {\n      shouldShowDeviceLogs = true;\n    }\n\n    return (\n      <div style={{\n        display: 'flex',\n        flexDirection: 'column',\n        height: '100vh',\n      }}>\n        <div style={{margin: StyleConstants.gutterLg}}>\n          {this.state.projectSettings && this._renderUrlInput()}\n        </div>\n        <div style={Styles.tabsContainer}>\n          {this._renderPackagerConsole()}\n          {shouldShowDeviceLogs && <div style={Styles.verticalSeparator} />}\n          {shouldShowDeviceLogs && this._renderDeviceLogs()}\n        </div>\n      </div>\n    );\n  }\n\n  _renderUrlInput() {\n    return (\n      <div style={Styles.urlInputContainer}>\n        <Popover body={this._renderPopoverOptions()} arrowOffset={16}>\n          <img src=\"./gear.svg\"\n            style={[Styles.iconWithMargin, Styles.optionsIcon]}\n            onClick={this._toggleOptionsPopover}\n          />\n        </Popover>\n        <input\n          ref={(r) => { this._urlInput = r; }}\n          style={Styles.urlInput}\n          value={this.state.computedUrl || ''}\n          placeholder=\"Waiting for packager and tunnel to start...\"\n          onClick={this._urlInputSelect}\n        />\n        <img src=\"./IconArrowUpRight.png\"\n          style={Styles.urlInputCopyIcon}\n          onClick={this._urlInputCopy}\n        />\n      </div>\n    );\n  }\n\n  _urlInputSelect = () => {\n    this._urlInput.select();\n  };\n\n  _urlInputCopy = () => {\n    this._urlInputSelect();\n    document.execCommand('copy');\n  };\n\n  _renderPopoverOptions() {\n    if (this.props.openPopover !== PopoverEnum.OPTIONS) {\n      return null;\n    }\n\n    const hostMenuItems = ['Tunnel', 'LAN', 'localhost'].map((label) => {\n      const option = label.toLowerCase();\n      const checkState = this.state.projectSettings.hostType === option ?\n        'checked' : 'unchecked';\n\n      /* eslint-disable react/jsx-no-bind */\n      return (\n        <MenuItem label={label} key={option} checkState={checkState}\n          onClick={() => this._setProjectSettingAsync({hostType: option})}\n        />\n      );\n      /* eslint-enable react/jsx-no-bind */\n    });\n\n    const protocolMenuItems = ['exp', 'http', 'redirect'].map((option) => {\n      const checkState = this.state.projectSettings.urlType === option ?\n        'checked' : 'unchecked';\n\n      /* eslint-disable react/jsx-no-bind */\n      return (\n        <MenuItem label={option} key={option} checkState={checkState}\n          onClick={() => this._setProjectSettingAsync({urlType: option})}\n        />\n      );\n      /* eslint-enable react/jsx-no-bind */\n    });\n\n    const otherMenuItems = [{\n      label: 'Development Mode',\n      option: 'dev',\n    }, {\n      label: 'Minify',\n      option: 'minify',\n    }].map(({label, option}) => {\n      const isEnabled = this.state.projectSettings[option];\n\n      /* eslint-disable react/jsx-no-bind */\n      return (\n        <MenuItem label={label} key={option}\n          checkState={isEnabled ? 'checked' : 'unchecked'}\n          onClick={() => this._setProjectSettingAsync({[option]: !isEnabled})}\n        />\n      );\n      /* eslint-enable react/jsx-no-bind */\n    });\n\n    // Just for aesthetics, make top-level MenuItems all \"unchecked\" (so the\n    // beginning of the text lines up)\n    return (\n      <div>\n        <MenuItem label=\"Host\" checkState=\"unchecked\">\n          <div style={SharedStyles.hoverBox}>\n            {hostMenuItems}\n          </div>\n        </MenuItem>\n        <MenuItem label=\"Protocol\" checkState=\"unchecked\">\n          <div style={SharedStyles.hoverBox}>\n            {protocolMenuItems}\n          </div>\n        </MenuItem>\n        {otherMenuItems}\n      </div>\n    );\n  }\n\n  _setProjectSettingAsync = async (options) => {\n    let projectSettings = await ProjectSettings.setAsync(this.state.projectRoot, options);\n    let computedUrl = await this._computeUrlAsync(this.state.projectRoot);\n    this.setState({\n      projectSettings,\n      computedUrl,\n    });\n  };\n\n  async _computeUrlAsync(root) {\n    if (!root) {\n      return null;\n    }\n\n    return UrlUtils.constructManifestUrlAsync(root);\n  }\n\n  _renderPackagerConsole() {\n    return <ConsoleLog logs={this.state.logs} isLoading={this.props.isLoading} />;\n  }\n\n  _renderDeviceLogs = () => {\n    let {\n      connectedDevices,\n      focusedConnectedDeviceId,\n    } = this.state;\n\n    let device = focusedConnectedDeviceId ? connectedDevices[focusedConnectedDeviceId] : null;\n    let logs = device ? device.logs : this._defaultDeviceLogs();\n    return (\n      <div style={Styles.tabContainer}>\n        <ConsoleLog logs={logs} />\n        <div>\n          {<Popover body={this._renderPopoverDeviceLogs()} arrowOffset={16} isAbove>\n            <img\n              src=\"./SelectUpDown.png\"\n              style={[Styles.iconWithMargin, Styles.deviceSelectIcon]}\n              onClick={this._toggleDeviceLogsPopover}\n            />\n          </Popover>\n          }\n          <span style={Styles.deviceSelectText}>\n            {device ? device.name : 'No devices connected'}\n          </span>\n        </div>\n      </div>\n    );\n  };\n\n  _defaultDeviceLogs = () => {\n    let logs = [{\n      level: bunyan.INFO,\n      msg: `Logs from devices will appear here`,\n      time: this._startTime,\n    }];\n\n    if (this.state.exponentSdkStatus === Doctor.EXPONENT_SDK_NOT_INSTALLED) {\n      logs.push({\n        level: bunyan.WARN,\n        msg: `Please run \\`npm install --save exponent\\` and add \\`import 'exponent'\\` to the top of your main file to see device logs.`,\n        time: this._startTime,\n      });\n    } else if (this.state.exponentSdkStatus === Doctor.EXPONENT_SDK_NOT_IMPORTED) {\n      logs.push({\n        level: bunyan.WARN,\n        msg: `Add \\`import 'exponent'\\` to the top of your main file to see device logs.`,\n        time: this._startTime,\n      });\n    }\n\n    return logs;\n  };\n\n  _toggleDeviceLogsPopover = (event) => {\n    event.stopPropagation();\n    if (this.state.focusedConnectedDeviceId) {\n      this.props.onTogglePopover(PopoverEnum.DEVICE_LOGS);\n    }\n  };\n\n  _setSelectedDevice = (deviceId) => {\n    this.setState({\n      focusedConnectedDeviceId: deviceId,\n    });\n  };\n\n  _renderPopoverDeviceLogs() {\n    if (this.props.openPopover !== PopoverEnum.DEVICE_LOGS) {\n      return null;\n    }\n\n    let menuItems = [];\n    _.forEach(this.state.connectedDevices, (device, deviceId) => {\n      const isSelected = this.state.focusedConnectedDeviceId === deviceId;\n\n      /* eslint-disable react/jsx-no-bind */\n      menuItems.push(\n        <MenuItem\n          label={device.name}\n          key={deviceId}\n          checkState={isSelected ? 'checked' : 'unchecked'}\n          onClick={() => this._setSelectedDevice(deviceId)}\n        />\n      );\n      /* eslint-enable react/jsx-no-bind */\n    });\n\n    return (\n      <div>\n        {menuItems}\n      </div>\n    );\n  }\n\n  _appendLogChunk = (chunk) => {\n    if (!chunk.shouldHide) {\n      this._logsToAdd.push(chunk);\n\n      requestAnimationFrame(() => {\n        if (this._logsToAdd.length === 0) {\n          return;\n        }\n\n        let logs = this.state.logs.concat(this._logsToAdd);\n        this._logsToAdd = [];\n        this.setState({\n          logs,\n        });\n      });\n    }\n  };\n\n  _registerLogs() {\n    Logger.global.addStream({\n      stream: {\n        write: (chunk) => {\n          this._appendLogChunk(chunk);\n        },\n      },\n      type: 'raw',\n    });\n  }\n\n  restartAsync = async (isShiftSelected = false) => {\n    Analytics.logEvent('Click Restart');\n\n    let clearCacheByDefault = await UserSettings.getAsync('clearCacheByDefault', true);\n    let reset = clearCacheByDefault ? !isShiftSelected : isShiftSelected;\n\n    let shiftMessage = '';\n    if (!isShiftSelected) {\n      shiftMessage = clearCacheByDefault ? ' (Hold shift while clicking restart to avoid clearing cache)' : ' (Hold shift while clicking restart to clear packager cache)';\n    }\n\n    this._logInfo(`Restarting project${(reset ? ' and clearing packager cache' : '')}${shiftMessage}.`);\n    this.setState({\n      computedUrl: null,\n      isProjectRunning: false,\n    }, async () => {\n      // TODO: refactor this. can't call _startProjectAsync and _stopProjectAsync\n      // because they rely on setState calls that work asynchronously.\n      let expJson;\n      try {\n        expJson = await Project.startAsync(this.state.projectRoot, { reset });\n        this._logInfo(PROJECT_OPENED_MESSAGE);\n      } catch (err) {\n        this._logError(err.message);\n      }\n\n      let computedUrl = await this._computeUrlAsync(this.state.projectRoot);\n      let exponentSdkStatus = await Doctor.getExponentSdkStatus(this.state.projectRoot);\n      this.setState({\n        computedUrl,\n        isProjectRunning: true,\n        expJson,\n        exponentSdkStatus,\n      });\n    });\n  };\n\n  // If multiple devices with the same name are connected, add ' - 1', ' - 2' to their names.\n  _getDeviceName = (id, name) => {\n    if (this._deviceIdToName[id]) {\n      return this._deviceIdToName[id];\n    }\n\n    if (!_.includes(_.values(this._deviceIdToName), name)) {\n      this._deviceIdToName[id] = name;\n      return name;\n    }\n\n    let number = 1;\n    while (_.includes(_.values(this._deviceIdToName), `${name} - ${number}`)) {\n      number++;\n    }\n\n    this._deviceIdToName[id] = `${name} - ${number}`;\n    return this._deviceIdToName[id];\n  }\n\n  _handleDeviceLogs = (chunk) => {\n    this._deviceLogsToAdd.push(chunk);\n\n    requestAnimationFrame(() => {\n      if (this._deviceLogsToAdd.length === 0) {\n        return;\n      }\n\n      this.setState((state) => {\n        let connectedDevices = state.connectedDevices;\n        let focusedConnectedDeviceId = state.focusedConnectedDeviceId;\n\n        for (let i = 0; i < this._deviceLogsToAdd.length; i++) {\n          let chunk = this._deviceLogsToAdd[i];\n          if (!connectedDevices[chunk.deviceId]) {\n            let name = this._getDeviceName(chunk.deviceId, chunk.deviceName);\n            if (!focusedConnectedDeviceId) {\n              focusedConnectedDeviceId = chunk.deviceId;\n            }\n            connectedDevices[chunk.deviceId] = {\n              name,\n              logs: [{\n                level: bunyan.INFO,\n                msg: `Streaming logs from ${name}...`,\n                time: new Date(),\n              }],\n            };\n          }\n\n          connectedDevices[chunk.deviceId].logs = connectedDevices[chunk.deviceId].logs.concat([chunk]);\n        }\n        this._deviceLogsToAdd = [];\n\n        return {\n          focusedConnectedDeviceId,\n          connectedDevices,\n        };\n      });\n    });\n  }\n\n  startAsync = async (projectRoot) => {\n    if (this.state.projectRoot) {\n      return false;\n    }\n\n    if (!projectRoot) {\n      throw new Error(\"Could not open project: empty root.\");\n    }\n\n    let projectSettings = await ProjectSettings.readAsync(projectRoot);\n    let xdeProjectId = this._currentOpenProjectXDEId;\n\n    ProjectUtils.attachLoggerStream(projectRoot, {\n      stream: {\n        write: (chunk) => {\n          if (this._currentOpenProjectXDEId !== xdeProjectId) {\n            return;\n          }\n\n          if (chunk.tag === 'device') {\n            this._handleDeviceLogs(chunk);\n          } else {\n            this._appendLogChunk(chunk);\n          }\n        },\n      },\n      type: 'raw',\n    });\n\n    // Send projectRoot to main process. main process will close this project\n    // when XDE is closed.\n    ipcRenderer.send('project-opened', projectRoot);\n\n    const projectJson = await Exp.expInfoSafeAsync(projectRoot);\n\n    this.setState({\n      projectSettings,\n      projectRoot,\n      projectJson,\n      isProjectRunning: false,\n    }, async () => {\n      try {\n        let expJson = await Project.startAsync(projectRoot);\n        this._logInfo(PROJECT_OPENED_MESSAGE);\n\n        let computedUrl = await this._computeUrlAsync(projectRoot);\n        let exponentSdkStatus = await Doctor.getExponentSdkStatus(projectRoot);\n        this.setState({\n          computedUrl,\n          isProjectRunning: true,\n          expJson,\n          exponentSdkStatus,\n        });\n      } catch (err) {\n        this._logError(err.message);\n      }\n    });\n\n    return true;\n  };\n\n  stopAsync = async (projectRoot) => {\n    if (!this.state.projectRoot) {\n      return false;\n    }\n\n    this._currentOpenProjectXDEId++;\n\n    // Send projectRoot to main process.\n    ipcRenderer.send('project-closed', projectRoot);\n\n    try {\n      await Project.stopAsync(projectRoot);\n      this._logInfo('Project closed.');\n      this.setState({\n        projectSettings: null,\n        projectRoot: null,\n        projectJson: null,\n        computedUrl: null,\n        isProjectRunning: false,\n        expJson: null,\n        logs: [],\n        connectedDevices: {},\n        focusedConnectedDeviceId: null,\n      });\n      this._resetLocalProperties();\n\n      return true;\n    } catch (err) {\n      this._logError(err.message);\n\n      return false;\n    }\n  };\n}\n\nlet Styles = {\n  verticalSeparator: {\n    width: 2,\n    display: 'flex',\n    backgroundColor: StyleConstants.colorBackground,\n  },\n\n  urlInputContainer: {\n    display: 'flex',\n    alignItems: 'center',\n    marginTop: StyleConstants.gutterLg,\n    position: 'relative', // For positioning copy icon\n  },\n\n  tabContainer: {\n    flex: '1',\n    display: 'flex',\n    flexDirection: 'column',\n    height: '100%',\n  },\n\n  iconWithMargin: {\n    cursor: 'pointer',\n    marginTop: StyleConstants.gutterSm,\n    marginBottom: StyleConstants.gutterSm,\n  },\n\n  optionsIcon: {\n    width: OPTIONS_ICON_SIZE,\n    height: OPTIONS_ICON_SIZE,\n    marginLeft: StyleConstants.gutterMd,\n    marginRight: -(StyleConstants.gutterMd + OPTIONS_ICON_SIZE),\n  },\n\n  urlInput: {\n    ...SharedStyles.input,\n    flex: 1,\n    paddingLeft: OPTIONS_ICON_SIZE + (StyleConstants.gutterMd * 2) - StyleConstants.gutterSm,\n  },\n\n  urlInputCopyIcon: {\n    cursor: 'pointer',\n    padding: StyleConstants.gutterMd, // Pad clickable area\n\n    position: 'absolute',\n    right: 0,\n    top: '50%',\n    height: (StyleConstants.gutterMd * 2) + 10,\n    marginTop: -((StyleConstants.gutterMd * 2) + 10) / 2,\n  },\n\n  deviceSelectIcon: {\n    height: DEVICES_ICON_SIZE,\n    marginLeft: StyleConstants.gutterMd,\n    marginRight: -(StyleConstants.gutterMd + DEVICES_ICON_SIZE),\n  },\n\n  deviceSelectText: {\n    fontSize: StyleConstants.fontSizeSm,\n    color: StyleConstants.colorText,\n    paddingLeft: DEVICES_ICON_SIZE + (StyleConstants.gutterMd * 2) - StyleConstants.gutterSm,\n    marginVertical: StyleConstants.gutterSm,\n  },\n\n  tabsContainer: {\n    display: 'flex',\n    flexDirection: 'row',\n    height: '100%',\n  },\n};\n"],"sourceRoot":"/source/"}