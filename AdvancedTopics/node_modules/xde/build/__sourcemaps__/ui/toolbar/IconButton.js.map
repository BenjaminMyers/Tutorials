{"version":3,"sources":["ui/toolbar/IconButton.js"],"names":["IconButton","Component","render","containerStyles","styles","container","props","isDisabled","containerDisabled","iconEl","iconContainer","borderColor","color","iconUrl","icon","mainEl","popover","isPopoverToLeft","onClick","label","propTypes","string","isRequired","bool","func","oneOfType","array","object","node","create","alignItems","display","flexDirection","fontSize","fontSizeMd","verticalAlign","background","border","opacity","borderRadius","borderStyle","borderWidth","marginBottom","gutterSm","width","height","justifyContent","maxHeight","maxWidth"],"mappings":";;;;;;;AAAA;;AACA;;;;AAEA;;;;AACA;;;;;;IAEqBA,U,GAAN,MAAMA,UAAN,SAAyB,gBAAMC,SAA/B,CAAyC;;AActDC,WAAS;AACP,UAAMC,kBAAkB,CACtBC,OAAOC,SADe,EAEtB,KAAKC,KAAL,CAAWF,MAFW,EAGrB,KAAKE,KAAL,CAAWC,UAAX,GAAwBH,OAAOI,iBAA/B,GAAmD,IAH9B,CAAxB;AAKA,UAAMC,SACJ;AAAA;AAAA;AACE,mBAAW,oBAAIL,OAAOM,aAAX,CADb;AAEE,eAAO,EAACC,aAAa,KAAKL,KAAL,CAAWM,KAAzB,EAFT;AAGE;AACE,aAAK,KAAKN,KAAL,CAAWO,OADlB;AAEE,mBAAW,oBAAIT,OAAOU,IAAX;AAFb;AAHF,KADF;;AAWA,UAAMC,SAAS,KAAKT,KAAL,CAAWU,OAAX,GACb;AAAA;AAAA;AACE,kBAAU,KAAKV,KAAL,CAAWW,eADvB;AAEE,cAAM,KAAKX,KAAL,CAAWU,OAFnB;AAGE,qBAAa,EAHf;AAIE,uBAAe,CAAC,EAJlB;AAKGP;AALH,KADa,GAQbA,MARF;;AAUA,WACE;AAAA;AAAA;AACE,mBAAW,oBAAI,GAAGN,eAAP,CADb;AAEE,kBAAU,KAAKG,KAAL,CAAWC,UAFvB;AAGE,iBAAS,KAAKD,KAAL,CAAWY,OAHtB;AAIGH,YAJH;AAKE;AAAA;AAAA,UAAK,OAAO,EAACH,OAAO,KAAKN,KAAL,CAAWM,KAAnB,EAAZ;AACG,aAAKN,KAAL,CAAWa;AADd;AALF,KADF;AAWD;AApDqD,C;AAAnCnB,U,CACZoB,S,GAAY;AACjBR,SAAO,iBAAUS,MAAV,CAAiBC,UADP;AAEjBT,WAAS,iBAAUQ,MAAV,CAAiBC,UAFT;AAGjBf,cAAY,iBAAUgB,IAHL;AAIjBJ,SAAO,iBAAUE,MAAV,CAAiBC,UAJP;AAKjBJ,WAAS,iBAAUM,IAAV,CAAeF,UALP;AAMjBlB,UAAQ,iBAAUqB,SAAV,CAAoB,CAAC,iBAAUC,KAAX,EAAkB,iBAAUC,MAA5B,CAApB,CANS;;AAQjB;AACAX,WAAS,iBAAUY,IATF;AAUjBX,mBAAiB,iBAAUM;AAVV,C;kBADAvB,U;;;AAuDrB,MAAMI,SAAS,sBAAWyB,MAAX,CAAkB;AAC/BxB,aAAW;AACTyB,gBAAY,QADH;AAETC,aAAS,aAFA;AAGTC,mBAAe,QAHN;AAITC,cAAU,yBAAeC,UAJhB;AAKTC,mBAAe,QALN;;AAOT;AACAC,gBAAY,aARH;AASTC,YAAQ;AATC,GADoB;AAY/B7B,qBAAmB;AACjB8B,aAAS;AADQ,GAZY;AAe/B5B,iBAAe;AACb6B,kBAAc,KADD;AAEbC,iBAAa,OAFA;AAGbC,iBAAa,CAHA;AAIbC,kBAAc,yBAAeC,QAJhB;AAKbC,WAAO,EALM;AAMbC,YAAQ,EANK;;AAQb;AACAd,aAAS,MATI;AAUbD,gBAAY,QAVC;AAWbgB,oBAAgB;AAXH,GAfgB;AA4B/BhC,QAAM;AACJiC,eAAW,EADP;AAEJC,cAAU;AAFN;AA5ByB,CAAlB,CAAf","file":"ui/toolbar/IconButton.js","sourcesContent":["import { StyleSheet, css } from 'aphrodite';\nimport React, {PropTypes} from 'react';\n\nimport StyleConstants from '../StyleConstants';\nimport Popover from './Popover';\n\nexport default class IconButton extends React.Component {\n  static propTypes = {\n    color: PropTypes.string.isRequired,\n    iconUrl: PropTypes.string.isRequired,\n    isDisabled: PropTypes.bool,\n    label: PropTypes.string.isRequired,\n    onClick: PropTypes.func.isRequired,\n    styles: PropTypes.oneOfType([PropTypes.array, PropTypes.object]),\n\n    // If specified, popover appears beneath icon circle on click.\n    popover: PropTypes.node,\n    isPopoverToLeft: PropTypes.bool,\n  };\n\n  render() {\n    const containerStyles = [\n      styles.container,\n      this.props.styles,\n      (this.props.isDisabled ? styles.containerDisabled : null),\n    ];\n    const iconEl = (\n      <div\n        className={css(styles.iconContainer)}\n        style={{borderColor: this.props.color}}>\n        <img\n          src={this.props.iconUrl}\n          className={css(styles.icon)}\n        />\n      </div>\n    );\n\n    const mainEl = this.props.popover ?\n      <Popover\n        isToLeft={this.props.isPopoverToLeft}\n        body={this.props.popover}\n        arrowOffset={20}\n        popoverOffset={-10}>\n        {iconEl}\n      </Popover> :\n      iconEl;\n\n    return (\n      <button\n        className={css(...containerStyles)}\n        disabled={this.props.isDisabled}\n        onClick={this.props.onClick}>\n        {mainEl}\n        <div style={{color: this.props.color}}>\n          {this.props.label}\n        </div>\n      </button>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    alignItems: 'center',\n    display: 'inline-flex',\n    flexDirection: 'column',\n    fontSize: StyleConstants.fontSizeMd,\n    verticalAlign: 'middle',\n\n    // Override button styles\n    background: 'transparent',\n    border: 'none',\n  },\n  containerDisabled: {\n    opacity: 0.3,\n  },\n  iconContainer: {\n    borderRadius: '50%',\n    borderStyle: 'solid',\n    borderWidth: 2,\n    marginBottom: StyleConstants.gutterSm,\n    width: 32,\n    height: 32,\n\n    // Center the icon within the container\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  icon: {\n    maxHeight: 15,\n    maxWidth: 15,\n  },\n});\n"],"sourceRoot":"/source/"}