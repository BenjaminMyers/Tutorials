require("source-map-support").install();
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;
/******/
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// identity function for calling harmory imports with the correct context
/******/ 	__webpack_require__.i = function(value) { return value; };
/******/
/******/ 	// define getter function for harmory exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		Object.defineProperty(exports, name, {
/******/ 			configurable: false,
/******/ 			enumerable: true,
/******/ 			get: getter
/******/ 		});
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/main.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./src/config.js":
/***/ function(module, exports) {

module.exports = {
  // __DEV__: true,
};

/***/ },

/***/ "./src/main.js":
/***/ function(module, exports, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_promise__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_promise___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_promise__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_asyncToGenerator__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_asyncToGenerator___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_asyncToGenerator__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_electron__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_electron___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_electron__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_path__ = __webpack_require__(5);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_path___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_path__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_lodash__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_lodash___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_lodash__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__remote_Menu__ = __webpack_require__("./src/remote/Menu.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__remote_Menu___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5__remote_Menu__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__config__ = __webpack_require__("./src/config.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__config___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_6__config__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_xdl__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_xdl___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_7_xdl__);












const app = __WEBPACK_IMPORTED_MODULE_2_electron___default.a.app,
      BrowserWindow = __WEBPACK_IMPORTED_MODULE_2_electron___default.a.BrowserWindow,
      ipcMain = __WEBPACK_IMPORTED_MODULE_2_electron___default.a.ipcMain;


if (!__webpack_require__(3)) {
  // Report crashes to our server.
  // electron.CrashReporter.start();

  // Keep a global reference of the window object, if you don't, the window will
  // be closed automatically when the JavaScript object is GCed.
  let mainWindow = null;
  let projectRoots = [];

  ipcMain.on('project-opened', (event, projectRoot) => {
    console.log(`Opened project at ${ projectRoot }`);
    projectRoots.push(projectRoot);

    __WEBPACK_IMPORTED_MODULE_5__remote_Menu___default.a.setupMenu(mainWindow, true);
  });

  ipcMain.on('project-closed', (event, projectRoot) => {
    console.log(`Closed project at ${ projectRoot }`);
    projectRoots = __WEBPACK_IMPORTED_MODULE_4_lodash___default.a.without(projectRoots, projectRoot);

    __WEBPACK_IMPORTED_MODULE_5__remote_Menu___default.a.setupMenu(mainWindow, false);
  });

  app.on('window-all-closed', () => {
    app.quit();
  });

  // Clean up all open projects before exiting
  app.on('will-quit', (() => {
    var _ref = __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_asyncToGenerator___default()(function* (event) {
      if (projectRoots.length > 0) {
        event.preventDefault();

        try {
          yield __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_promise___default.a.all(projectRoots.map(function (root) {
            return __WEBPACK_IMPORTED_MODULE_7_xdl__["Project"].stopAsync(root);
          }));
        } catch (e) {
          // not much we can do here
          console.error(e);
        }
        projectRoots = [];

        app.quit();
      }
    });

    return function (_x) {
      return _ref.apply(this, arguments);
    };
  })());

  app.on('ready', () => {
    if (false) {
      const devToolsInstaller = require('electron-devtools-installer');
      const installExtension = devToolsInstaller.default,
            REACT_DEVELOPER_TOOLS = devToolsInstaller.REACT_DEVELOPER_TOOLS;


      installExtension(REACT_DEVELOPER_TOOLS).then(name => console.log(`Added Extension:  ${ name }`)).catch(err => console.log('An error occurred: ', err));
    }
    // Create the browser window.
    mainWindow = new BrowserWindow({
      width: 1200,
      height: 800,
      minWidth: 700,
      minHeight: 500,
      // for windows. osx gets icon from post install task
      icon: __WEBPACK_IMPORTED_MODULE_3_path___default.a.resolve(__dirname, '../build/xde.ico')
    });
    mainWindow.loadURL(`file://${ __WEBPACK_IMPORTED_MODULE_3_path___default.a.resolve(__dirname, '../web/index.html') }`);

    // Open the devtools.
    if (__WEBPACK_IMPORTED_MODULE_6__config___default.a.__DEV__) {
      mainWindow.openDevTools();
    }

    // Setup the menu bar
    __WEBPACK_IMPORTED_MODULE_5__remote_Menu___default.a.setupMenu(mainWindow, false);

    mainWindow.on('closed', () => {
      // Dereference the window object, usually you would store windows
      // in an array if your app supports multi windows, this is the time
      // when you should delete the corresponding element.
      mainWindow = null;
    });

    let webContents = mainWindow.webContents;
    var handleRedirect = (e, url) => {
      if (url !== webContents.getURL()) {
        e.preventDefault();
        __webpack_require__(0).shell.openExternal(url);
      }
    };

    webContents.on('will-navigate', handleRedirect);
    webContents.on('new-window', handleRedirect);
  });
}

/***/ },

/***/ "./src/remote/Menu.js":
/***/ function(module, exports, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_electron__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_electron___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_electron__);


function _installShellCommands(window, isProjectOpen) {
  if (process.platform === 'darwin') {
    return [{
      label: 'Install Shell Commands',
      click: () => {
        window.webContents.send('menu-item-clicked', 'install-shell-commands');
      },
      enabled: isProjectOpen
    }, {
      type: 'separator'
    }];
  } else {
    return [];
  }
}

function _installIosSimulatorApp(window, isProjectOpen) {
  if (process.platform === 'darwin') {
    return [{
      label: 'Install iOS Simulator App',
      click: () => {
        window.webContents.send('menu-item-clicked', 'install-ios-simulator-app');
      },
      enabled: isProjectOpen
    }];
  } else {
    return [];
  }
}

function setupMenu(window, isProjectOpen) {
  let template = [{
    label: 'Edit',
    submenu: [{
      role: 'undo'
    }, {
      role: 'redo'
    }, {
      type: 'separator'
    }, {
      role: 'cut'
    }, {
      role: 'copy'
    }, {
      role: 'paste'
    }, {
      role: 'selectall'
    }]
  }, {
    label: 'View',
    submenu: [{
      label: 'Reload',
      accelerator: process.platform === 'darwin' ? 'Alt+Command+R' : 'Ctrl+Shift+R',
      click: () => {
        __WEBPACK_IMPORTED_MODULE_0_electron__["BrowserWindow"].getFocusedWindow().reload();
      }
    }, {
      label: 'Toggle DevTools',
      accelerator: process.platform === 'darwin' ? 'Alt+Command+I' : 'Ctrl+Shift+I',
      click: () => {
        __WEBPACK_IMPORTED_MODULE_0_electron__["BrowserWindow"].getFocusedWindow().toggleDevTools();
      }
    }]
  }, {
    label: 'Window',
    role: 'window',
    submenu: [{
      role: 'minimize'
    }, {
      role: 'close'
    }]
  }, {
    label: 'Help',
    role: 'help',
    submenu: [{
      label: 'Exponent Documentation',
      click: () => {
        __webpack_require__(0).shell.openExternal('https://docs.getexponent.com/');
      }
    }]
  }];

  if (process.platform === 'darwin') {
    template.unshift({
      label: 'Exponent XDE',
      submenu: [{
        role: 'about'
      }, {
        type: 'separator'
      }, ..._installShellCommands(window, isProjectOpen), {
        label: 'Install Android App',
        click: () => {
          window.webContents.send('menu-item-clicked', 'install-android-app');
        },
        enabled: isProjectOpen
      }, ..._installIosSimulatorApp(window, isProjectOpen), {
        type: 'separator'
      }, {
        role: 'services',
        submenu: []
      }, {
        type: 'separator'
      }, {
        role: 'hide'
      }, {
        role: 'hideothers'
      }, {
        role: 'unhide'
      }, {
        type: 'separator'
      }, {
        role: 'quit'
      }]
    });
    // Window menu.
    template[3].submenu = [{
      label: 'Close',
      accelerator: 'CmdOrCtrl+W',
      role: 'close'
    }, {
      label: 'Minimize',
      accelerator: 'CmdOrCtrl+M',
      role: 'minimize'
    }, {
      label: 'Zoom',
      role: 'zoom'
    }, {
      type: 'separator'
    }, {
      label: 'Bring All to Front',
      role: 'front'
    }];
  } else {
    template.unshift({
      label: 'Exponent XDE',
      submenu: [..._installShellCommands(window, isProjectOpen), {
        label: 'Install Android App',
        click: () => {
          window.webContents.send('menu-item-clicked', 'install-android-app');
        },
        enabled: isProjectOpen
      }, ..._installIosSimulatorApp(window, isProjectOpen)]
    });
  }

  let menu = __WEBPACK_IMPORTED_MODULE_0_electron__["Menu"].buildFromTemplate(template);
  __WEBPACK_IMPORTED_MODULE_0_electron__["Menu"].setApplicationMenu(menu);
}

module.exports = {
  setupMenu
};

/***/ },

/***/ 0:
/***/ function(module, exports) {

module.exports = require('electron');

/***/ },

/***/ 1:
/***/ function(module, exports) {

module.exports = require('babel-runtime/core-js/promise');

/***/ },

/***/ 2:
/***/ function(module, exports) {

module.exports = require('babel-runtime/helpers/asyncToGenerator');

/***/ },

/***/ 3:
/***/ function(module, exports) {

module.exports = require('electron-squirrel-startup');

/***/ },

/***/ 4:
/***/ function(module, exports) {

module.exports = require('lodash');

/***/ },

/***/ 5:
/***/ function(module, exports) {

module.exports = require('path');

/***/ },

/***/ 6:
/***/ function(module, exports) {

module.exports = require('xdl');

/***/ }

/******/ });
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAgNWZlOTk1NzAwYzQ1ZDE4MWRiNWYiLCJ3ZWJwYWNrOi8vLy4vc3JjL2NvbmZpZy5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvbWFpbi5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvcmVtb3RlL01lbnUuanMiLCJ3ZWJwYWNrOi8vL2V4dGVybmFsIFwicmVxdWlyZSgnZWxlY3Ryb24nKVwiIiwid2VicGFjazovLy9leHRlcm5hbCBcInJlcXVpcmUoJ2JhYmVsLXJ1bnRpbWUvY29yZS1qcy9wcm9taXNlJylcIiIsIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJyZXF1aXJlKCdiYWJlbC1ydW50aW1lL2hlbHBlcnMvYXN5bmNUb0dlbmVyYXRvcicpXCIiLCJ3ZWJwYWNrOi8vL2V4dGVybmFsIFwicmVxdWlyZSgnZWxlY3Ryb24tc3F1aXJyZWwtc3RhcnR1cCcpXCIiLCJ3ZWJwYWNrOi8vL2V4dGVybmFsIFwicmVxdWlyZSgnbG9kYXNoJylcIiIsIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJyZXF1aXJlKCdwYXRoJylcIiIsIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJyZXF1aXJlKCd4ZGwnKVwiIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJhcHAiLCJCcm93c2VyV2luZG93IiwiaXBjTWFpbiIsInJlcXVpcmUiLCJtYWluV2luZG93IiwicHJvamVjdFJvb3RzIiwib24iLCJldmVudCIsInByb2plY3RSb290IiwiY29uc29sZSIsImxvZyIsInB1c2giLCJNZW51Iiwic2V0dXBNZW51IiwiXyIsIndpdGhvdXQiLCJxdWl0IiwibGVuZ3RoIiwicHJldmVudERlZmF1bHQiLCJhbGwiLCJtYXAiLCJQcm9qZWN0Iiwic3RvcEFzeW5jIiwicm9vdCIsImUiLCJlcnJvciIsImRldlRvb2xzSW5zdGFsbGVyIiwiaW5zdGFsbEV4dGVuc2lvbiIsImRlZmF1bHQiLCJSRUFDVF9ERVZFTE9QRVJfVE9PTFMiLCJ0aGVuIiwibmFtZSIsImNhdGNoIiwiZXJyIiwid2lkdGgiLCJoZWlnaHQiLCJtaW5XaWR0aCIsIm1pbkhlaWdodCIsImljb24iLCJwYXRoIiwicmVzb2x2ZSIsIl9fZGlybmFtZSIsImxvYWRVUkwiLCJjb25maWciLCJfX0RFVl9fIiwib3BlbkRldlRvb2xzIiwid2ViQ29udGVudHMiLCJoYW5kbGVSZWRpcmVjdCIsInVybCIsImdldFVSTCIsInNoZWxsIiwib3BlbkV4dGVybmFsIiwiX2luc3RhbGxTaGVsbENvbW1hbmRzIiwid2luZG93IiwiaXNQcm9qZWN0T3BlbiIsInByb2Nlc3MiLCJwbGF0Zm9ybSIsImxhYmVsIiwiY2xpY2siLCJzZW5kIiwiZW5hYmxlZCIsInR5cGUiLCJfaW5zdGFsbElvc1NpbXVsYXRvckFwcCIsInRlbXBsYXRlIiwic3VibWVudSIsInJvbGUiLCJhY2NlbGVyYXRvciIsImdldEZvY3VzZWRXaW5kb3ciLCJyZWxvYWQiLCJ0b2dnbGVEZXZUb29scyIsInVuc2hpZnQiLCJtZW51IiwiYnVpbGRGcm9tVGVtcGxhdGUiLCJzZXRBcHBsaWNhdGlvbk1lbnUiXSwibWFwcGluZ3MiOiI7O0FBQUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7O0FBR0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0EsbURBQTJDLGNBQWM7O0FBRXpEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQUk7QUFDSjs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxtQ0FBMkIsMEJBQTBCLEVBQUU7QUFDdkQseUNBQWlDLGVBQWU7QUFDaEQ7QUFDQTtBQUNBOztBQUVBO0FBQ0EsOERBQXNELCtEQUErRDs7QUFFckg7QUFDQTs7QUFFQTtBQUNBOzs7Ozs7OztBQzlEQUEsT0FBT0MsT0FBUCxHQUFpQjtBQUNmO0FBRGUsQ0FBakIsQzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUNBQTtB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LGFBRmY7QUFHRUQsWUFBTTtBQUhSLEtBRG9CLEVBTXBCO0FBQ0VSLGFBQU8sVUFEVDtBQUVFUyxtQkFBYSxhQUZmO0FBR0VELFlBQU07QUFIUixLQU5vQixFQVdwQjtBQUNFUixhQUFPLE1BRFQ7QUFFRVEsWUFBTTtBQUZSLEtBWG9CLEVBZXBCO0FBQ0VKLFlBQU07QUFEUixLQWZvQixFQWtCcEI7QUFDRUosYUFBTyxvQkFEVDtBQUVFUSxZQUFNO0FBRlIsS0FsQm9CLENBQXRCO0FBdUJELEdBcEVELE1Bb0VPO0FBQ0xGLGFBQVNPLE9BQVQsQ0FBaUI7QUFDZmIsYUFBTyxjQURRO0FBRWZPLGVBQVMsQ0FDUCxHQUFHWixzQkFBc0JDLE1BQXRCLEVBQThCQyxhQUE5QixDQURJLEVBRVA7QUFDRUcsZUFBTyxxQkFEVDtBQUVFQyxlQUFPLE1BQU07QUFBRUwsaUJBQU9QLFdBQVAsQ0FBbUJhLElBQW5CLENBQXdCLG1CQUF4QixFQUE2QyxxQkFBN0M7QUFBc0UsU0FGdkY7QUFHRUMsaUJBQVNOO0FBSFgsT0FGTyxFQU9QLEdBQUdRLHdCQUF3QlQsTUFBeEIsRUFBZ0NDLGFBQWhDLENBUEk7QUFGTSxLQUFqQjtBQVlEOztBQUVELE1BQUlpQixPQUFPLDhDQUFBM0QsQ0FBSzRELGlCQUFMLENBQXVCVCxRQUF2QixDQUFYO0FBQ0FuRCxFQUFBLDhDQUFBQSxDQUFLNkQsa0JBQUwsQ0FBd0JGLElBQXhCO0FBQ0Q7O0FBRUR6RSxPQUFPQyxPQUFQLEdBQWlCO0FBQ2ZjO0FBRGUsQ0FBakIsQzs7Ozs7OztBQzFMQSxxQzs7Ozs7OztBQ0FBLDBEOzs7Ozs7O0FDQUEsbUU7Ozs7Ozs7QUNBQSxzRDs7Ozs7OztBQ0FBLG1DOzs7Ozs7O0FDQUEsaUM7Ozs7Ozs7QUNBQSxnQyIsImZpbGUiOiJtYWluLmpzIiwic291cmNlc0NvbnRlbnQiOlsiIFx0Ly8gVGhlIG1vZHVsZSBjYWNoZVxuIFx0dmFyIGluc3RhbGxlZE1vZHVsZXMgPSB7fTtcblxuIFx0Ly8gVGhlIHJlcXVpcmUgZnVuY3Rpb25cbiBcdGZ1bmN0aW9uIF9fd2VicGFja19yZXF1aXJlX18obW9kdWxlSWQpIHtcblxuIFx0XHQvLyBDaGVjayBpZiBtb2R1bGUgaXMgaW4gY2FjaGVcbiBcdFx0aWYoaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0pXG4gXHRcdFx0cmV0dXJuIGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdLmV4cG9ydHM7XG5cbiBcdFx0Ly8gQ3JlYXRlIGEgbmV3IG1vZHVsZSAoYW5kIHB1dCBpdCBpbnRvIHRoZSBjYWNoZSlcbiBcdFx0dmFyIG1vZHVsZSA9IGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdID0ge1xuIFx0XHRcdGk6IG1vZHVsZUlkLFxuIFx0XHRcdGw6IGZhbHNlLFxuIFx0XHRcdGV4cG9ydHM6IHt9XG4gXHRcdH07XG5cbiBcdFx0Ly8gRXhlY3V0ZSB0aGUgbW9kdWxlIGZ1bmN0aW9uXG4gXHRcdG1vZHVsZXNbbW9kdWxlSWRdLmNhbGwobW9kdWxlLmV4cG9ydHMsIG1vZHVsZSwgbW9kdWxlLmV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pO1xuXG4gXHRcdC8vIEZsYWcgdGhlIG1vZHVsZSBhcyBsb2FkZWRcbiBcdFx0bW9kdWxlLmwgPSB0cnVlO1xuXG4gXHRcdC8vIFJldHVybiB0aGUgZXhwb3J0cyBvZiB0aGUgbW9kdWxlXG4gXHRcdHJldHVybiBtb2R1bGUuZXhwb3J0cztcbiBcdH1cblxuXG4gXHQvLyBleHBvc2UgdGhlIG1vZHVsZXMgb2JqZWN0IChfX3dlYnBhY2tfbW9kdWxlc19fKVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5tID0gbW9kdWxlcztcblxuIFx0Ly8gZXhwb3NlIHRoZSBtb2R1bGUgY2FjaGVcbiBcdF9fd2VicGFja19yZXF1aXJlX18uYyA9IGluc3RhbGxlZE1vZHVsZXM7XG5cbiBcdC8vIGlkZW50aXR5IGZ1bmN0aW9uIGZvciBjYWxsaW5nIGhhcm1vcnkgaW1wb3J0cyB3aXRoIHRoZSBjb3JyZWN0IGNvbnRleHRcbiBcdF9fd2VicGFja19yZXF1aXJlX18uaSA9IGZ1bmN0aW9uKHZhbHVlKSB7IHJldHVybiB2YWx1ZTsgfTtcblxuIFx0Ly8gZGVmaW5lIGdldHRlciBmdW5jdGlvbiBmb3IgaGFybW9yeSBleHBvcnRzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQgPSBmdW5jdGlvbihleHBvcnRzLCBuYW1lLCBnZXR0ZXIpIHtcbiBcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIG5hbWUsIHtcbiBcdFx0XHRjb25maWd1cmFibGU6IGZhbHNlLFxuIFx0XHRcdGVudW1lcmFibGU6IHRydWUsXG4gXHRcdFx0Z2V0OiBnZXR0ZXJcbiBcdFx0fSk7XG4gXHR9O1xuXG4gXHQvLyBnZXREZWZhdWx0RXhwb3J0IGZ1bmN0aW9uIGZvciBjb21wYXRpYmlsaXR5IHdpdGggbm9uLWhhcm1vbnkgbW9kdWxlc1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5uID0gZnVuY3Rpb24obW9kdWxlKSB7XG4gXHRcdHZhciBnZXR0ZXIgPSBtb2R1bGUgJiYgbW9kdWxlLl9fZXNNb2R1bGUgP1xuIFx0XHRcdGZ1bmN0aW9uIGdldERlZmF1bHQoKSB7IHJldHVybiBtb2R1bGVbJ2RlZmF1bHQnXTsgfSA6XG4gXHRcdFx0ZnVuY3Rpb24gZ2V0TW9kdWxlRXhwb3J0cygpIHsgcmV0dXJuIG1vZHVsZTsgfTtcbiBcdFx0X193ZWJwYWNrX3JlcXVpcmVfXy5kKGdldHRlciwgJ2EnLCBnZXR0ZXIpO1xuIFx0XHRyZXR1cm4gZ2V0dGVyO1xuIFx0fTtcblxuIFx0Ly8gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm8gPSBmdW5jdGlvbihvYmplY3QsIHByb3BlcnR5KSB7IHJldHVybiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqZWN0LCBwcm9wZXJ0eSk7IH07XG5cbiBcdC8vIF9fd2VicGFja19wdWJsaWNfcGF0aF9fXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnAgPSBcIlwiO1xuXG4gXHQvLyBMb2FkIGVudHJ5IG1vZHVsZSBhbmQgcmV0dXJuIGV4cG9ydHNcbiBcdHJldHVybiBfX3dlYnBhY2tfcmVxdWlyZV9fKF9fd2VicGFja19yZXF1aXJlX18ucyA9IFwiLi9zcmMvbWFpbi5qc1wiKTtcblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyB3ZWJwYWNrL2Jvb3RzdHJhcCA1ZmU5OTU3MDBjNDVkMTgxZGI1ZiIsIm1vZHVsZS5leHBvcnRzID0ge1xuICAvLyBfX0RFVl9fOiB0cnVlLFxufTtcblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL3NyYy9jb25maWcuanMiLCJpbXBvcnQgZWxlY3Ryb24gZnJvbSAnZWxlY3Ryb24nO1xuaW1wb3J0IHBhdGggZnJvbSAncGF0aCc7XG5pbXBvcnQgXyBmcm9tICdsb2Rhc2gnO1xuXG5pbXBvcnQgTWVudSBmcm9tICcuL3JlbW90ZS9NZW51JztcblxuaW1wb3J0IGNvbmZpZyBmcm9tICcuL2NvbmZpZyc7XG5cbmltcG9ydCB7IFByb2plY3QgfSBmcm9tICd4ZGwnO1xuXG5jb25zdCB7XG4gIGFwcCxcbiAgQnJvd3NlcldpbmRvdyxcbiAgaXBjTWFpbixcbn0gPSBlbGVjdHJvbjtcblxuaWYgKCFyZXF1aXJlKCdlbGVjdHJvbi1zcXVpcnJlbC1zdGFydHVwJykpIHtcbiAgLy8gUmVwb3J0IGNyYXNoZXMgdG8gb3VyIHNlcnZlci5cbiAgLy8gZWxlY3Ryb24uQ3Jhc2hSZXBvcnRlci5zdGFydCgpO1xuXG4gIC8vIEtlZXAgYSBnbG9iYWwgcmVmZXJlbmNlIG9mIHRoZSB3aW5kb3cgb2JqZWN0LCBpZiB5b3UgZG9uJ3QsIHRoZSB3aW5kb3cgd2lsbFxuICAvLyBiZSBjbG9zZWQgYXV0b21hdGljYWxseSB3aGVuIHRoZSBKYXZhU2NyaXB0IG9iamVjdCBpcyBHQ2VkLlxuICBsZXQgbWFpbldpbmRvdyA9IG51bGw7XG4gIGxldCBwcm9qZWN0Um9vdHMgPSBbXTtcblxuICBpcGNNYWluLm9uKCdwcm9qZWN0LW9wZW5lZCcsIChldmVudCwgcHJvamVjdFJvb3QpID0+IHtcbiAgICBjb25zb2xlLmxvZyhgT3BlbmVkIHByb2plY3QgYXQgJHtwcm9qZWN0Um9vdH1gKTtcbiAgICBwcm9qZWN0Um9vdHMucHVzaChwcm9qZWN0Um9vdCk7XG5cbiAgICBNZW51LnNldHVwTWVudShtYWluV2luZG93LCB0cnVlKTtcbiAgfSk7XG5cbiAgaXBjTWFpbi5vbigncHJvamVjdC1jbG9zZWQnLCAoZXZlbnQsIHByb2plY3RSb290KSA9PiB7XG4gICAgY29uc29sZS5sb2coYENsb3NlZCBwcm9qZWN0IGF0ICR7cHJvamVjdFJvb3R9YCk7XG4gICAgcHJvamVjdFJvb3RzID0gXy53aXRob3V0KHByb2plY3RSb290cywgcHJvamVjdFJvb3QpO1xuXG4gICAgTWVudS5zZXR1cE1lbnUobWFpbldpbmRvdywgZmFsc2UpO1xuICB9KTtcblxuICBhcHAub24oJ3dpbmRvdy1hbGwtY2xvc2VkJywgKCkgPT4ge1xuICAgIGFwcC5xdWl0KCk7XG4gIH0pO1xuXG4gIC8vIENsZWFuIHVwIGFsbCBvcGVuIHByb2plY3RzIGJlZm9yZSBleGl0aW5nXG4gIGFwcC5vbignd2lsbC1xdWl0JywgYXN5bmMgKGV2ZW50KSA9PiB7XG4gICAgaWYgKHByb2plY3RSb290cy5sZW5ndGggPiAwKSB7XG4gICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuXG4gICAgICB0cnkge1xuICAgICAgICBhd2FpdCBQcm9taXNlLmFsbChwcm9qZWN0Um9vdHMubWFwKHJvb3QgPT4gUHJvamVjdC5zdG9wQXN5bmMocm9vdCkpKTtcbiAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgLy8gbm90IG11Y2ggd2UgY2FuIGRvIGhlcmVcbiAgICAgICAgY29uc29sZS5lcnJvcihlKTtcbiAgICAgIH1cbiAgICAgIHByb2plY3RSb290cyA9IFtdO1xuXG4gICAgICBhcHAucXVpdCgpO1xuICAgIH1cbiAgfSk7XG5cbiAgYXBwLm9uKCdyZWFkeScsICgpID0+IHtcbiAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdkZXZlbG9wbWVudCcpIHtcbiAgICAgIGNvbnN0IGRldlRvb2xzSW5zdGFsbGVyID0gcmVxdWlyZSgnZWxlY3Ryb24tZGV2dG9vbHMtaW5zdGFsbGVyJyk7XG4gICAgICBjb25zdCB7IGRlZmF1bHQ6IGluc3RhbGxFeHRlbnNpb24sIFJFQUNUX0RFVkVMT1BFUl9UT09MUyB9ID0gZGV2VG9vbHNJbnN0YWxsZXI7XG5cbiAgICAgIGluc3RhbGxFeHRlbnNpb24oUkVBQ1RfREVWRUxPUEVSX1RPT0xTKVxuICAgICAgICAudGhlbigobmFtZSkgPT4gY29uc29sZS5sb2coYEFkZGVkIEV4dGVuc2lvbjogICR7bmFtZX1gKSlcbiAgICAgICAgLmNhdGNoKChlcnIpID0+IGNvbnNvbGUubG9nKCdBbiBlcnJvciBvY2N1cnJlZDogJywgZXJyKSk7XG4gICAgfVxuICAgIC8vIENyZWF0ZSB0aGUgYnJvd3NlciB3aW5kb3cuXG4gICAgbWFpbldpbmRvdyA9IG5ldyBCcm93c2VyV2luZG93KHtcbiAgICAgIHdpZHRoOiAxMjAwLFxuICAgICAgaGVpZ2h0OiA4MDAsXG4gICAgICBtaW5XaWR0aDogNzAwLFxuICAgICAgbWluSGVpZ2h0OiA1MDAsXG4gICAgICAvLyBmb3Igd2luZG93cy4gb3N4IGdldHMgaWNvbiBmcm9tIHBvc3QgaW5zdGFsbCB0YXNrXG4gICAgICBpY29uOiBwYXRoLnJlc29sdmUoX19kaXJuYW1lLCAnLi4vYnVpbGQveGRlLmljbycpLFxuICAgIH0pO1xuICAgIG1haW5XaW5kb3cubG9hZFVSTChgZmlsZTovLyR7cGF0aC5yZXNvbHZlKF9fZGlybmFtZSwgJy4uL3dlYi9pbmRleC5odG1sJyl9YCk7XG5cbiAgICAvLyBPcGVuIHRoZSBkZXZ0b29scy5cbiAgICBpZiAoY29uZmlnLl9fREVWX18pIHtcbiAgICAgIG1haW5XaW5kb3cub3BlbkRldlRvb2xzKCk7XG4gICAgfVxuXG4gICAgLy8gU2V0dXAgdGhlIG1lbnUgYmFyXG4gICAgTWVudS5zZXR1cE1lbnUobWFpbldpbmRvdywgZmFsc2UpO1xuXG4gICAgbWFpbldpbmRvdy5vbignY2xvc2VkJywgKCkgPT4ge1xuICAgICAgLy8gRGVyZWZlcmVuY2UgdGhlIHdpbmRvdyBvYmplY3QsIHVzdWFsbHkgeW91IHdvdWxkIHN0b3JlIHdpbmRvd3NcbiAgICAgIC8vIGluIGFuIGFycmF5IGlmIHlvdXIgYXBwIHN1cHBvcnRzIG11bHRpIHdpbmRvd3MsIHRoaXMgaXMgdGhlIHRpbWVcbiAgICAgIC8vIHdoZW4geW91IHNob3VsZCBkZWxldGUgdGhlIGNvcnJlc3BvbmRpbmcgZWxlbWVudC5cbiAgICAgIG1haW5XaW5kb3cgPSBudWxsO1xuICAgIH0pO1xuXG5cbiAgICBsZXQgd2ViQ29udGVudHMgPSBtYWluV2luZG93LndlYkNvbnRlbnRzO1xuICAgICAgdmFyIGhhbmRsZVJlZGlyZWN0ID0gKGUsIHVybCkgPT4ge1xuICAgICAgICBpZiAodXJsICE9PSB3ZWJDb250ZW50cy5nZXRVUkwoKSkge1xuICAgICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgICByZXF1aXJlKCdlbGVjdHJvbicpLnNoZWxsLm9wZW5FeHRlcm5hbCh1cmwpO1xuICAgICAgICB9XG4gICAgICB9O1xuXG4gICAgICB3ZWJDb250ZW50cy5vbignd2lsbC1uYXZpZ2F0ZScsIGhhbmRsZVJlZGlyZWN0KTtcbiAgICAgIHdlYkNvbnRlbnRzLm9uKCduZXctd2luZG93JywgaGFuZGxlUmVkaXJlY3QpO1xuICB9KTtcbn1cblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL3NyYy9tYWluLmpzIiwiaW1wb3J0IHtcbiAgQnJvd3NlcldpbmRvdyxcbiAgTWVudSxcbn0gZnJvbSAnZWxlY3Ryb24nO1xuXG5mdW5jdGlvbiBfaW5zdGFsbFNoZWxsQ29tbWFuZHMod2luZG93LCBpc1Byb2plY3RPcGVuKSB7XG4gIGlmIChwcm9jZXNzLnBsYXRmb3JtID09PSAnZGFyd2luJykge1xuICAgIHJldHVybiBbe1xuICAgICAgbGFiZWw6ICdJbnN0YWxsIFNoZWxsIENvbW1hbmRzJyxcbiAgICAgIGNsaWNrOiAoKSA9PiB7IHdpbmRvdy53ZWJDb250ZW50cy5zZW5kKCdtZW51LWl0ZW0tY2xpY2tlZCcsICdpbnN0YWxsLXNoZWxsLWNvbW1hbmRzJyk7IH0sXG4gICAgICBlbmFibGVkOiBpc1Byb2plY3RPcGVuLFxuICAgIH0sXG4gICAge1xuICAgICAgdHlwZTogJ3NlcGFyYXRvcicsXG4gICAgfV07XG4gIH0gZWxzZSB7XG4gICAgcmV0dXJuIFtdO1xuICB9XG59XG5cbmZ1bmN0aW9uIF9pbnN0YWxsSW9zU2ltdWxhdG9yQXBwKHdpbmRvdywgaXNQcm9qZWN0T3Blbikge1xuICBpZiAocHJvY2Vzcy5wbGF0Zm9ybSA9PT0gJ2RhcndpbicpIHtcbiAgICByZXR1cm4gW3tcbiAgICAgIGxhYmVsOiAnSW5zdGFsbCBpT1MgU2ltdWxhdG9yIEFwcCcsXG4gICAgICBjbGljazogKCkgPT4geyB3aW5kb3cud2ViQ29udGVudHMuc2VuZCgnbWVudS1pdGVtLWNsaWNrZWQnLCAnaW5zdGFsbC1pb3Mtc2ltdWxhdG9yLWFwcCcpOyB9LFxuICAgICAgZW5hYmxlZDogaXNQcm9qZWN0T3BlbixcbiAgICB9XTtcbiAgfSBlbHNlIHtcbiAgICByZXR1cm4gW107XG4gIH1cbn1cblxuZnVuY3Rpb24gc2V0dXBNZW51KHdpbmRvdywgaXNQcm9qZWN0T3Blbikge1xuICBsZXQgdGVtcGxhdGUgPSBbXG4gICAge1xuICAgICAgbGFiZWw6ICdFZGl0JyxcbiAgICAgIHN1Ym1lbnU6IFtcbiAgICAgICAge1xuICAgICAgICAgIHJvbGU6ICd1bmRvJyxcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgIHJvbGU6ICdyZWRvJyxcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgIHR5cGU6ICdzZXBhcmF0b3InLFxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgcm9sZTogJ2N1dCcsXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICByb2xlOiAnY29weScsXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICByb2xlOiAncGFzdGUnLFxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgcm9sZTogJ3NlbGVjdGFsbCcsXG4gICAgICAgIH0sXG4gICAgICBdLFxuICAgIH0sXG4gICAge1xuICAgICAgbGFiZWw6ICdWaWV3JyxcbiAgICAgIHN1Ym1lbnU6IFtcbiAgICAgICAge1xuICAgICAgICAgIGxhYmVsOiAnUmVsb2FkJyxcbiAgICAgICAgICBhY2NlbGVyYXRvcjogcHJvY2Vzcy5wbGF0Zm9ybSA9PT0gJ2RhcndpbicgPyAnQWx0K0NvbW1hbmQrUicgOiAnQ3RybCtTaGlmdCtSJyxcbiAgICAgICAgICBjbGljazogKCkgPT4geyBCcm93c2VyV2luZG93LmdldEZvY3VzZWRXaW5kb3coKS5yZWxvYWQoKTsgfSxcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgIGxhYmVsOiAnVG9nZ2xlIERldlRvb2xzJyxcbiAgICAgICAgICBhY2NlbGVyYXRvcjogcHJvY2Vzcy5wbGF0Zm9ybSA9PT0gJ2RhcndpbicgPyAnQWx0K0NvbW1hbmQrSScgOiAnQ3RybCtTaGlmdCtJJyxcbiAgICAgICAgICBjbGljazogKCkgPT4geyBCcm93c2VyV2luZG93LmdldEZvY3VzZWRXaW5kb3coKS50b2dnbGVEZXZUb29scygpOyB9LFxuICAgICAgICB9LFxuICAgICAgXSxcbiAgICB9LFxuICAgIHtcbiAgICAgIGxhYmVsOiAnV2luZG93JyxcbiAgICAgIHJvbGU6ICd3aW5kb3cnLFxuICAgICAgc3VibWVudTogW1xuICAgICAgICB7XG4gICAgICAgICAgcm9sZTogJ21pbmltaXplJyxcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgIHJvbGU6ICdjbG9zZScsXG4gICAgICAgIH0sXG4gICAgICBdLFxuICAgIH0sXG4gICAge1xuICAgICAgbGFiZWw6ICdIZWxwJyxcbiAgICAgIHJvbGU6ICdoZWxwJyxcbiAgICAgIHN1Ym1lbnU6IFtcbiAgICAgICAge1xuICAgICAgICAgIGxhYmVsOiAnRXhwb25lbnQgRG9jdW1lbnRhdGlvbicsXG4gICAgICAgICAgY2xpY2s6ICgpID0+IHsgcmVxdWlyZSgnZWxlY3Ryb24nKS5zaGVsbC5vcGVuRXh0ZXJuYWwoJ2h0dHBzOi8vZG9jcy5nZXRleHBvbmVudC5jb20vJyk7IH0sXG4gICAgICAgIH0sXG4gICAgICBdLFxuICAgIH0sXG4gIF07XG5cbiAgaWYgKHByb2Nlc3MucGxhdGZvcm0gPT09ICdkYXJ3aW4nKSB7XG4gICAgdGVtcGxhdGUudW5zaGlmdCh7XG4gICAgICBsYWJlbDogJ0V4cG9uZW50IFhERScsXG4gICAgICBzdWJtZW51OiBbXG4gICAgICAgIHtcbiAgICAgICAgICByb2xlOiAnYWJvdXQnLFxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgdHlwZTogJ3NlcGFyYXRvcicsXG4gICAgICAgIH0sXG4gICAgICAgIC4uLl9pbnN0YWxsU2hlbGxDb21tYW5kcyh3aW5kb3csIGlzUHJvamVjdE9wZW4pLFxuICAgICAgICB7XG4gICAgICAgICAgbGFiZWw6ICdJbnN0YWxsIEFuZHJvaWQgQXBwJyxcbiAgICAgICAgICBjbGljazogKCkgPT4geyB3aW5kb3cud2ViQ29udGVudHMuc2VuZCgnbWVudS1pdGVtLWNsaWNrZWQnLCAnaW5zdGFsbC1hbmRyb2lkLWFwcCcpOyB9LFxuICAgICAgICAgIGVuYWJsZWQ6IGlzUHJvamVjdE9wZW4sXG4gICAgICAgIH0sXG4gICAgICAgIC4uLl9pbnN0YWxsSW9zU2ltdWxhdG9yQXBwKHdpbmRvdywgaXNQcm9qZWN0T3BlbiksXG4gICAgICAgIHtcbiAgICAgICAgICB0eXBlOiAnc2VwYXJhdG9yJyxcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgIHJvbGU6ICdzZXJ2aWNlcycsXG4gICAgICAgICAgc3VibWVudTogW10sXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICB0eXBlOiAnc2VwYXJhdG9yJyxcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgIHJvbGU6ICdoaWRlJyxcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgIHJvbGU6ICdoaWRlb3RoZXJzJyxcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgIHJvbGU6ICd1bmhpZGUnLFxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgdHlwZTogJ3NlcGFyYXRvcicsXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICByb2xlOiAncXVpdCcsXG4gICAgICAgIH0sXG4gICAgICBdLFxuICAgIH0pO1xuICAgIC8vIFdpbmRvdyBtZW51LlxuICAgIHRlbXBsYXRlWzNdLnN1Ym1lbnUgPSBbXG4gICAgICB7XG4gICAgICAgIGxhYmVsOiAnQ2xvc2UnLFxuICAgICAgICBhY2NlbGVyYXRvcjogJ0NtZE9yQ3RybCtXJyxcbiAgICAgICAgcm9sZTogJ2Nsb3NlJyxcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgIGxhYmVsOiAnTWluaW1pemUnLFxuICAgICAgICBhY2NlbGVyYXRvcjogJ0NtZE9yQ3RybCtNJyxcbiAgICAgICAgcm9sZTogJ21pbmltaXplJyxcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgIGxhYmVsOiAnWm9vbScsXG4gICAgICAgIHJvbGU6ICd6b29tJyxcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgIHR5cGU6ICdzZXBhcmF0b3InLFxuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgbGFiZWw6ICdCcmluZyBBbGwgdG8gRnJvbnQnLFxuICAgICAgICByb2xlOiAnZnJvbnQnLFxuICAgICAgfSxcbiAgICBdO1xuICB9IGVsc2Uge1xuICAgIHRlbXBsYXRlLnVuc2hpZnQoe1xuICAgICAgbGFiZWw6ICdFeHBvbmVudCBYREUnLFxuICAgICAgc3VibWVudTogW1xuICAgICAgICAuLi5faW5zdGFsbFNoZWxsQ29tbWFuZHMod2luZG93LCBpc1Byb2plY3RPcGVuKSxcbiAgICAgICAge1xuICAgICAgICAgIGxhYmVsOiAnSW5zdGFsbCBBbmRyb2lkIEFwcCcsXG4gICAgICAgICAgY2xpY2s6ICgpID0+IHsgd2luZG93LndlYkNvbnRlbnRzLnNlbmQoJ21lbnUtaXRlbS1jbGlja2VkJywgJ2luc3RhbGwtYW5kcm9pZC1hcHAnKTsgfSxcbiAgICAgICAgICBlbmFibGVkOiBpc1Byb2plY3RPcGVuLFxuICAgICAgICB9LFxuICAgICAgICAuLi5faW5zdGFsbElvc1NpbXVsYXRvckFwcCh3aW5kb3csIGlzUHJvamVjdE9wZW4pLFxuICAgICAgXSxcbiAgICB9KTtcbiAgfVxuXG4gIGxldCBtZW51ID0gTWVudS5idWlsZEZyb21UZW1wbGF0ZSh0ZW1wbGF0ZSk7XG4gIE1lbnUuc2V0QXBwbGljYXRpb25NZW51KG1lbnUpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgc2V0dXBNZW51LFxufTtcblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL3NyYy9yZW1vdGUvTWVudS5qcyIsIm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnZWxlY3Ryb24nKTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyBleHRlcm5hbCBcInJlcXVpcmUoJ2VsZWN0cm9uJylcIlxuLy8gbW9kdWxlIGlkID0gMFxuLy8gbW9kdWxlIGNodW5rcyA9IDAiLCJtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJ2JhYmVsLXJ1bnRpbWUvY29yZS1qcy9wcm9taXNlJyk7XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gZXh0ZXJuYWwgXCJyZXF1aXJlKCdiYWJlbC1ydW50aW1lL2NvcmUtanMvcHJvbWlzZScpXCJcbi8vIG1vZHVsZSBpZCA9IDFcbi8vIG1vZHVsZSBjaHVua3MgPSAwIiwibW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCdiYWJlbC1ydW50aW1lL2hlbHBlcnMvYXN5bmNUb0dlbmVyYXRvcicpO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIGV4dGVybmFsIFwicmVxdWlyZSgnYmFiZWwtcnVudGltZS9oZWxwZXJzL2FzeW5jVG9HZW5lcmF0b3InKVwiXG4vLyBtb2R1bGUgaWQgPSAyXG4vLyBtb2R1bGUgY2h1bmtzID0gMCIsIm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnZWxlY3Ryb24tc3F1aXJyZWwtc3RhcnR1cCcpO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIGV4dGVybmFsIFwicmVxdWlyZSgnZWxlY3Ryb24tc3F1aXJyZWwtc3RhcnR1cCcpXCJcbi8vIG1vZHVsZSBpZCA9IDNcbi8vIG1vZHVsZSBjaHVua3MgPSAwIiwibW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCdsb2Rhc2gnKTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyBleHRlcm5hbCBcInJlcXVpcmUoJ2xvZGFzaCcpXCJcbi8vIG1vZHVsZSBpZCA9IDRcbi8vIG1vZHVsZSBjaHVua3MgPSAwIiwibW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCdwYXRoJyk7XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gZXh0ZXJuYWwgXCJyZXF1aXJlKCdwYXRoJylcIlxuLy8gbW9kdWxlIGlkID0gNVxuLy8gbW9kdWxlIGNodW5rcyA9IDAiLCJtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJ3hkbCcpO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIGV4dGVybmFsIFwicmVxdWlyZSgneGRsJylcIlxuLy8gbW9kdWxlIGlkID0gNlxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwic291cmNlUm9vdCI6IiJ9